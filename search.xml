<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>windows 下安装mongodb 机器可视化工具adminMongo</title>
    <url>/2020/06/11/windows%20%E4%B8%8B%E5%AE%89%E8%A3%85mongodb%20%E6%9C%BA%E5%99%A8%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7adminMongo/</url>
    <content><![CDATA[<h1 id="windows-下安装mongodb-机器可视化工具adminMongo"><a href="#windows-下安装mongodb-机器可视化工具adminMongo" class="headerlink" title="windows 下安装mongodb 机器可视化工具adminMongo"></a>windows 下安装mongodb 机器可视化工具adminMongo</h1><h2 id="安装Mongodb"><a href="#安装Mongodb" class="headerlink" title="安装Mongodb"></a>安装Mongodb</h2><h3 id="至Mongodb的-官方网站下载安装包。"><a href="#至Mongodb的-官方网站下载安装包。" class="headerlink" title="至Mongodb的 官方网站下载安装包。"></a>至Mongodb的 官方网站下载安装包。</h3><blockquote>
<p>地址<a href="https://www.mongodb.com/download-center#community" target="_blank" rel="noopener">https://www.mongodb.com/download-center#community</a> ，zip,msi均可。</p>
</blockquote>
<blockquote>
<p>官网下载比较慢，可以用我分享在百度网盘上的，</p>
<p>链接：<a href="https://pan.baidu.com/s/1qsCni7Z_xV5dIBY7o3UDjg" target="_blank" rel="noopener">https://pan.baidu.com/s/1qsCni7Z_xV5dIBY7o3UDjg</a>  提取码：f2l7 ，压缩包解压密码：666666</p>
<p>zip格式和msi格式都有，截止到今日（2021.6.9）是官网发布的最新版本。</p>
</blockquote>
<h3 id="Mongodb-的安装"><a href="#Mongodb-的安装" class="headerlink" title="Mongodb 的安装"></a>Mongodb 的安装</h3><blockquote>
<p>msi安装起来很简单,一直下一步就好，可以自己选择喜欢的安装路径，新手最好安装我的路径方式来，文件存放之如下目录：F:\MongoDB\mongoDB\ 。</p>
<p>zip安装也很简单，直接将解压的包放在喜欢的位置下即可，最好也是如下目录：F:\MongoDB\mongoDB\。</p>
</blockquote>
<blockquote>
<p>接下来我们要将这个文件的 bin 目录，即：F:\MongoDB\mongoDB\mongodb-win32-x86_64-2012plus-4.2.7\bin配置在我们的 Windows 环境变量的 Path 中。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200614195733.png" alt="image-20200614195527784"></p>
</blockquote>
<blockquote>
<p>配置步骤:</p>
<p>我的电脑–属性–高级系统设置–高级–环境变量–找到系统变量下的Path–加入路径即可</p>
</blockquote>
<h3 id="创建数据库文件的存放位置"><a href="#创建数据库文件的存放位置" class="headerlink" title="创建数据库文件的存放位置"></a>创建数据库文件的存放位置</h3><blockquote>
<p>在MongoDB下创建data，在data下再创建db：F:\MongoDB\data\db</p>
</blockquote>
<p>因为启动mongodb服务之前需要必须创建数据库文件的存放文件夹，否则命令不会自动创建，而且不能启动成功。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200615091626.png" alt="image-20200615091626563"></p>
<h3 id="启动Mongodb-服务"><a href="#启动Mongodb-服务" class="headerlink" title="启动Mongodb 服务"></a>启动Mongodb 服务</h3><blockquote>
<p>打开 cmd ，输入mongod –dbpath F:\MongoDB\data\db即可，这个–dbpath 后的位置就是我们刚刚配置数据库的位置。</p>
</blockquote>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote>
<p>在浏览器输入<a href="http://localhost:27017" target="_blank" rel="noopener">http://localhost:27017</a> （27017是mongodb的端口号）查看，若网页</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It looks like you are trying to access MongoDB over HTTP on the native driver port.</span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示以上英文则表示启动成功啦~~</p>
</blockquote>
<h3 id="配置一下本地的-windows-mongodb-服务"><a href="#配置一下本地的-windows-mongodb-服务" class="headerlink" title="配置一下本地的 windows mongodb 服务"></a>配置一下本地的 windows mongodb 服务</h3><blockquote>
<p>这样可设置为 开机自启动，可直接手动启动关闭，可通过命令行net start MongoDB 启动。该配置会大大方便。</p>
</blockquote>
<ol>
<li><p>先在data文件下创建一个新文件夹log（用来存放日志文件）</p>
</li>
<li><p>在Mongodb bin 同等级目录下新建配置文件mongo.config,并输入以下内容：</p>
<blockquote>
<p>dbpath=F:\MongoDB\data\db<br>logpath=F:\MongoDB\data\log\mongodb.log</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200615092031.png" alt="image-20200614200342044"></p>
</li>
<li><p>以管理员身份打开cmd,运行以下命令：</p>
<blockquote>
<p>mongod –config F:\MongoDB\mongoDB\mongodb-win32-x86_64-2012plus-4.2.7\mongo.config –install –serviceName “MongoDB”</p>
<p>F:\MongoDB\mongoDB\mongodb-win32-x86_64-2012plus-4.2.7\mongo.config  是你的路径名。</p>
</blockquote>
</li>
<li><p>完成后查看本地服务，发现MongoDB已启动。</p>
</li>
</ol>
<p>至此Mongodb的安装及配置已圆满完成。</p>
<h1 id="安装adminMongo"><a href="#安装adminMongo" class="headerlink" title="安装adminMongo"></a>安装adminMongo</h1><h3 id="git环境搭建"><a href="#git环境搭建" class="headerlink" title="git环境搭建"></a>git环境搭建</h3><blockquote>
<p>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a><br> 安装完成后，找到安装git的目录下的git-bash.exe,打开，进行配置：</p>
<p>配置环境变量：在path环境变量中新增git安装路径下的bin文件夹路径</p>
</blockquote>
<h3 id="node-js环境搭建"><a href="#node-js环境搭建" class="headerlink" title="node.js环境搭建"></a>node.js环境搭建</h3><blockquote>
<p>下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p>
<p>安装完成后，打开<code>cmd</code>，输入 <code>node -v</code>，检查是否显示版本信息，如果显示即安装成功。</p>
<p>打开cmd，输入npm -v校验npm工具是否安装成功，npm的作用就是对Node.js依赖的包进行管理，也可以理解为用来安装/卸载Node.js需要装的东西.</p>
<p>npm安装成功，在安装目录下新建node_cache，并使用cmd命令指定这个变量：</p>
<blockquote>
<p>npm config set cache “D:\Develop\nodejs\node_cache”</p>
</blockquote>
</blockquote>
<h3 id="adminMongo下载安装"><a href="#adminMongo下载安装" class="headerlink" title="adminMongo下载安装"></a>adminMongo下载安装</h3><blockquote>
<ol>
<li>git下将adminMongo源码从github上clone下来：</li>
</ol>
<p>git clone <a href="https://github.com/mrvautin/adminMongo.git" target="_blank" rel="noopener">https://github.com/mrvautin/adminMongo.git</a></p>
<ol start="2">
<li>进入adminMongo路径：</li>
</ol>
<p>cd adminMongo</p>
<ol start="3">
<li>安装依赖：</li>
</ol>
<p>npm install</p>
<ol start="4">
<li>启动应用：</li>
</ol>
<p>npm start </p>
</blockquote>
<h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><p>输入 <a href="http://127.0.0.1:1234" target="_blank" rel="noopener">http://127.0.0.1:1234</a> 就会弹出adminMongo 的界面啦</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200615092059.png" alt="image-20200614200653014"></p>
<h3 id="添加mongodb到adminMongo"><a href="#添加mongodb到adminMongo" class="headerlink" title="添加mongodb到adminMongo"></a>添加mongodb到adminMongo</h3><p> 分别填入：<br> Connection name： local<br> Connection string： <a href="mongodb://localhost:27017">mongodb://localhost:27017</a><br> 点击 <code>Add Connection</code>按钮即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200615092209.png" alt="image-20200614200745468"></p>
]]></content>
  </entry>
  <entry>
    <title>Markdown 语法入门</title>
    <url>/2020/05/23/Markdown%20%E8%AF%AD%E6%B3%95%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。本文是以实现日常书写个人博客所需而编写。语法超级简单，几分钟掌握Markdown语法。</p>
<h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>使用 # 号标记标题（1~6级）</p>
<blockquote>
<p># 一级标题</p>
<p>## 二级标题</p>
<p>……..</p>
<p>###### 六级标题</p>
</blockquote>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>段落的换行是使用两个以上的空格加上回车  </p>
<p>或者使用空行来换行</p>
<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><blockquote>
<p>*斜体文本*</p>
<p>_斜体文本_</p>
<p>**粗体文本**</p>
<p>__粗体文本__</p>
<p>***粗斜体文本***</p>
<p>___粗斜体文本___</p>
</blockquote>
<h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>可采用下述几种方法创建分割线</p>
<blockquote>
<p>***</p>
<p>*****</p>
<p>------</p>
<p>----------------</p>
</blockquote>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><blockquote>
<p>文字两端添加双波浪线</p>
<p>示例:</p>
<p>~~ABC~~</p>
<p>效果:</p>
<p><del>ABC</del></p>
</blockquote>
<h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><blockquote>
<p>下划线可以通过HTML的&lt;u&gt;标签来实现</p>
<p>示例:</p>
<p>&lt;u&gt;下划线文字&lt;/u&gt;</p>
<p>效果:</p>
<p><u>下划线文字</u></p>
</blockquote>
<h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><blockquote>
<p>示例:</p>
<p>脚注是对文本的补充说明，格式为[^文字]</p>
<p>效果:</p>
<p>脚注是对文本的补充说明，格式为[^脚注文字]</p>
</blockquote>
<p>[^脚注文字]: yeah, it’s me#</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><blockquote>
<p>无序列表采用星号（*）、加号（+）、或是减号（-）作为列表标记</p>
<p>示例:</p>
<p>* 第一</p>
<p>+ 第二</p>
<p>- 第三</p>
<p>效果如下：</p>
<ul>
<li>第一</li>
</ul>
<ul>
<li>第二</li>
</ul>
<ul>
<li>第三</li>
</ul>
</blockquote>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><blockquote>
<p>有序列表使用数字加上 . 来表示</p>
<p>示例:</p>
<p>1.  第一</p>
<p>2. 第二</p>
<p>3. 第三</p>
<p>效果：</p>
<ol>
<li>第一</li>
<li>第二</li>
<li>第三</li>
</ol>
</blockquote>
<h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><blockquote>
<p>列表的嵌套，只需在子列表中的选项添加tab键即可</p>
<p>示例：</p>
<p>1. 第一项：</p>
<p>​    第一项嵌套的</p>
<p>2. 第二项：</p>
<p>​    第二项嵌套的</p>
<p>效果：</p>
<ol>
<li>第一项：<ol>
<li>第一项嵌套的</li>
</ol>
</li>
<li>第二项：<ol>
<li>第二项嵌套的</li>
</ol>
</li>
</ol>
</blockquote>
<h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><blockquote>
<p> 区块是段落开头的使用的 &gt; 号，后面紧跟着一个空格</p>
<p> 示例：</p>
<p> &gt; 区块的引用</p>
<p> &gt; 我是区块</p>
<p> 效果：</p>
<blockquote>
<p>区块的引用</p>
<p>我是区块</p>
</blockquote>
</blockquote>
<blockquote>
<p>区块之间也是可以嵌套的</p>
<p>示例：</p>
<p>&gt; 第一层</p>
<p>&gt; &gt; 第二层</p>
<p>&gt; &gt; &gt; 第三层</p>
<p>效果：</p>
<blockquote>
<p>第一层</p>
<blockquote>
<p>第二层</p>
<blockquote>
<p>第三层</p>
</blockquote>
</blockquote>
</blockquote>
<p>注：列表中放入区块需在 &gt; 前输入tab键</p>
</blockquote>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><blockquote>
<p>如果是一个函数或片段的代码可以使用反引号包裹起来</p>
<p>示例：</p>
<p>`printf()` </p>
<p>效果：</p>
<p><code>printf()</code></p>
</blockquote>
<blockquote>
<p>代码区块使用三个反引号包裹</p>
<p>示例:</p>
<p>```int main(){</p>
<p>​    int i = 0;    </p>
<p>​    return 0;</p>
<p>}```</p>
<p>效果:</p>
<figure class="highlight plain"><figcaption><span>main()&#123;</span></figcaption><table><tr><td class="code"><pre><span class="line">int i&#x3D;0;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><blockquote>
<p>链接的使用方法</p>
</blockquote>
<p>1.[]后跟()</p>
<blockquote>
<p>示例:</p>
<p>[我的github](<a href="https://github.com/llz-github" target="_blank" rel="noopener">https://github.com/llz-github</a>)</p>
<p>效果:</p>
<p><a href="https://github.com/llz-github" target="_blank" rel="noopener">我的github</a></p>
</blockquote>
<p>2.直接使用&lt;&gt;</p>
<blockquote>
<p>示例:</p>
<p>&lt;<a href="https://github.com/llz-github&gt;" target="_blank" rel="noopener">https://github.com/llz-github&gt;</a></p>
<p>效果:</p>
<p><a href="https://github.com/llz-github" target="_blank" rel="noopener">https://github.com/llz-github</a></p>
</blockquote>
<p>3.通过变量设置连接</p>
<blockquote>
<p>示例:</p>
<p>这里使用1作为网址连接我的[github][1]</p>
<p>这里使用2作为网址连接我的[github][2]</p>
<p>[1]:<a href="https://github.com/llz-github" target="_blank" rel="noopener">https://github.com/llz-github</a></p>
<p>[2]:<a href="https://github.com/llz-github" target="_blank" rel="noopener">https://github.com/llz-github</a></p>
<p>效果:</p>
<p>这里使用1作为网址连接我的<a href="https://github.com/llz-github" target="_blank" rel="noopener">github</a></p>
<p>这里使用2作为网址连接我的<a href="https://github.com/llz-github" target="_blank" rel="noopener">github</a></p>
</blockquote>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><blockquote>
<p>图片语法格式 ![图片的替代文字](图片地址)</p>
<p>示例:</p>
<p>![](<a href="https://images5.alphacoders.com/532/532559.jpg" target="_blank" rel="noopener">https://images5.alphacoders.com/532/532559.jpg</a>)</p>
<p>效果:</p>
<p><img src="https://images5.alphacoders.com/532/532559.jpg" alt=""></p>
</blockquote>
<blockquote>
<p>我们也可以像对网址那样对待图片</p>
<p>示例:</p>
<p>这是一个[图片][3]</p>
<p>[3]:<a href="https://images5.alphacoders.com/532/532559.jpg" target="_blank" rel="noopener">https://images5.alphacoders.com/532/532559.jpg</a></p>
<p>效果:</p>
<p>这是一个<a href="https://images5.alphacoders.com/532/532559.jpg" target="_blank" rel="noopener">图片</a></p>
</blockquote>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><blockquote>
<p>示例:</p>
<p>| 姓名| 性别| 学号</p>
<p>| - | - | -</p>
<p>| lz | 男 | 01</p>
<p>| zl | 男 | 02</p>
<p>| ly | 女 | 03</p>
<p>效果 :</p>
<table>
<thead>
<tr>
<th>姓名</th>
<th>性别</th>
<th>学号</th>
</tr>
</thead>
<tbody><tr>
<td>lz</td>
<td>男</td>
<td>01</td>
</tr>
<tr>
<td>zl</td>
<td>男</td>
<td>02</td>
</tr>
<tr>
<td>ly</td>
<td>女</td>
<td>03</td>
</tr>
</tbody></table>
</blockquote>
<h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><p>接下来再给大家介绍一下快捷键的应用,</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>语法</th>
<th>快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>标题</td>
<td>用#号表示，#一级标题，##表示二级标题，依次类推</td>
<td>Ctrl+1、2、3、4</td>
</tr>
<tr>
<td>字体加粗</td>
<td>左右用**包裹起来</td>
<td>Ctrl+B</td>
</tr>
<tr>
<td>斜体字</td>
<td>左右用*包裹起来</td>
<td>Ctrl+I</td>
</tr>
<tr>
<td>加粗斜体</td>
<td>左右用**包裹起来</td>
<td>Ctrl+B,Ctrl+I</td>
</tr>
<tr>
<td>&gt;区块</td>
<td>在文字开头添加&gt;表示区块说明</td>
<td>Ctrl+Q</td>
</tr>
<tr>
<td>代码块</td>
<td>通过或者4个空格缩进表示</td>
<td>Ctrl+K</td>
</tr>
<tr>
<td>无序列表</td>
<td>文字前加上 - 或 * 即可变为无序列表</td>
<td>Ctrl+U</td>
</tr>
<tr>
<td>有序列表</td>
<td>直接在文字前加1. 2.符号要和文字之间加上一个字符的空格表示</td>
<td>Ctrl+O</td>
</tr>
<tr>
<td>链接</td>
<td>通过<a href="www.baidu.com">百度</a>写法表示超链接</td>
<td>Ctrl+L</td>
</tr>
<tr>
<td>图片</td>
<td>在光标所在行插入图片</td>
<td>Ctrl+G</td>
</tr>
<tr>
<td>时间戳</td>
<td></td>
<td>Ctrl+T</td>
</tr>
</tbody></table>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="支持HTML元素"><a href="#支持HTML元素" class="headerlink" title="支持HTML元素"></a>支持HTML元素</h2><blockquote>
<p>HTML中的元素例如&lt;br&gt;等都可以在文档中实现</p>
<p>示例：</p>
<p>&lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;Atl&lt;/kbd&gt; + &lt;kbd&gt;z&lt;/kbd&gt;调出QQ </p>
<p>效果：</p>
<p>ctrl + Alt + z调出QQ</p>
</blockquote>
<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><blockquote>
<p>当你需要输入一些特殊字符时,例如:* [] (),我们就需要用到转义字符 \ </p>
<p>在需要的符号前输入 \ ,则保持原符号.</p>
<p>示例:</p>
<p>\_我应该是斜体文本\_</p>
<p>效果:》</p>
<p>_我应该是斜体文本斜体文本_</p>
</blockquote>
<p>以上便是 Markdown 中常用到的语法，在此留下足迹以备用。</p>
]]></content>
  </entry>
  <entry>
    <title>python爬虫设置随机ip和User-Agent</title>
    <url>/2020/06/13/python%E7%88%AC%E8%99%AB%E8%AE%BE%E7%BD%AE%E9%9A%8F%E6%9C%BAip%E5%92%8CUser-Agent/</url>
    <content><![CDATA[<p>在python 数据爬取的时候，有些网站不会同意我们直接用爬虫访问爬取，如果识别是一个爬虫在访问，那么站点根本不会响应。不仅如此，当服务器觉得一个频繁的请求是来自于同一个IP地址发出的，服务器也会对IP进行限制访问。</p>
<blockquote>
<p>针对以上问题，我们也有相应的方法应对：</p>
</blockquote>
<p>1.对于服务器的爬虫识别问题，我们可以利用User-Agent标识将爬虫伪装成用户请求。</p>
<p>2.对于限制ip 的问题，我们可以使用代理ip ，随机切换IP地址，不使用真实的IP来发起请求。</p>
<blockquote>
<p>获取随机ip 和User-Agent 的文件 random_ip_and_header.py</p>
</blockquote>
<blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">get_xici_ip</span><span class="params">()</span>:</span></span><br><span class="line"> <span class="comment"># 尝试代理agents增强反反爬</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">random_agent</span><span class="params">(self)</span>:</span></span><br><span class="line">     user_agents = [</span><br><span class="line">         <span class="string">"Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_2 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8H7 Safari/6533.18.5"</span>,</span><br><span class="line">         <span class="string">"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_2 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8H7 Safari/6533.18.5"</span>,</span><br><span class="line">         <span class="string">"MQQBrowser/25 (Linux; U; 2.3.3; zh-cn; HTC Desire S Build/GRI40;480*800)"</span>,</span><br><span class="line">         <span class="string">"Mozilla/5.0 (Linux; U; Android 2.3.3; zh-cn; HTC_DesireS_S510e Build/GRI40) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1"</span>,</span><br><span class="line">         <span class="string">"Mozilla/5.0 (SymbianOS/9.3; U; Series60/3.2 NokiaE75-1 /110.48.125 Profile/MIDP-2.1 Configuration/CLDC-1.1 ) AppleWebKit/413 (KHTML, like Gecko) Safari/413"</span></span><br><span class="line">         <span class="string">'Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1'</span>,</span><br><span class="line">         <span class="string">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,</span><br><span class="line">         <span class="string">'Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11'</span></span><br><span class="line">         ]</span><br><span class="line">     <span class="keyword">return</span> random.choice(user_agents)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 尝试代理IP增强反反爬</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">get_ip_list</span><span class="params">(self, url, headers)</span>:</span></span><br><span class="line">     web_data = requests.get(url, headers=headers)</span><br><span class="line">     soup = BeautifulSoup(web_data.text, <span class="string">'lxml'</span>)</span><br><span class="line">     ips = soup.find_all(<span class="string">'tr'</span>)</span><br><span class="line">     ip_list = []</span><br><span class="line">     <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(ips)):</span><br><span class="line">         ip_info = ips[i]</span><br><span class="line">         tds = ip_info.find_all(<span class="string">'td'</span>)</span><br><span class="line">         ip_list.append(tds[<span class="number">1</span>].text + <span class="string">':'</span> + tds[<span class="number">2</span>].text)</span><br><span class="line">     <span class="keyword">return</span> ip_list</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">get_random_ip</span><span class="params">(self, ip_list)</span>:</span></span><br><span class="line">     proxy_list = []</span><br><span class="line">     <span class="keyword">for</span> ip <span class="keyword">in</span> ip_list:</span><br><span class="line">         proxy_list.append(<span class="string">'http://'</span> + ip)</span><br><span class="line">     proxy_ip = random.choice(proxy_list)</span><br><span class="line">     proxies = &#123;<span class="string">'http'</span>: proxy_ip&#125;</span><br><span class="line">     <span class="keyword">return</span> proxies</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">get_one</span><span class="params">(self)</span>:</span></span><br><span class="line">     url = <span class="string">'http://www.xicidaili.com/nn/%s'</span>%random.randint(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">     headers = &#123;</span><br><span class="line">         <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36'</span></span><br><span class="line">     &#125;</span><br><span class="line">     ip_list = self.get_ip_list(url, headers=headers)</span><br><span class="line">     print(ip_list)</span><br><span class="line">     <span class="keyword">return</span> self.get_random_ip(ip_list)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(get_xici_ip().random_agent())</span><br><span class="line">    print(<span class="string">"\n"</span>)</span><br><span class="line">    print(get_xici_ip().get_one())</span><br></pre></td></tr></table></figure>

<p>本文件可直接使用获取，也可供其他文件调用实现随机 ip 和 header 访问。</p>
<p>在爬虫文件中设置以下配置。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random_ip_and_header <span class="keyword">import</span> get_xici_ip</span><br><span class="line"></span><br><span class="line">User_Agent = get_xici_ip().random_agent()</span><br><span class="line">proxy = get_xici_ip().get_one()</span><br><span class="line">header = &#123;</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'en'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: User_Agent</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p>并为请求访问设置指定headers 和proxies 便可进行匿名访问。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">requests.get(url,headers=header,proxies=proxy)</span><br></pre></td></tr></table></figure>
</blockquote>
<p>如此设置便可大大提高数据爬取速度，但是要记得，数据爬取会给服务器带来很大的压力，我们也要设置好爬取时间间隔，最好是在夜深人静的时候进行爬取，避免给服务器造成困扰哦。</p>
]]></content>
  </entry>
  <entry>
    <title>Java大学生特训营 疫情地图项目实战课</title>
    <url>/2020/08/17/Java%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%89%B9%E8%AE%AD%E8%90%A5%20%E7%96%AB%E6%83%85%E5%9C%B0%E5%9B%BE%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%E8%AF%BE/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><blockquote>
<p>本项目我们采用阿里云的云服务器，配合开课吧提供的疫情数据，完成疫情地图的上线，意在熟悉使用流程。</p>
<ol>
<li>大部分前端代码已经提供，只需部分修改。</li>
<li>租用的阿里云服务器总体费用不会超过0.2元，但是需要在阿里云中充值100元才能使用服务，不必担心，项目关闭24小时后即可将保证金退回，三个月内申请退回原路径都是秒到账。</li>
<li>前端代码 链接：<a href="https://pan.baidu.com/s/1TIXGaFjkC8zb6u6O7MRADA" target="_blank" rel="noopener">https://pan.baidu.com/s/1TIXGaFjkC8zb6u6O7MRADA</a> <pre><code>提取码：2yi5</code></pre></li>
</ol>
</blockquote>
<h1 id="阿里云服务器的搭建"><a href="#阿里云服务器的搭建" class="headerlink" title="阿里云服务器的搭建"></a><strong>阿里云服务器的搭建</strong></h1><blockquote>
<p>首先打开浏览器输入<a href="https://www.aliyun.com/" target="_blank" rel="noopener">https://www.aliyun.com/</a> 进入阿里云官网，本次购买的是阿里云目前云服务器使用量最高的云服务器ECS，按照下图操作即可。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200817215439.png" alt="image-20200817214834520"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200817215423.png" alt="image-20200817215423707"></p>
<h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a><strong>基础配置</strong></h2><blockquote>
<p>我们只是一个测试，流量很小，采用按量付费即可，地域一般选取离自己近的地方，这里张家口这个有优惠，作为测试，我们选取有优惠的张家口。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818171539.png" alt="image-20200818171401116"></p>
</blockquote>
<blockquote>
<p>接着我们选择2核cpu 和2G的内存，选择价格比较便宜的突发性能实例t6。</p>
<p>这里的价格主要体现在平均基准CPU计算性能，我们选择的突发性能实例t6，一天内只有六个小时的时间可以发挥100%性能，其余时间只用到20%，而且购买之后前6个小时（我们只需要使用一个小时即可完成测试）是发挥100%的性能，也就是说0.082的价格有着0.44的性能。</p>
<p>而且大部分的项目也不需要全天都高效率，比如外卖系统高峰期只有中午和晚上的几个小时，所以这种服务器很合算。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818171516.png" alt="image-20200818171515781"></p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818210453.png" alt="image-20200818172932324"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818210503.png" alt="image-20200818173003728"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818173059.png" alt="image-20200818173059209"></p>
<h2 id="网络和安全组"><a href="#网络和安全组" class="headerlink" title="网络和安全组"></a><strong>网络和安全组</strong></h2><blockquote>
<p>这里我们先只配置网络，安全组比较麻烦，在后面进行配置。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200817223833.png" alt="image-20200817223833690"></p>
<h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a><strong>系统配置</strong></h2><blockquote>
<p>这里的账户是root，密码自己设置，后面会用到。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200817224339.png" alt="image-20200817224029213"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200817224328.png" alt="image-20200817224328633"></p>
<h2 id="服务器的配置管理"><a href="#服务器的配置管理" class="headerlink" title="服务器的配置管理"></a><strong>服务器的配置管理</strong></h2><h3 id="安全组配置"><a href="#安全组配置" class="headerlink" title="安全组配置"></a><strong>安全组配置</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818110736.png" alt="image-20200818110727008"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818111015.png" alt="image-20200818110834434"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818110952.png" alt="image-20200818110952472"></p>
<blockquote>
<p>目的 中的80代表访问80端口,此端口做为疫情地图默认访问端口</p>
<p> 源 选择0.0.0.0/0代表发布的项目所有用户都可以访问</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818111151.png" alt="image-20200818111151117"></p>
<blockquote>
<p>目的 中的8888代表访问8888端口,此端口作为疫情地图管理端</p>
<p> 源 选择0.0.0.0/0代表发布的项目所有用户都可以访问</p>
</blockquote>
<p>至此安全组配置也告一段。</p>
<h3 id="远程连接并配置"><a href="#远程连接并配置" class="headerlink" title="远程连接并配置"></a><strong>远程连接并配置</strong></h3><p>接下来返回我们的控制台进行连接及配置</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818112041.png" alt="image-20200818112040922"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818112211.png" alt="image-20200818112211548"></p>
<blockquote>
<p>账号为root ,密码为系统配置时自己配置的密码。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818112841.png" alt="image-20200818112259497"></p>
</blockquote>
<blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818112503.png" alt="image-20200818112503293"></p>
<p>命令行中输入<code>bt default</code>初始化我们的宝塔面板，初始化完成后弹出面板网址及账号密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818112740.png" alt="image-20200818112740490"></p>
</blockquote>
<blockquote>
<p>复制网址在网页中打开，输入账号密码，登录</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818112950.png" alt="image-20200818112950007"></p>
</blockquote>
<blockquote>
<p>登录后出现了软件安装界面，我们不安装这些，关掉即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818113158.png" alt="image-20200818113158227"></p>
</blockquote>
<blockquote>
<p>我们按照下面步骤安装  tomcat，按章完毕后第三个框中的<strong>安装</strong>会变成<strong>卸载</strong>，安装时间一般在两分钟左右</p>
<p><img src="C:%5CUsers%5Cllz%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818113559040.png" alt="image-20200818113559040"></p>
</blockquote>
<blockquote>
<p>因为tomcat 默认端口是8080 ，而我们刚刚指定的疫情地图的端口为80，所以这里需要修改一下tomcat的端口配置</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818114236.png" alt="image-20200818114236196"></p>
<p>保存以后还需<strong>重启</strong>服务器才能生效，一定要<strong>重启</strong>服务器</p>
<p><img src="C:%5CUsers%5Cllz%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818114426037.png" alt="image-20200818114426037"></p>
</blockquote>
<blockquote>
<p>此时在浏览器中访问我们的80 端口便可以显示出以下内容</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818114618.png" alt="image-20200818114617942"></p>
</blockquote>
<blockquote>
<p>接下来我们修改网页显示的内容</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818210712.png" alt="image-20200818114855667"></p>
<p>按下图目录进行点击即可找到index.jsp文件，此文件为前端网页显示的内容。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818115044.png" alt="image-20200818115044743"></p>
</blockquote>
<blockquote>
<p>将以下两个前端代码导入即可在网页中查看到静态的(数据是静态的，还未导入动态数据)疫情地图</p>
<p>index.html(前端代码)</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">session</span>=<span class="string">"false"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span>%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>疫情地图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    		<span class="keyword">var</span> data = &#123;<span class="string">"data"</span>:[&#123;<span class="string">"name"</span>:<span class="string">"湖北"</span>,<span class="string">"value"</span>:<span class="number">123</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"广东"</span>,<span class="string">"value"</span>:<span class="number">1590</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"河南"</span>,<span class="string">"value"</span>:<span class="number">1276</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"浙江"</span>,<span class="string">"value"</span>:<span class="number">1268</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"香港"</span>,<span class="string">"value"</span>:<span class="number">1055</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"湖南"</span>,<span class="string">"value"</span>:<span class="number">1019</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"安徽"</span>,<span class="string">"value"</span>:<span class="number">991</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"黑龙江"</span>,<span class="string">"value"</span>:<span class="number">945</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"江西"</span>,<span class="string">"value"</span>:<span class="number">937</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"山东"</span>,<span class="string">"value"</span>:<span class="number">788</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"上海"</span>,<span class="string">"value"</span>:<span class="number">667</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"江苏"</span>,<span class="string">"value"</span>:<span class="number">653</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"北京"</span>,<span class="string">"value"</span>:<span class="number">593</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"重庆"</span>,<span class="string">"value"</span>:<span class="number">579</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"四川"</span>,<span class="string">"value"</span>:<span class="number">561</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"台湾"</span>,<span class="string">"value"</span>:<span class="number">440</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"福建"</span>,<span class="string">"value"</span>:<span class="number">356</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"河北"</span>,<span class="string">"value"</span>:<span class="number">328</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"陕西"</span>,<span class="string">"value"</span>:<span class="number">308</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"广西"</span>,<span class="string">"value"</span>:<span class="number">254</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"内蒙古"</span>,<span class="string">"value"</span>:<span class="number">217</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"山西"</span>,<span class="string">"value"</span>:<span class="number">198</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"天津"</span>,<span class="string">"value"</span>:<span class="number">192</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"云南"</span>,<span class="string">"value"</span>:<span class="number">185</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"海南"</span>,<span class="string">"value"</span>:<span class="number">169</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"吉林"</span>,<span class="string">"value"</span>:<span class="number">152</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"辽宁"</span>,<span class="string">"value"</span>:<span class="number">149</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"贵州"</span>,<span class="string">"value"</span>:<span class="number">147</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"甘肃"</span>,<span class="string">"value"</span>:<span class="number">139</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"新疆"</span>,<span class="string">"value"</span>:<span class="number">76</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"宁夏"</span>,<span class="string">"value"</span>:<span class="number">75</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"澳门"</span>,<span class="string">"value"</span>:<span class="number">45</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"青海"</span>,<span class="string">"value"</span>:<span class="number">18</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"西藏"</span>,<span class="string">"value"</span>:<span class="number">1</span>&#125;],<span class="string">"today"</span>:[&#123;<span class="string">"name"</span>:<span class="string">"湖北"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"广东"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"河南"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"浙江"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"香港"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"湖南"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"安徽"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"黑龙江"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"江西"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"山东"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"上海"</span>,<span class="string">"value"</span>:<span class="number">1</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"江苏"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"北京"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"重庆"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"四川"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"台湾"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"福建"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"河北"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"陕西"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"广西"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"内蒙古"</span>,<span class="string">"value"</span>:<span class="number">1</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"山西"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"天津"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"云南"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"海南"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"吉林"</span>,<span class="string">"value"</span>:<span class="number">4</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"辽宁"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"贵州"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"甘肃"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"新疆"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"宁夏"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"澳门"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"青海"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"西藏"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;],<span class="string">"g_today"</span>:[&#123;<span class="string">"name"</span>:<span class="string">"突尼斯"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞尔维亚"</span>,<span class="string">"value"</span>:<span class="number">34</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"中国"</span>,<span class="string">"value"</span>:<span class="number">6</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"日本"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"泰国"</span>,<span class="string">"value"</span>:<span class="number">1</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"新加坡"</span>,<span class="string">"value"</span>:<span class="number">570</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"韩国"</span>,<span class="string">"value"</span>:<span class="number">32</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"澳大利亚"</span>,<span class="string">"value"</span>:<span class="number">11</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"德国"</span>,<span class="string">"value"</span>:<span class="number">440</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"美国"</span>,<span class="string">"value"</span>:<span class="number">21243</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马来西亚"</span>,<span class="string">"value"</span>:<span class="number">37</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"越南"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣巴泰勒米"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"肯尼亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"伊朗"</span>,<span class="string">"value"</span>:<span class="number">2111</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"以色列"</span>,<span class="string">"value"</span>:<span class="number">16</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"毛利亚尼亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"黎巴嫩"</span>,<span class="string">"value"</span>:<span class="number">26</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"克罗地亚"</span>,<span class="string">"value"</span>:<span class="number">4</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"奥地利"</span>,<span class="string">"value"</span>:<span class="number">52</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"瑞士"</span>,<span class="string">"value"</span>:<span class="number">21</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"希腊"</span>,<span class="string">"value"</span>:<span class="number">6</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"毛里求斯"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"爱沙尼亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"北马其顿"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"白俄罗斯"</span>,<span class="string">"value"</span>:<span class="number">936</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"立陶宛"</span>,<span class="string">"value"</span>:<span class="number">15</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿塞拜疆"</span>,<span class="string">"value"</span>:<span class="number">131</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"美属维尔京群岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"蒙古"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乌克兰"</span>,<span class="string">"value"</span>:<span class="number">354</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"波兰"</span>,<span class="string">"value"</span>:<span class="number">383</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"波斯尼亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"波黑"</span>,<span class="string">"value"</span>:<span class="number">31</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"蒙特塞拉特"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"南非"</span>,<span class="string">"value"</span>:<span class="number">767</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"布隆迪"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"南苏丹"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马耳他"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"摩尔多瓦"</span>,<span class="string">"value"</span>:<span class="number">280</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"保加利亚"</span>,<span class="string">"value"</span>:<span class="number">33</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"孟加拉国"</span>,<span class="string">"value"</span>:<span class="number">1251</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿尔巴尼亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴勒斯坦"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"科摩罗"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿富汗"</span>,<span class="string">"value"</span>:<span class="number">581</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"沙特阿拉伯"</span>,<span class="string">"value"</span>:<span class="number">2509</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"新西兰"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塔吉克斯坦"</span>,<span class="string">"value"</span>:<span class="number">207</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"泽西岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"叙利亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴拿马"</span>,<span class="string">"value"</span>:<span class="number">141</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"古巴"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"尼日利亚"</span>,<span class="string">"value"</span>:<span class="number">226</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"摩洛哥"</span>,<span class="string">"value"</span>:<span class="number">71</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞内加尔"</span>,<span class="string">"value"</span>:<span class="number">73</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"老挝"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴哈马"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马约特岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斯洛文尼亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"卢森堡"</span>,<span class="string">"value"</span>:<span class="number">13</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"爱尔兰"</span>,<span class="string">"value"</span>:<span class="number">51</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"厄瓜多尔"</span>,<span class="string">"value"</span>:<span class="number">569</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"捷克"</span>,<span class="string">"value"</span>:<span class="number">36</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"匈牙利"</span>,<span class="string">"value"</span>:<span class="number">42</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法属圭亚那"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"多哥共和国"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"哥斯达黎加"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"文莱"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法罗群岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马提尼克岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"荷兰"</span>,<span class="string">"value"</span>:<span class="number">108</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴西"</span>,<span class="string">"value"</span>:<span class="number">17665</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"洪都拉斯"</span>,<span class="string">"value"</span>:<span class="number">157</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乌拉圭"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"秘鲁"</span>,<span class="string">"value"</span>:<span class="number">4550</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"智利"</span>,<span class="string">"value"</span>:<span class="number">3520</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"格陵兰"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣巴托洛谬岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马尔代夫"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"委内瑞拉"</span>,<span class="string">"value"</span>:<span class="number">208</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"毛里塔尼亚"</span>,<span class="string">"value"</span>:<span class="number">50</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"纳米比亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法属留尼汪岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"波多黎各"</span>,<span class="string">"value"</span>:<span class="number">159</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"加纳"</span>,<span class="string">"value"</span>:<span class="number">361</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"赤道几内亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"几内亚"</span>,<span class="string">"value"</span>:<span class="number">67</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"卢旺达"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"格林纳达"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斯威士兰"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"坦桑尼亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"贝宁"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"刚果（金）"</span>,<span class="string">"value"</span>:<span class="number">102</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"中非共和国"</span>,<span class="string">"value"</span>:<span class="number">45</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"利比里亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"索马里"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞拉利昂"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乍得"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"赞比亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴巴多斯"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马里"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿根廷"</span>,<span class="string">"value"</span>:<span class="number">741</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法属波利尼西亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴林"</span>,<span class="string">"value"</span>:<span class="number">376</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"莫桑比克"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"喀麦隆"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乌干达"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"厄立特里亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"刚果（布）"</span>,<span class="string">"value"</span>:<span class="number">8</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"津巴布韦"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"丹麦"</span>,<span class="string">"value"</span>:<span class="number">76</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿鲁巴"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斐济"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"伯利兹"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"缅甸"</span>,<span class="string">"value"</span>:<span class="number">2</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞浦路斯"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"关岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"科索沃"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"吉尔吉斯斯坦"</span>,<span class="string">"value"</span>:<span class="number">27</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"博茨瓦纳"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"尼日尔"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"苏里南"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"佛得角"</span>,<span class="string">"value"</span>:<span class="number">7</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"萨尔瓦多"</span>,<span class="string">"value"</span>:<span class="number">73</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圭亚那"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"尼加拉瓜"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"冈比亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"东帝汶"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴基斯坦"</span>,<span class="string">"value"</span>:<span class="number">837</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"埃及"</span>,<span class="string">"value"</span>:<span class="number">720</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"科威特"</span>,<span class="string">"value"</span>:<span class="number">1073</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斯洛伐克"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"直布罗陀"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"摩纳哥"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴拉圭"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"荷属安的列斯"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"多米尼克"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乌兹别克斯坦"</span>,<span class="string">"value"</span>:<span class="number">78</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"黑山"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"危地马拉"</span>,<span class="string">"value"</span>:<span class="number">132</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"加蓬"</span>,<span class="string">"value"</span>:<span class="number">70</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"苏丹"</span>,<span class="string">"value"</span>:<span class="number">137</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"利比亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣马丁岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"土耳其"</span>,<span class="string">"value"</span>:<span class="number">1022</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴布亚新几内亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"多米尼加共和国"</span>,<span class="string">"value"</span>:<span class="number">909</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"约旦"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"亚美尼亚"</span>,<span class="string">"value"</span>:<span class="number">230</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣基茨和尼维斯"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"瓜德罗普"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"安提瓜和巴布达"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"玻利维亚"</span>,<span class="string">"value"</span>:<span class="number">218</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"哥伦比亚"</span>,<span class="string">"value"</span>:<span class="number">640</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣文森特和格林纳丁斯"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣卢西亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法国"</span>,<span class="string">"value"</span>:<span class="number">882</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿联酋"</span>,<span class="string">"value"</span>:<span class="number">873</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"加拿大"</span>,<span class="string">"value"</span>:<span class="number">1040</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"印度"</span>,<span class="string">"value"</span>:<span class="number">141</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"英国"</span>,<span class="string">"value"</span>:<span class="number">2412</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"意大利"</span>,<span class="string">"value"</span>:<span class="number">813</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"俄罗斯"</span>,<span class="string">"value"</span>:<span class="number">8764</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"菲律宾"</span>,<span class="string">"value"</span>:<span class="number">279</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"芬兰"</span>,<span class="string">"value"</span>:<span class="number">19</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"尼泊尔"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"葡萄牙"</span>,<span class="string">"value"</span>:<span class="number">223</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"也门"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞舌尔"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"西班牙"</span>,<span class="string">"value"</span>:<span class="number">615</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斯里兰卡"</span>,<span class="string">"value"</span>:<span class="number">35</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿尔及利亚"</span>,<span class="string">"value"</span>:<span class="number">176</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"柬埔寨"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"海地"</span>,<span class="string">"value"</span>:<span class="number">63</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"瑞典"</span>,<span class="string">"value"</span>:<span class="number">422</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"特里尼达和多巴哥"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"吉布提"</span>,<span class="string">"value"</span>:<span class="number">100</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣多美与普林西比"</span>,<span class="string">"value"</span>:<span class="number">5</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"布基纳法索"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"比利时"</span>,<span class="string">"value"</span>:<span class="number">232</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"伊拉克"</span>,<span class="string">"value"</span>:<span class="number">57</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马拉维"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"冰岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"几内亚比绍"</span>,<span class="string">"value"</span>:<span class="number">6</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"拉脱维亚"</span>,<span class="string">"value"</span>:<span class="number">4</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"不丹"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"挪威"</span>,<span class="string">"value"</span>:<span class="number">18</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"印度尼西亚"</span>,<span class="string">"value"</span>:<span class="number">486</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"安哥拉"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"开曼群岛"</span>,<span class="string">"value"</span>:<span class="number">17</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"埃塞俄比亚"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"梵蒂冈"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"科特迪瓦"</span>,<span class="string">"value"</span>:<span class="number">44</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"卡塔尔"</span>,<span class="string">"value"</span>:<span class="number">1637</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"莱索托"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"格鲁吉亚"</span>,<span class="string">"value"</span>:<span class="number">6</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"墨西哥"</span>,<span class="string">"value"</span>:<span class="number">2713</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣马力诺"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"哈萨克斯坦"</span>,<span class="string">"value"</span>:<span class="number">218</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"安道尔"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"牙买加"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"格恩西岛"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"罗马尼亚"</span>,<span class="string">"value"</span>:<span class="number">155</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿曼"</span>,<span class="string">"value"</span>:<span class="number">292</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"列支敦士登"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马达加斯加"</span>,<span class="string">"value"</span>:<span class="number">0</span>&#125;],<span class="string">"g_data"</span>:[&#123;<span class="string">"name"</span>:<span class="string">"突尼斯"</span>,<span class="string">"value"</span>:<span class="number">1044</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞尔维亚"</span>,<span class="string">"value"</span>:<span class="number">10733</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"中国"</span>,<span class="string">"value"</span>:<span class="number">84506</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"日本"</span>,<span class="string">"value"</span>:<span class="number">17106</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"泰国"</span>,<span class="string">"value"</span>:<span class="number">3034</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"新加坡"</span>,<span class="string">"value"</span>:<span class="number">29364</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"韩国"</span>,<span class="string">"value"</span>:<span class="number">11110</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"澳大利亚"</span>,<span class="string">"value"</span>:<span class="number">7079</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"德国"</span>,<span class="string">"value"</span>:<span class="number">177827</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"美国"</span>,<span class="string">"value"</span>:<span class="number">1570075</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马来西亚"</span>,<span class="string">"value"</span>:<span class="number">6978</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"越南"</span>,<span class="string">"value"</span>:<span class="number">324</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣巴泰勒米"</span>,<span class="string">"value"</span>:<span class="number">6</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"肯尼亚"</span>,<span class="string">"value"</span>:<span class="number">963</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"伊朗"</span>,<span class="string">"value"</span>:<span class="number">124603</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"以色列"</span>,<span class="string">"value"</span>:<span class="number">16659</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"毛利亚尼亚"</span>,<span class="string">"value"</span>:<span class="number">16</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"黎巴嫩"</span>,<span class="string">"value"</span>:<span class="number">954</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"克罗地亚"</span>,<span class="string">"value"</span>:<span class="number">2232</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"奥地利"</span>,<span class="string">"value"</span>:<span class="number">16321</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"瑞士"</span>,<span class="string">"value"</span>:<span class="number">30618</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"希腊"</span>,<span class="string">"value"</span>:<span class="number">2840</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"毛里求斯"</span>,<span class="string">"value"</span>:<span class="number">332</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"爱沙尼亚"</span>,<span class="string">"value"</span>:<span class="number">1791</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"北马其顿"</span>,<span class="string">"value"</span>:<span class="number">1839</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"白俄罗斯"</span>,<span class="string">"value"</span>:<span class="number">31508</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"立陶宛"</span>,<span class="string">"value"</span>:<span class="number">1562</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿塞拜疆"</span>,<span class="string">"value"</span>:<span class="number">3518</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"美属维尔京群岛"</span>,<span class="string">"value"</span>:<span class="number">69</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"蒙古"</span>,<span class="string">"value"</span>:<span class="number">140</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乌克兰"</span>,<span class="string">"value"</span>:<span class="number">19230</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"波兰"</span>,<span class="string">"value"</span>:<span class="number">19268</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"波斯尼亚"</span>,<span class="string">"value"</span>:<span class="number">1421</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"波黑"</span>,<span class="string">"value"</span>:<span class="number">2321</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"蒙特塞拉特"</span>,<span class="string">"value"</span>:<span class="number">11</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"南非"</span>,<span class="string">"value"</span>:<span class="number">17200</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"布隆迪"</span>,<span class="string">"value"</span>:<span class="number">42</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"南苏丹"</span>,<span class="string">"value"</span>:<span class="number">347</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马耳他"</span>,<span class="string">"value"</span>:<span class="number">569</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"摩尔多瓦"</span>,<span class="string">"value"</span>:<span class="number">6340</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"保加利亚"</span>,<span class="string">"value"</span>:<span class="number">2292</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"孟加拉国"</span>,<span class="string">"value"</span>:<span class="number">25121</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿尔巴尼亚"</span>,<span class="string">"value"</span>:<span class="number">949</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴勒斯坦"</span>,<span class="string">"value"</span>:<span class="number">391</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"科摩罗"</span>,<span class="string">"value"</span>:<span class="number">11</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿富汗"</span>,<span class="string">"value"</span>:<span class="number">7653</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"沙特阿拉伯"</span>,<span class="string">"value"</span>:<span class="number">59854</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"新西兰"</span>,<span class="string">"value"</span>:<span class="number">1503</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塔吉克斯坦"</span>,<span class="string">"value"</span>:<span class="number">1936</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"泽西岛"</span>,<span class="string">"value"</span>:<span class="number">293</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"叙利亚"</span>,<span class="string">"value"</span>:<span class="number">58</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴拿马"</span>,<span class="string">"value"</span>:<span class="number">9867</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"古巴"</span>,<span class="string">"value"</span>:<span class="number">1887</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"尼日利亚"</span>,<span class="string">"value"</span>:<span class="number">6401</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"摩洛哥"</span>,<span class="string">"value"</span>:<span class="number">7023</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞内加尔"</span>,<span class="string">"value"</span>:<span class="number">2617</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"老挝"</span>,<span class="string">"value"</span>:<span class="number">19</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴哈马"</span>,<span class="string">"value"</span>:<span class="number">96</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马约特岛"</span>,<span class="string">"value"</span>:<span class="number">1370</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斯洛文尼亚"</span>,<span class="string">"value"</span>:<span class="number">1467</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"卢森堡"</span>,<span class="string">"value"</span>:<span class="number">3958</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"爱尔兰"</span>,<span class="string">"value"</span>:<span class="number">24251</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"厄瓜多尔"</span>,<span class="string">"value"</span>:<span class="number">34151</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"捷克"</span>,<span class="string">"value"</span>:<span class="number">8683</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"匈牙利"</span>,<span class="string">"value"</span>:<span class="number">3598</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法属圭亚那"</span>,<span class="string">"value"</span>:<span class="number">218</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"多哥共和国"</span>,<span class="string">"value"</span>:<span class="number">338</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"哥斯达黎加"</span>,<span class="string">"value"</span>:<span class="number">882</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"文莱"</span>,<span class="string">"value"</span>:<span class="number">141</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法罗群岛"</span>,<span class="string">"value"</span>:<span class="number">187</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马提尼克岛"</span>,<span class="string">"value"</span>:<span class="number">192</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"荷兰"</span>,<span class="string">"value"</span>:<span class="number">44249</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴西"</span>,<span class="string">"value"</span>:<span class="number">271885</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"洪都拉斯"</span>,<span class="string">"value"</span>:<span class="number">2955</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乌拉圭"</span>,<span class="string">"value"</span>:<span class="number">738</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"秘鲁"</span>,<span class="string">"value"</span>:<span class="number">99483</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"智利"</span>,<span class="string">"value"</span>:<span class="number">49579</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"格陵兰"</span>,<span class="string">"value"</span>:<span class="number">11</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣巴托洛谬岛"</span>,<span class="string">"value"</span>:<span class="number">6</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马尔代夫"</span>,<span class="string">"value"</span>:<span class="number">1143</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"委内瑞拉"</span>,<span class="string">"value"</span>:<span class="number">749</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"毛里塔尼亚"</span>,<span class="string">"value"</span>:<span class="number">131</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"纳米比亚"</span>,<span class="string">"value"</span>:<span class="number">16</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法属留尼汪岛"</span>,<span class="string">"value"</span>:<span class="number">446</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"波多黎各"</span>,<span class="string">"value"</span>:<span class="number">2805</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"加纳"</span>,<span class="string">"value"</span>:<span class="number">6096</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"赤道几内亚"</span>,<span class="string">"value"</span>:<span class="number">825</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"几内亚"</span>,<span class="string">"value"</span>:<span class="number">2863</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"卢旺达"</span>,<span class="string">"value"</span>:<span class="number">308</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"格林纳达"</span>,<span class="string">"value"</span>:<span class="number">22</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斯威士兰"</span>,<span class="string">"value"</span>:<span class="number">208</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"坦桑尼亚"</span>,<span class="string">"value"</span>:<span class="number">509</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"贝宁"</span>,<span class="string">"value"</span>:<span class="number">339</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"刚果（金）"</span>,<span class="string">"value"</span>:<span class="number">1731</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"中非共和国"</span>,<span class="string">"value"</span>:<span class="number">411</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"利比里亚"</span>,<span class="string">"value"</span>:<span class="number">233</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"索马里"</span>,<span class="string">"value"</span>:<span class="number">1502</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞拉利昂"</span>,<span class="string">"value"</span>:<span class="number">534</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乍得"</span>,<span class="string">"value"</span>:<span class="number">545</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"赞比亚"</span>,<span class="string">"value"</span>:<span class="number">772</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴巴多斯"</span>,<span class="string">"value"</span>:<span class="number">90</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马里"</span>,<span class="string">"value"</span>:<span class="number">901</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿根廷"</span>,<span class="string">"value"</span>:<span class="number">8809</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法属波利尼西亚"</span>,<span class="string">"value"</span>:<span class="number">60</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴林"</span>,<span class="string">"value"</span>:<span class="number">7532</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"莫桑比克"</span>,<span class="string">"value"</span>:<span class="number">146</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"喀麦隆"</span>,<span class="string">"value"</span>:<span class="number">3529</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乌干达"</span>,<span class="string">"value"</span>:<span class="number">260</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"厄立特里亚"</span>,<span class="string">"value"</span>:<span class="number">39</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"刚果（布）"</span>,<span class="string">"value"</span>:<span class="number">420</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"津巴布韦"</span>,<span class="string">"value"</span>:<span class="number">46</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"丹麦"</span>,<span class="string">"value"</span>:<span class="number">11044</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿鲁巴"</span>,<span class="string">"value"</span>:<span class="number">101</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斐济"</span>,<span class="string">"value"</span>:<span class="number">18</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"伯利兹"</span>,<span class="string">"value"</span>:<span class="number">18</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"缅甸"</span>,<span class="string">"value"</span>:<span class="number">193</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞浦路斯"</span>,<span class="string">"value"</span>:<span class="number">1009</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"关岛"</span>,<span class="string">"value"</span>:<span class="number">154</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"科索沃"</span>,<span class="string">"value"</span>:<span class="number">813</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"吉尔吉斯斯坦"</span>,<span class="string">"value"</span>:<span class="number">1270</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"博茨瓦纳"</span>,<span class="string">"value"</span>:<span class="number">25</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"尼日尔"</span>,<span class="string">"value"</span>:<span class="number">914</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"苏里南"</span>,<span class="string">"value"</span>:<span class="number">11</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"佛得角"</span>,<span class="string">"value"</span>:<span class="number">335</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"萨尔瓦多"</span>,<span class="string">"value"</span>:<span class="number">1571</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圭亚那"</span>,<span class="string">"value"</span>:<span class="number">125</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"尼加拉瓜"</span>,<span class="string">"value"</span>:<span class="number">254</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"冈比亚"</span>,<span class="string">"value"</span>:<span class="number">24</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"东帝汶"</span>,<span class="string">"value"</span>:<span class="number">24</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴基斯坦"</span>,<span class="string">"value"</span>:<span class="number">45898</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"埃及"</span>,<span class="string">"value"</span>:<span class="number">13484</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"科威特"</span>,<span class="string">"value"</span>:<span class="number">16764</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斯洛伐克"</span>,<span class="string">"value"</span>:<span class="number">1495</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"直布罗陀"</span>,<span class="string">"value"</span>:<span class="number">147</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"摩纳哥"</span>,<span class="string">"value"</span>:<span class="number">97</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴拉圭"</span>,<span class="string">"value"</span>:<span class="number">829</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"荷属安的列斯"</span>,<span class="string">"value"</span>:<span class="number">16</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"多米尼克"</span>,<span class="string">"value"</span>:<span class="number">16</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"乌兹别克斯坦"</span>,<span class="string">"value"</span>:<span class="number">2880</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"黑山"</span>,<span class="string">"value"</span>:<span class="number">324</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"危地马拉"</span>,<span class="string">"value"</span>:<span class="number">2133</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"加蓬"</span>,<span class="string">"value"</span>:<span class="number">1502</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"苏丹"</span>,<span class="string">"value"</span>:<span class="number">2728</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"利比亚"</span>,<span class="string">"value"</span>:<span class="number">68</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣马丁岛"</span>,<span class="string">"value"</span>:<span class="number">77</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"土耳其"</span>,<span class="string">"value"</span>:<span class="number">151615</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"巴布亚新几内亚"</span>,<span class="string">"value"</span>:<span class="number">8</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"多米尼加共和国"</span>,<span class="string">"value"</span>:<span class="number">13223</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"约旦"</span>,<span class="string">"value"</span>:<span class="number">649</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"亚美尼亚"</span>,<span class="string">"value"</span>:<span class="number">5271</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣基茨和尼维斯"</span>,<span class="string">"value"</span>:<span class="number">15</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"瓜德罗普"</span>,<span class="string">"value"</span>:<span class="number">155</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"安提瓜和巴布达"</span>,<span class="string">"value"</span>:<span class="number">25</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"玻利维亚"</span>,<span class="string">"value"</span>:<span class="number">4481</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"哥伦比亚"</span>,<span class="string">"value"</span>:<span class="number">16935</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣文森特和格林纳丁斯"</span>,<span class="string">"value"</span>:<span class="number">17</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣卢西亚"</span>,<span class="string">"value"</span>:<span class="number">18</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"法国"</span>,<span class="string">"value"</span>:<span class="number">180809</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿联酋"</span>,<span class="string">"value"</span>:<span class="number">25063</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"加拿大"</span>,<span class="string">"value"</span>:<span class="number">79112</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"印度"</span>,<span class="string">"value"</span>:<span class="number">106886</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"英国"</span>,<span class="string">"value"</span>:<span class="number">248818</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"意大利"</span>,<span class="string">"value"</span>:<span class="number">226699</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"俄罗斯"</span>,<span class="string">"value"</span>:<span class="number">308705</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"菲律宾"</span>,<span class="string">"value"</span>:<span class="number">13221</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"芬兰"</span>,<span class="string">"value"</span>:<span class="number">6399</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"尼泊尔"</span>,<span class="string">"value"</span>:<span class="number">402</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"葡萄牙"</span>,<span class="string">"value"</span>:<span class="number">29432</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"也门"</span>,<span class="string">"value"</span>:<span class="number">167</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"塞舌尔"</span>,<span class="string">"value"</span>:<span class="number">11</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"西班牙"</span>,<span class="string">"value"</span>:<span class="number">278803</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"斯里兰卡"</span>,<span class="string">"value"</span>:<span class="number">1027</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿尔及利亚"</span>,<span class="string">"value"</span>:<span class="number">7377</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"柬埔寨"</span>,<span class="string">"value"</span>:<span class="number">122</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"海地"</span>,<span class="string">"value"</span>:<span class="number">596</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"瑞典"</span>,<span class="string">"value"</span>:<span class="number">30799</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"特里尼达和多巴哥"</span>,<span class="string">"value"</span>:<span class="number">116</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"吉布提"</span>,<span class="string">"value"</span>:<span class="number">1618</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣多美与普林西比"</span>,<span class="string">"value"</span>:<span class="number">251</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"布基纳法索"</span>,<span class="string">"value"</span>:<span class="number">796</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"比利时"</span>,<span class="string">"value"</span>:<span class="number">55791</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"伊拉克"</span>,<span class="string">"value"</span>:<span class="number">3611</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马拉维"</span>,<span class="string">"value"</span>:<span class="number">70</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"冰岛"</span>,<span class="string">"value"</span>:<span class="number">1802</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"几内亚比绍"</span>,<span class="string">"value"</span>:<span class="number">1038</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"拉脱维亚"</span>,<span class="string">"value"</span>:<span class="number">1016</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"不丹"</span>,<span class="string">"value"</span>:<span class="number">21</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"挪威"</span>,<span class="string">"value"</span>:<span class="number">8267</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"印度尼西亚"</span>,<span class="string">"value"</span>:<span class="number">18496</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"安哥拉"</span>,<span class="string">"value"</span>:<span class="number">52</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"开曼群岛"</span>,<span class="string">"value"</span>:<span class="number">111</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"埃塞俄比亚"</span>,<span class="string">"value"</span>:<span class="number">365</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"梵蒂冈"</span>,<span class="string">"value"</span>:<span class="number">12</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"科特迪瓦"</span>,<span class="string">"value"</span>:<span class="number">2153</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"卡塔尔"</span>,<span class="string">"value"</span>:<span class="number">35606</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"莱索托"</span>,<span class="string">"value"</span>:<span class="number">1</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"格鲁吉亚"</span>,<span class="string">"value"</span>:<span class="number">713</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"墨西哥"</span>,<span class="string">"value"</span>:<span class="number">54346</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"圣马力诺"</span>,<span class="string">"value"</span>:<span class="number">655</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"哈萨克斯坦"</span>,<span class="string">"value"</span>:<span class="number">6969</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"安道尔"</span>,<span class="string">"value"</span>:<span class="number">761</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"牙买加"</span>,<span class="string">"value"</span>:<span class="number">520</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"格恩西岛"</span>,<span class="string">"value"</span>:<span class="number">252</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"罗马尼亚"</span>,<span class="string">"value"</span>:<span class="number">17191</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"阿曼"</span>,<span class="string">"value"</span>:<span class="number">5671</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"列支敦士登"</span>,<span class="string">"value"</span>:<span class="number">82</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"马达加斯加"</span>,<span class="string">"value"</span>:<span class="number">326</span>&#125;]&#125;;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/echarts/4.7.0/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.zaixianke.com/china.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.zaixianke.com/world.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 100%;height:600px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:#333"</span> <span class="attr">class</span>=<span class="string">"control"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">href</span>=<span class="string">"javascript:updateMap(0)"</span>&gt;</span>国内累计<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:#333"</span> <span class="attr">class</span>=<span class="string">"control"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">href</span>=<span class="string">"javascript:updateMap(1)"</span>&gt;</span>国内新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:#333"</span> <span class="attr">class</span>=<span class="string">"control"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">href</span>=<span class="string">"javascript:updateMap(2)"</span>&gt;</span>全球累计<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:#333"</span> <span class="attr">class</span>=<span class="string">"control"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">href</span>=<span class="string">"javascript:updateMap(3)"</span>&gt;</span>全球新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"control.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>control.js(视觉映射)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateMap</span>(<span class="params">num</span>)</span>&#123;</span><br><span class="line">			$(<span class="string">".control"</span>).show();</span><br><span class="line">			$(<span class="string">".control:eq("</span>+num+<span class="string">")"</span>).hide();</span><br><span class="line">			myChart.clear();</span><br><span class="line">			<span class="keyword">var</span> opt = <span class="literal">null</span>;</span><br><span class="line">			<span class="keyword">switch</span>(num)&#123;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">0</span>:&#123;</span><br><span class="line">					opt = &#123;</span><br><span class="line">					        <span class="comment">// 设置标题和副标题及副标题跳转链接</span></span><br><span class="line">					        title: &#123;</span><br><span class="line">					            text: <span class="string">'新冠疫情-国内累计数据-zl版'</span>,</span><br><span class="line">					            subtext: <span class="string">'数据来源--开课吧'</span></span><br><span class="line">					        &#125;,</span><br><span class="line">					        <span class="comment">// 数据提示框</span></span><br><span class="line">					        tooltip: &#123;</span><br><span class="line">					            trigger: <span class="string">'item'</span>, <span class="comment">// item放到数据区域触发</span></span><br><span class="line">					            formatter: <span class="function"><span class="keyword">function</span> (<span class="params">params, ticket, callback</span>) </span>&#123;</span><br><span class="line">					                <span class="keyword">if</span>(params.data)</span><br><span class="line">					                    <span class="keyword">return</span> params.name+<span class="string">'&lt;br/&gt;'</span>+params.data.value+<span class="string">' (人)'</span>;</span><br><span class="line">					                <span class="keyword">else</span></span><br><span class="line">					                    <span class="keyword">return</span> params.name+<span class="string">'&lt;br/&gt;无疫情信息'</span>;</span><br><span class="line">					            &#125;</span><br><span class="line">					        &#125;,</span><br><span class="line">					        <span class="comment">// 视觉映射方案:</span></span><br><span class="line">					        <span class="comment">// visualMap默认是连续映射，我们也可以设置为分段型，对于分布范围广的数据</span></span><br><span class="line">					        <span class="comment">// 使用透明度来区分疫情严重情况</span></span><br><span class="line">					        visualMap: &#123;</span><br><span class="line">					            type: <span class="string">'piecewise'</span>,</span><br><span class="line">					            pieces: [</span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">2000</span>, <span class="attr">color</span>: <span class="string">'darkred'</span>&#125;,                        <span class="comment">// (1500, Infinity]</span></span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">1300</span>, <span class="attr">lte</span>: <span class="number">2000</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">1</span>&#125;,  <span class="comment">// (1000, 1500]</span></span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">800</span>, <span class="attr">lte</span>: <span class="number">1300</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.8</span>&#125;,</span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">500</span>, <span class="attr">lte</span>: <span class="number">800</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.6</span>&#125;,</span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">200</span>, <span class="attr">lte</span>: <span class="number">500</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.4</span>&#125;,</span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">50</span>, <span class="attr">lte</span>: <span class="number">200</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.3</span>&#125;,</span><br><span class="line">					                &#123;<span class="attr">lt</span>: <span class="number">50</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.2</span>&#125;          <span class="comment">// (-Infinity, 100)</span></span><br><span class="line">					            ],</span><br><span class="line">					        &#125;,</span><br><span class="line">					</span><br><span class="line">					        <span class="comment">// 具体数据</span></span><br><span class="line">					        series: [</span><br><span class="line">					            &#123;</span><br><span class="line">					                name: <span class="string">'国内各省确诊病例'</span>, <span class="comment">// 系列名称</span></span><br><span class="line">					                zoom:<span class="number">1.2</span>,<span class="comment">//地图大小</span></span><br><span class="line">					                type: <span class="string">'map'</span>, <span class="comment">// 系列类型，地图</span></span><br><span class="line">					                map: <span class="string">'china'</span>, <span class="comment">// 要使用的地图，即上面注册的地图名称</span></span><br><span class="line">					                roam: <span class="literal">true</span>, <span class="comment">// 开启鼠标缩放和平移漫游</span></span><br><span class="line">					                label: &#123; <span class="comment">// 图形上的文本标签，地图默认显示数据名</span></span><br><span class="line">					                    show: <span class="literal">true</span>,</span><br><span class="line">					                    formatter: <span class="string">'&#123;b&#125;'</span>, <span class="comment">// b是数据名，c是数据值</span></span><br><span class="line">					                    fontSize: <span class="number">8</span></span><br><span class="line">					                &#125;,</span><br><span class="line">					                data: data.data,</span><br><span class="line">					            &#125;</span><br><span class="line">					        ]</span><br><span class="line">					    &#125;;</span><br><span class="line">					</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">					opt = &#123;</span><br><span class="line">					        <span class="comment">// 设置标题和副标题及副标题跳转链接</span></span><br><span class="line">					        title: &#123;</span><br><span class="line">					            text: <span class="string">'新冠疫情-国内新增数据'</span>,</span><br><span class="line">					            subtext: <span class="string">'数据来源--开课吧'</span>,</span><br><span class="line">					            sublink: <span class="string">'https://www.kaikeba.com'</span></span><br><span class="line">					        &#125;,</span><br><span class="line">					        <span class="comment">// 数据提示框</span></span><br><span class="line">					        tooltip: &#123;</span><br><span class="line">					            trigger: <span class="string">'item'</span>, <span class="comment">// item放到数据区域触发</span></span><br><span class="line">					            formatter:  <span class="function"><span class="keyword">function</span> (<span class="params">params, ticket, callback</span>) </span>&#123;</span><br><span class="line">					                <span class="keyword">if</span>(params.data)</span><br><span class="line">					                    <span class="keyword">return</span> params.name+<span class="string">'&lt;br/&gt;'</span>+params.data.value+<span class="string">' (人)'</span>;</span><br><span class="line">					                <span class="keyword">else</span></span><br><span class="line">					                    <span class="keyword">return</span> params.name+<span class="string">'&lt;br/&gt;无疫情信息'</span>;</span><br><span class="line">					            &#125;</span><br><span class="line">					        &#125;,</span><br><span class="line">					</span><br><span class="line">							<span class="comment">// 视觉映射方案:</span></span><br><span class="line">					        <span class="comment">// visualMap默认是连续映射，我们也可以设置为分段型，对于分布范围广的数据</span></span><br><span class="line">					        <span class="comment">// 使用透明度来区分疫情严重情况</span></span><br><span class="line">					        visualMap: &#123;</span><br><span class="line">					            type: <span class="string">'piecewise'</span>,</span><br><span class="line">					            pieces: [</span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">50</span>, <span class="attr">color</span>: <span class="string">'darkred'</span>&#125;,                        <span class="comment">// (1500, Infinity]</span></span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">30</span>, <span class="attr">lte</span>: <span class="number">50</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">1</span>&#125;,  <span class="comment">// (1000, 1500]</span></span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">20</span>, <span class="attr">lte</span>: <span class="number">30</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.8</span>&#125;,</span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">10</span>, <span class="attr">lte</span>: <span class="number">20</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.6</span>&#125;,</span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">5</span>, <span class="attr">lte</span>: <span class="number">10</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.4</span>&#125;,</span><br><span class="line">					                &#123;<span class="attr">gt</span>: <span class="number">1</span>, <span class="attr">lte</span>: <span class="number">5</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.3</span>&#125;,</span><br><span class="line">					                &#123;<span class="attr">lt</span>: <span class="number">1</span>, <span class="attr">color</span>: <span class="string">'red'</span>, <span class="attr">colorAlpha</span>: <span class="number">0.0</span>&#125;          <span class="comment">// (-Infinity, 100)</span></span><br><span class="line">					            ],</span><br><span class="line">					        &#125;,</span><br><span class="line">					</span><br><span class="line">					        <span class="comment">// 具体数据</span></span><br><span class="line">					        series: [</span><br><span class="line">					            &#123;</span><br><span class="line">					                name: <span class="string">'国内各省确诊病例'</span>, <span class="comment">// 系列名称</span></span><br><span class="line">					                zoom:<span class="number">1.2</span>,<span class="comment">//地图大小</span></span><br><span class="line">					                type: <span class="string">'map'</span>, <span class="comment">// 系列类型，地图</span></span><br><span class="line">					                map: <span class="string">'china'</span>, <span class="comment">// 要使用的地图，即上面注册的地图名称</span></span><br><span class="line">					                roam: <span class="literal">true</span>, <span class="comment">// 开启鼠标缩放和平移漫游</span></span><br><span class="line">					                label: &#123; <span class="comment">// 图形上的文本标签，地图默认显示数据名</span></span><br><span class="line">					                    show: <span class="literal">true</span>,</span><br><span class="line">					                    formatter: <span class="string">'&#123;b&#125;'</span>, <span class="comment">// b是数据名，c是数据值</span></span><br><span class="line">					                    fontSize: <span class="number">8</span></span><br><span class="line">					                &#125;,</span><br><span class="line">					                data: data.today,</span><br><span class="line">					            &#125;</span><br><span class="line">					        ]</span><br><span class="line">					    &#125;;	</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">					opt = &#123;</span><br><span class="line">					    <span class="comment">// 设置标题和副标题及副标题跳转链接</span></span><br><span class="line">					    title: &#123;</span><br><span class="line">					      text: <span class="string">'新冠疫情-全球累计数据'</span>,</span><br><span class="line">					      subtext: <span class="string">'数据来源--开课吧'</span>,</span><br><span class="line">					      sublink: <span class="string">'https://www.kaikeba.com'</span></span><br><span class="line">					    &#125;,</span><br><span class="line">					    <span class="comment">// 数据提示框</span></span><br><span class="line">					    tooltip: &#123;</span><br><span class="line">					      trigger: <span class="string">'item'</span>, <span class="comment">// item放到数据区域触发</span></span><br><span class="line">					      <span class="comment">//formatter: '&#123;b&#125;&lt;br/&gt;&#123;c&#125; (人)' // 提示数据格式br表示换行，地图 : &#123;a&#125;（系列名称），&#123;b&#125;（区域名称），&#123;c&#125;（合并数值）, &#123;d&#125;（无）</span></span><br><span class="line">					      formatter:<span class="function"><span class="keyword">function</span> (<span class="params">params, ticket, callback</span>) </span>&#123;</span><br><span class="line">					        <span class="keyword">if</span>(params.data)</span><br><span class="line">					          <span class="keyword">return</span> params.name+<span class="string">'&lt;br/&gt;'</span>+params.data.value+<span class="string">' (人)'</span>;</span><br><span class="line">					        <span class="keyword">else</span></span><br><span class="line">					          <span class="keyword">return</span> params.name+<span class="string">'&lt;br/&gt; 未公布感染人数'</span>;</span><br><span class="line">					      &#125;</span><br><span class="line">					    &#125;,</span><br><span class="line">					    <span class="comment">// 视觉映射方案1：,疫情颜色根据传染病疫情等级分类为5个级别：黄色-橙色-深橙色-红色-深红色</span></span><br><span class="line">					    <span class="comment">// 为了是视觉分布更好，可以添加更多的颜色范围，然后适当调小max的值，因为美国和其它国家相差太大</span></span><br><span class="line">					    <span class="comment">/**/</span></span><br><span class="line"><span class="comment">					    visualMap: &#123;</span></span><br><span class="line"><span class="comment">					      min: 1, // 颜色映射对应的最小值，即对应下面的lightskyblue</span></span><br><span class="line"><span class="comment">					      max: 500000, // 颜色映射对应的最大值，即对应下面的orangered</span></span><br><span class="line"><span class="comment">					      text: ['严重', '轻微'], // 映射图上下标记文本</span></span><br><span class="line"><span class="comment">					      realtime: true, // 是否显示拖拽手柄，映射条可以拖拽调整要映射的范围</span></span><br><span class="line"><span class="comment">					      calculable: true, // 拖拽时，是否实时更新地图</span></span><br><span class="line"><span class="comment">					      inRange: &#123;</span></span><br><span class="line"><span class="comment">					        color: ['rgba(222,0,0,0.2)','rgba(160,0,0,1)'] // 颜色映射范围，最小值，过渡值，最大值</span></span><br><span class="line"><span class="comment">					      &#125;</span></span><br><span class="line"><span class="comment">					    &#125;,</span></span><br><span class="line"><span class="comment">					</span></span><br><span class="line"><span class="comment">					    </span></span><br><span class="line"><span class="comment">					</span></span><br><span class="line"><span class="comment">					</span></span><br><span class="line"><span class="comment">					    // 具体数据</span></span><br><span class="line"><span class="comment">					    series: [</span></span><br><span class="line"><span class="comment">					      &#123;</span></span><br><span class="line"><span class="comment">					        name: '全球各国确诊病例', // 系列名称</span></span><br><span class="line"><span class="comment">					        zoom:1.2,//地图大小</span></span><br><span class="line"><span class="comment">					        type: 'map', // 系列类型，地图</span></span><br><span class="line"><span class="comment">					        map: 'world', // 要使用的地图，即上面注册的地图名称</span></span><br><span class="line"><span class="comment">					        roam: true, // 开启鼠标缩放和平移漫游</span></span><br><span class="line"><span class="comment">					        label: &#123; // 图形上的文本标签，地图默认显示数据名</span></span><br><span class="line"><span class="comment">					          show: true,</span></span><br><span class="line"><span class="comment">					          fontSize:8,</span></span><br><span class="line"><span class="comment">					          //formatter: '&#123;b&#125;', // b是数据名，c是数据值</span></span><br><span class="line"><span class="comment">					          formatter:function (params, ticket, callback) &#123;</span></span><br><span class="line"><span class="comment">					            //公布了数据 且 数据累计数据大于5万的显示国家名称</span></span><br><span class="line"><span class="comment">					            if(params.data &amp;&amp; params.data.value&gt;50000) &#123;</span></span><br><span class="line"><span class="comment">					              return params.name;</span></span><br><span class="line"><span class="comment">					            &#125;else&#123;</span></span><br><span class="line"><span class="comment">					              return '';</span></span><br><span class="line"><span class="comment">					            &#125;</span></span><br><span class="line"><span class="comment">					          &#125;</span></span><br><span class="line"><span class="comment">					        &#125;,</span></span><br><span class="line"><span class="comment">					        data: data.g_data,</span></span><br><span class="line"><span class="comment">					      &#125;</span></span><br><span class="line"><span class="comment">					    ]</span></span><br><span class="line"><span class="comment">					  &#125;;</span></span><br><span class="line"><span class="comment">				&#125;</span></span><br><span class="line"><span class="comment">				break;</span></span><br><span class="line"><span class="comment">				case 3:&#123;</span></span><br><span class="line"><span class="comment">					opt = &#123;</span></span><br><span class="line"><span class="comment">					    // 设置标题和副标题及副标题跳转链接</span></span><br><span class="line"><span class="comment">					    title: &#123;</span></span><br><span class="line"><span class="comment">					      text: '新冠疫情-全球新增数据',</span></span><br><span class="line"><span class="comment">					      subtext: '数据来源--开课吧',</span></span><br><span class="line"><span class="comment">					      sublink: 'https://www.kaikeba.com'</span></span><br><span class="line"><span class="comment">					    &#125;,</span></span><br><span class="line"><span class="comment">					    // 数据提示框</span></span><br><span class="line"><span class="comment">					    tooltip: &#123;</span></span><br><span class="line"><span class="comment">					      trigger: 'item', // item放到数据区域触发</span></span><br><span class="line"><span class="comment">					      formatter:function (params, ticket, callback) &#123;</span></span><br><span class="line"><span class="comment">					        if(params.data)</span></span><br><span class="line"><span class="comment">					          return params.name+'&lt;br/&gt;'+params.data.value+' (人)';</span></span><br><span class="line"><span class="comment">					        else</span></span><br><span class="line"><span class="comment">					          return params.name+'&lt;br/&gt; 未公布感染人数';</span></span><br><span class="line"><span class="comment">					      &#125;</span></span><br><span class="line"><span class="comment">					    &#125;,</span></span><br><span class="line"><span class="comment">					    // 视觉映射方案1：,疫情颜色根据传染病疫情等级分类为5个级别：黄色-橙色-深橙色-红色-深红色</span></span><br><span class="line"><span class="comment">					    // 为了是视觉分布更好，可以添加更多的颜色范围，然后适当调小max的值，因为美国和其它国家相差太大</span></span><br><span class="line"><span class="comment">					    /**/</span></span><br><span class="line">					    visualMap: &#123;</span><br><span class="line">					      min: <span class="number">0</span>, <span class="comment">// 颜色映射对应的最小值，</span></span><br><span class="line">					      max: <span class="number">20000</span>, <span class="comment">// 颜色映射对应的最大值</span></span><br><span class="line">					      text: [<span class="string">'严重'</span>, <span class="string">'轻微'</span>], <span class="comment">// 映射图上下标记文本</span></span><br><span class="line">					      realtime: <span class="literal">true</span>, <span class="comment">// 是否显示拖拽手柄，映射条可以拖拽调整要映射的范围</span></span><br><span class="line">					      calculable: <span class="literal">true</span>, <span class="comment">// 拖拽时，是否实时更新地图</span></span><br><span class="line">					      inRange: &#123;</span><br><span class="line">					        color: [<span class="string">'rgba(160,0,0,0)'</span>,<span class="string">'rgba(160,0,0,1)'</span>] <span class="comment">// 颜色映射范围，最小值，过渡值，最大值</span></span><br><span class="line">					      &#125;</span><br><span class="line">					    &#125;,</span><br><span class="line">					    <span class="comment">// 具体数据</span></span><br><span class="line">					    series: [</span><br><span class="line">					      &#123;</span><br><span class="line">					        name: <span class="string">'全球各国新增病例'</span>, <span class="comment">// 系列名称</span></span><br><span class="line">					        zoom:<span class="number">1.2</span>,<span class="comment">//地图大小</span></span><br><span class="line">					        type: <span class="string">'map'</span>, <span class="comment">// 系列类型，地图</span></span><br><span class="line">					        map: <span class="string">'world'</span>, <span class="comment">// 要使用的地图，即上面注册的地图名称</span></span><br><span class="line">					        roam: <span class="literal">true</span>, <span class="comment">// 开启鼠标缩放和平移漫游</span></span><br><span class="line">					        label: &#123; <span class="comment">// 图形上的文本标签，地图默认显示数据名</span></span><br><span class="line">					          show: <span class="literal">true</span>,</span><br><span class="line">					          fontSize:<span class="number">8</span>,</span><br><span class="line">					          <span class="comment">//formatter: '&#123;b&#125;', // b是数据名，c是数据值</span></span><br><span class="line">					          formatter:<span class="function"><span class="keyword">function</span> (<span class="params">params, ticket, callback</span>) </span>&#123;</span><br><span class="line">					            <span class="comment">//公布了数据 且 数据累计数据大于5万的显示国家名称</span></span><br><span class="line">					            <span class="keyword">if</span>(params.data &amp;&amp; params.data.value&gt;<span class="number">1000</span> || params.name == <span class="string">'中国'</span>) &#123;</span><br><span class="line">					              <span class="keyword">return</span> params.name;</span><br><span class="line">					            <span class="keyword">else</span>&#123;</span><br><span class="line">					              <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">					            &#125;</span><br><span class="line">					          &#125;</span><br><span class="line">					        &#125;,</span><br><span class="line">					        data: data.g_today,</span><br><span class="line">					      &#125;</span><br><span class="line">					    ]</span><br><span class="line">					  &#125;;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			 myChart.setOption(opt);</span><br><span class="line">		&#125;</span><br><span class="line">		updateMap(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

</blockquote>
<h1 id="动态网页JSP"><a href="#动态网页JSP" class="headerlink" title="动态网页JSP"></a><strong>动态网页JSP</strong></h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><blockquote>
<p>静态网页 -&gt; 动态网页 </p>
<p>JSP 全称JavaServer Pages </p>
<p>是由Sun Microsystems公司主导创建的一种动态网页技术标准。 </p>
<p>JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成网页，然后供用户浏 览。 </p>
<p>原理：根据Java程序获取的数据+前端程序员的界面模板 生成新的网页供用户访问。</p>
</blockquote>
<h2 id="三种代码块"><a href="#三种代码块" class="headerlink" title="三种代码块"></a>三种代码块</h2><blockquote>
<p>Java代码执行区域（脚本标签）： </p>
<p>​                特点：每次用户访问，代码都会执行。 </p>
<p>​                &lt;% </p>
<p>​                        Java代码编写在这里 </p>
<p>​                %&gt; </p>
<p>Java代码成员区域（声明标签）： </p>
<p>​                特点： </p>
<p>​                                只能用于定义成员。（以这次任务涉及的知识点来说，定义变量）  </p>
<p>​                                这里的代码，只会在第一个用户访问时执行。 </p>
<p>​                                                第一个用户访问时这里如果定义了变量，那么在服务器关闭之前，后续用户访问时，在 &lt;%%&gt;代码块中都可以重复使用这个变量。 </p>
<p>​                &lt;%! </p>
<p>​                                Java代码编写在这里 </p>
<p>​                %&gt; </p>
<p>将数据输出到页面模板（表达式标签）： </p>
<p>​                特点： </p>
<p>​                                每次用户访问，代码都会执行。 </p>
<p>​                                语句的结尾不加分号 </p>
<p>​                &lt;%=Java中的数据或变量%&gt;</p>
</blockquote>
<h1 id="微信公众号的申请"><a href="#微信公众号的申请" class="headerlink" title="微信公众号的申请"></a><strong>微信公众号的申请</strong></h1><blockquote>
<p>输入微信公众平台的网址 mp.weixin.qq.com 注册订阅号（其他需要企业或者组织才能注册）</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818121643.png" alt="image-20200818121642612"></p>
<p>按照步骤进行操作即可，后续需要身份认证才能操作。</p>
</blockquote>
<h1 id="疫情地图的页面实现"><a href="#疫情地图的页面实现" class="headerlink" title="疫情地图的页面实现"></a><strong>疫情地图的页面实现</strong></h1><blockquote>
<p>在JSP代码中，嵌入疫情数据读取代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 创建一个URL类的对象url</span></span><br><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"https://zaixianke.com/yq/all"</span>);</span><br><span class="line"><span class="comment">//2. 通过URL类的对象url打开网络连接 , 并得到连接对象conn</span></span><br><span class="line">URLConnection conn = url.openConnection();</span><br><span class="line"><span class="comment">//3. 通过连接对象 , 得到用于读取网页内容的输入流 is</span></span><br><span class="line">InputStream is = conn.getInputStream();</span><br><span class="line"><span class="comment">//4. 将上述的字节流is 装饰为字符流 , 将字符流再装饰为一次能读取一行的字符流br</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is,<span class="string">"UTF-8"</span>));</span><br><span class="line"><span class="comment">//5. 通过字符流br,读取一行内容,并将内容存储到变量text中</span></span><br><span class="line">String text = br.readLine();</span><br><span class="line"><span class="comment">//6. 可以将读取到的内容text 输出显示到控制台</span></span><br><span class="line">System.out.println(text);</span><br><span class="line"></span><br><span class="line"><span class="comment">//不要忘记导包</span></span><br></pre></td></tr></table></figure>

<p>将读取到的数据输出到前端模板上</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &lt;%=text%&gt;;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818122701.png" alt=""></p>
</blockquote>
<blockquote>
<p>不要忘记导包</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;%@ page session=<span class="string">"false"</span> <span class="keyword">import</span>=<span class="string">"java.net.URL, java.net.URLConnection, java.io.InputStream, java.io.BufferedReader, java.io.InputStreamReader"</span> pageEncoding=<span class="string">"UTF-8"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span> %&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818122745.png" alt="image-20200818122745101"></p>
</blockquote>
<blockquote>
<p>此时疫情地图的动态实现就完成了</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200817215455.png" alt="image-20200817213747943"></p>
</blockquote>
<h1 id="高并发优化"><a href="#高并发优化" class="headerlink" title="高并发优化"></a><strong>高并发优化</strong></h1><h2 id="目前并发详情"><a href="#目前并发详情" class="headerlink" title="目前并发详情"></a>目前并发详情</h2><blockquote>
<p>在浏览器中按下F12，可以看到图中这次请求为296ms，一个用户请求大致会消耗服务器0.3s，我们服务器申请的为两核 的，每秒的并发量大致不会超过10个人。</p>
<p><img src="C:%5CUsers%5Cllz%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818211142863.png" alt="image-20200818211142863"></p>
</blockquote>
<h2 id="优化策略"><a href="#优化策略" class="headerlink" title="优化策略"></a>优化策略</h2><blockquote>
<p>首先我们来了解一下，我们的时间主要消耗在哪里</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818211656.png" alt="image-20200818211655742"></p>
<p>具体流程如图：北京用户访问==&gt;(10-20ms)访问阿里云（张家口）服务器==&gt;（50-100ms）访问北京开课吧服务器获取数据==&gt;(50-100ms)北京服务器返回数据给张家口服务器==&gt;(10-20ms)返回给用户。整体消耗120ms-240ms。</p>
<p>而开课吧服务器的数据每十分钟更新一次，所以我们可以在阿里云服务器上设置一个疫情数据的缓存，每十分钟更新一次。</p>
<p>代码实现如下：</p>
<p>index.jsp</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page session=<span class="string">"false"</span> <span class="keyword">import</span>=<span class="string">"java.net.URL, java.net.URLConnection, java.io.InputStream, java.io.BufferedReader, java.io.InputStreamReader"</span> pageEncoding=<span class="string">"UTF-8"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;疫情地图&lt;/title&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="comment">// 记录时间戳 ，0表示1970年1月1日</span></span><br><span class="line">    <span class="keyword">long</span> time = <span class="number">0</span>;</span><br><span class="line">    String text;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">//时间戳:指的是格林威治开始时( 1970-1-1 00:00) 历到月前的毫秒数13位数字</span></span><br><span class="line">    <span class="keyword">if</span>(System.currentTimeMillis() - time &gt; <span class="number">600000</span>) &#123;        <span class="comment">// 600000表示10分钟</span></span><br><span class="line">        <span class="comment">// 更新时间</span></span><br><span class="line">        time = System.currentTimeMillis();</span><br><span class="line">        <span class="comment">//1. 创建一个URL类的对象url </span></span><br><span class="line">        URL url = <span class="keyword">new</span> URL(<span class="string">"https://zaixianke.com/yq/all"</span>); </span><br><span class="line">        <span class="comment">//2. 通过URL类的对象url打开网络连接 , 并得到连接对象conn </span></span><br><span class="line">        URLConnection conn = url.openConnection(); </span><br><span class="line">        <span class="comment">//3. 通过连接对象 , 得到用于读取网页内容的输入流 is </span></span><br><span class="line">        InputStream is = conn.getInputStream(); </span><br><span class="line">        <span class="comment">//4. 将上述的字节流is 装饰为字符流 ,</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is,<span class="string">"UTF-8"</span>));</span><br><span class="line">        <span class="comment">//5. 通过字符流br,读取一行内容,并将内容存储到变量text中</span></span><br><span class="line">	   text = br.readLine();</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">    <span class="keyword">var</span> data = &lt;%=text%&gt;;</span><br><span class="line">&lt;/script&gt;        </span><br><span class="line">&lt;script src="https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src="https://cdn.bootcss.com/echarts/4.7.0/echarts.min.js"&gt;&lt;/script&gt; </span><br><span class="line">&lt;script src="http://cdn.zaixianke.com/china.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src="http://cdn.zaixianke.com/world.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id="main" style="width: 100%;height:600px;"&gt;&lt;/div&gt; &lt;br&gt;</span><br><span class="line">&lt;div style=<span class="string">"text-align:center"</span>&gt;</span><br><span class="line">		&lt;a style="color:#333" class="control" align="center" href="javascript:updateMap(0)"&gt;国内累计&lt;/a&gt;</span><br><span class="line">		&lt;a style="color:#333" class="control" align="center" href="javascript:updateMap(1)"&gt;国内新增&lt;/a&gt;</span><br><span class="line">		&lt;a style="color:#333" class="control" align="center" href="javascript:updateMap(2)"&gt;全球累计&lt;/a&gt;</span><br><span class="line">		&lt;a style="color:#333" class="control" align="center" href="javascript:updateMap(3)"&gt;全球新增&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src="control.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="优化后并发承载变化"><a href="#优化后并发承载变化" class="headerlink" title="优化后并发承载变化"></a>优化后并发承载变化</h2><blockquote>
<p>代码更改后，我们来刷新看一下时间：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818213002.png" alt="image-20200818213002327"></p>
<p>基本稳定在20ms左右。</p>
</blockquote>
<h1 id="世界疫情地图部署上线"><a href="#世界疫情地图部署上线" class="headerlink" title="世界疫情地图部署上线"></a><strong>世界疫情地图部署上线</strong></h1><blockquote>
<p>微信扫码登录注册好的订阅号，点击自动回复，打开自动回复（个人申请的账号，不能进行企业认证无法加入连接，只能通过自动回复的方式实现可跳转的链接）</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818162956.png" alt="image-20200818162345246"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818162947.png" alt="image-20200818162938615"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200818180346.png" alt="image-20200818180345907"></p>
<p>至此，我们的疫情地图就成功上线订阅号啦。</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>AC-递归实现指数型枚举</title>
    <url>/2020/08/15/AC-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%8C%87%E6%95%B0%E5%9E%8B%E6%9E%9A%E4%B8%BE/</url>
    <content><![CDATA[<p>从 1~n 这 n 个整数中随机选取任意多个，输出所有可能的选择方案。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一个整数n。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>每行输出一种方案。</p>
<p>同一行内的数必须升序排列，相邻两个数用恰好1个空格隔开。</p>
<p>对于没有选任何数的方案，输出空行。</p>
<p>本题有自定义校验器（SPJ），各行（不同方案）之间的顺序任意。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤15</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">2 3</span><br><span class="line">1</span><br><span class="line">1 3</span><br><span class="line">1 2</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure>

<p><strong>题解:</strong></p>
<blockquote>
<p>暴力枚举</p>
<p>整体思路是准备出一个数组，将每个位置都遍历一次，选中的置为1，未重的置为-1，最后将其输出即可。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> b[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="comment">//判断何时选取到了规定的数目,并将符合条件的输出</span></span><br><span class="line">    <span class="keyword">if</span>(a&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(b[i] == <span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//递归选择,选中的置为1,未选中的置为-1,还未操作的置为0</span></span><br><span class="line">    b[a] = <span class="number">1</span>;</span><br><span class="line">    dfs(a+<span class="number">1</span>);</span><br><span class="line">    b[a] = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    b[a] = <span class="number">-1</span>;</span><br><span class="line">    dfs(a+<span class="number">1</span>);</span><br><span class="line">    b[a] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>AC-递归实现排列型枚举</title>
    <url>/2020/08/16/AC-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%8E%92%E5%88%97%E5%9E%8B%E6%9E%9A%E4%B8%BE/</url>
    <content><![CDATA[<p>把 1~nn 这 nn 个整数排成一行后随机打乱顺序，输出所有可能的次序。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数n。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>按照从小到大的顺序输出所有方案，每行1个。</p>
<p>首先，同一行相邻两个数用一个空格隔开。</p>
<p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤91≤n≤9</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">1 3 2</span><br><span class="line">2 1 3</span><br><span class="line">2 3 1</span><br><span class="line">3 1 2</span><br><span class="line">3 2 1</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>题解思路:</strong></p>
<p>暴力枚举每个位置上的所有数字的可能，前面位置已经时用过的数字不能重复使用，定义used数组来判断是否使用过该数字，满足条件后输出。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b[N],n;</span><br><span class="line"><span class="keyword">bool</span> used[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;b[j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!used[i])&#123;</span><br><span class="line">            used[i]=<span class="literal">true</span>;</span><br><span class="line">            b[t]=i;</span><br><span class="line">            dfs(t+<span class="number">1</span>);</span><br><span class="line">            b[t]=<span class="number">0</span>;</span><br><span class="line">            used[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>AC-费解的开关</title>
    <url>/2020/08/18/AC-%E8%B4%B9%E8%A7%A3%E7%9A%84%E5%BC%80%E5%85%B3/</url>
    <content><![CDATA[<p>你玩过“拉灯”游戏吗？25盏灯排成一个5x5的方形。每一个灯都有一个开关，游戏者可以改变它的状态。每一步，游戏者可以改变某一个灯的状态。游戏者改变一个灯的状态会产生连锁反应：和这个灯上下左右相邻的灯也要相应地改变其状态。</p>
<p>我们用数字“1”表示一盏开着的灯，用数字“0”表示关着的灯。下面这种状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10111</span><br><span class="line">01101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br></pre></td></tr></table></figure>

<p>在改变了最左上角的灯的状态后将变成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01111</span><br><span class="line">11101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br></pre></td></tr></table></figure>

<p>再改变它正中间的灯后状态将变成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01111</span><br><span class="line">11001</span><br><span class="line">11001</span><br><span class="line">10100</span><br><span class="line">11011</span><br></pre></td></tr></table></figure>

<p>给定一些游戏的初始状态，编写程序判断游戏者是否可能在6步以内使所有的灯都变亮。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入正整数nn，代表数据中共有nn个待解决的游戏初始状态。</p>
<p>以下若干行数据分为nn组，每组数据有5行，每行5个字符。每组数据描述了一个游戏的初始状态。各组数据间用一个空行分隔。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一共输出nn行数据，每行有一个小于等于6的整数，它表示对于输入数据中对应的游戏状态最少需要几步才能使所有灯变亮。</p>
<p>对于某一个游戏初始状态，若6步以内无法使所有灯变亮，则输出“-1”。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>0&lt;n≤5000&lt;n≤500</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">00111</span><br><span class="line">01011</span><br><span class="line">10001</span><br><span class="line">11010</span><br><span class="line">11100</span><br><span class="line"></span><br><span class="line">11101</span><br><span class="line">11101</span><br><span class="line">11110</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line"></span><br><span class="line">01111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">11111</span><br></pre></td></tr></table></figure>

<p>输出样例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">-1</span><br></pre></td></tr></table></figure>

<p>题解:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> g[N][N], backup[N][N];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">5</span>] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, dy[<span class="number">5</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">turn</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a = x + dx[i], b = y + dy[i];</span><br><span class="line">        <span class="keyword">if</span> (a &lt; <span class="number">0</span> || a &gt;= <span class="number">5</span> || b &lt; <span class="number">0</span> || b &gt;= <span class="number">5</span>) <span class="keyword">continue</span>;   <span class="comment">// 在边界外，直接忽略即可</span></span><br><span class="line">        g[a][b] ^= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ ) <span class="built_in">cin</span> &gt;&gt; g[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> op = <span class="number">0</span>; op &lt; <span class="number">32</span>; op ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(backup, g, <span class="keyword">sizeof</span> g);</span><br><span class="line">            <span class="keyword">int</span> <span class="built_in">step</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ )</span><br><span class="line">                <span class="keyword">if</span> (op &gt;&gt; i &amp; <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">step</span> ++ ;</span><br><span class="line">                    <span class="built_in">turn</span>(<span class="number">0</span>, i);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++ )</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j ++ )</span><br><span class="line">                    <span class="keyword">if</span> (g[i][j] == <span class="string">'0'</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">step</span> ++ ;</span><br><span class="line">                        <span class="built_in">turn</span>(i + <span class="number">1</span>, j);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">bool</span> dark = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ )</span><br><span class="line">                <span class="keyword">if</span> (g[<span class="number">4</span>][i] == <span class="string">'0'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dark = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!dark) res = <span class="built_in">min</span>(res, <span class="built_in">step</span>);</span><br><span class="line">            <span class="built_in">memcpy</span>(g, backup, <span class="keyword">sizeof</span> g);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (res &gt; <span class="number">6</span>) res = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Java基础-实现定时关机功能</title>
    <url>/2020/08/18/Java%E5%9F%BA%E7%A1%80-%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E5%85%B3%E6%9C%BA%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h1 id="任务名称-自动关机程序"><a href="#任务名称-自动关机程序" class="headerlink" title="任务名称: 自动关机程序"></a>任务名称: 自动关机程序</h1><blockquote>
<p>任务描述: </p>
<blockquote>
<p>1、提示用户，欢迎使用某某 关机程序 </p>
<p>2、提示用户，输入多少分钟后关机</p>
<p>3、根据用户输入，进行自动关机 </p>
<p>4、开始自动关机时，提示用户xx分钟后关机 </p>
</blockquote>
</blockquote>
<h1 id="Java-基础"><a href="#Java-基础" class="headerlink" title="Java 基础"></a>Java <strong>基础</strong></h1><h2 id="标识符"><a href="#标识符" class="headerlink" title="__标识符 __"></a>__标识符 __</h2><blockquote>
<p>Java对包、类、方法、参数和变量等要素命名时 使用的字符序列成为标识符，规则： </p>
<blockquote>
<ol>
<li>不能以数字开头。 </li>
<li>由数字、字母、下划线_和美元符号$组成。 </li>
<li>长度无限制 </li>
<li>不能是Java中的保留关键字</li>
</ol>
</blockquote>
<p>规范： 不遵守不会出错， 但是在团队协同开发中 ，会被团队嫌弃。</p>
</blockquote>
<h2 id="单行注释"><a href="#单行注释" class="headerlink" title="__单行注释 __"></a>__单行注释 __</h2><blockquote>
<p>//单行注释的范围: 从//开始 到 行的结束 </p>
<p>//注释: 注释是对代码的解释和说明,注释只是为了提高代码的可读性,注释不会被计算机作为指令执行 </p>
</blockquote>
<h2 id="定时关机"><a href="#定时关机" class="headerlink" title="定时关机"></a><strong>定时关机</strong></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">	<span class="comment">//代码分为结构定义语句, 和 功能执行语句. 功能执行语句必须以分号结尾</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//注释是对代码的解释和说明,注释只是为了提高代码的可读性,注释不会被计算机作为指令执行</span></span><br><span class="line">        <span class="comment">//关机</span></span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"shutdown -s -t 1000"</span>);</span><br><span class="line">        <span class="comment">//取消关机</span></span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"shutdown -a"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="导出jar文件流程"><a href="#导出jar文件流程" class="headerlink" title="导出jar文件流程"></a><strong>导出jar文件流程</strong></h2><blockquote>
<p>Files—&gt;Project Structure—&gt;Artifacts—&gt;jar—&gt;from modules with dependencies</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823111514.png" alt="image-20200823111016250"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823111630.png" alt="image-20200823111630574"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823112117.png" alt="image-20200823111815055"></p>
<p>选择要导出的文件主方法位置</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823112354.png" alt="image-20200823112354006"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823112452.png" alt="image-20200823112452118"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823112517.png" alt="image-20200823112517126"></p>
<p>此时就完成了Project Structure里的配置,</p>
<p>回到idea 主菜单,选择“Build —&gt;Build Artifacts—&gt;Build</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823131637.png" alt="image-20200823131636866"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823131701.png" alt="image-20200823131701227"></p>
<p>至此生成最终的可运行的jar。</p>
</blockquote>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a><strong>变量</strong></h2><blockquote>
<p>变量就是系统为程序分配的一块内存单元 ， 用于存储各种类型的数据。 由于该存储单元的数据可以发生 改变，因此得名“变量”。</p>
<p> 创建变量的格式：</p>
<p>​                 数据类型 变量名 = 初始值; </p>
<p>更改变量的内容： </p>
<p>​                变量名 = 新的值; </p>
<p>如何使用变量： </p>
<p>​                在后续的程序代码中,变量的名称就表示变量中存储的内容.所以直接使用名称即可</p>
</blockquote>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a><strong>数据类型</strong></h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a><strong>基本数据类型</strong></h3><blockquote>
<p>由于变量记录的数据内容大小不同， 导致所需的存储单元大小不同。</p>
<p> 这些不同大小的存储单元， 在Java中使用数据类型的概念加以描述。 </p>
<p>8种基本数据类型：</p>
<p>​                 数值类型6种：byte、short、int、long、float、double </p>
<p>​                字符类型：char </p>
<p>​                布尔类型：boolean （取值：true或false）</p>
<p> 创建变量的示例： </p>
<p>​                int x = 20; </p>
<p>​                x = 30;//x在内存中存储的数据就更新为了30</p>
</blockquote>
<h3 id="引用数据类型-（工具相关的数据类型）"><a href="#引用数据类型-（工具相关的数据类型）" class="headerlink" title="引用数据类型 （工具相关的数据类型）"></a><strong>引用数据类型 （工具相关的数据类型）</strong></h3><blockquote>
<p>字符串：String </p>
<p>创建变量的示例: </p>
<p>​                String text = “床前明月光,玻璃好上霜.要不及时擦,整不好得脏.”; </p>
<p>​                text = “从前有座山,山上有座庙,庙里有个老和尚正在对小和尚说:嘿嘿嘿”;</p>
</blockquote>
<h2 id="进行文字的显示"><a href="#进行文字的显示" class="headerlink" title="进行文字的显示"></a><strong>进行文字的显示</strong></h2><blockquote>
<p>方式1.通过普通文字展示 </p>
<p>​                System.out.println(变量或数据); </p>
<p>方式2.通过红色文字展示(通常用于提示错误) </p>
<p>​                System.err.println(变量或数据);</p>
</blockquote>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a><strong>运算符</strong></h2><blockquote>
<p>算术运算符： +-*/% </p>
<p>赋值运算符： = : 将等号右边的运算结果赋值给等号左边. </p>
<p>比较运算符： (特殊:运算的结果都是boolean类型的,非true即false) </p>
<p>​                == :比较符号两边是否相等,相等时结果为true </p>
<p>​                != :比较符号两边是否步相等,不相等时结果为false </p>
<p>​                &gt; :比较符号左边是否大于符号右边,大于时结果为true </p>
<p>​                &lt; :比较符号左边是否小于符号右边,小于时结果为true </p>
<p>​                &gt;= : … </p>
<p>​                &lt;= : … </p>
<p>字符串连接符： + </p>
<p>​                当+号的任意一边为字符串时, +号的含义就不再是算数运算符,而是字符串连接符. </p>
<p>​                例如: </p>
<p>​                                String text = “He”+”llo”+12;//结果是Hello12 </p>
<p>​                常见面试题: </p>
<p>​                                String text = 1+1+1+”1”+”1”+1+1;//“31111” </p>
</blockquote>
<h2 id="接收用户的键盘输入"><a href="#接收用户的键盘输入" class="headerlink" title="接收用户的键盘输入"></a><strong>接收用户的键盘输入</strong></h2><blockquote>
<p>//1. 用于创建接收用户输入的变量input </p>
<p>Scanner input = new Scanner(System.in); </p>
<p>//2. 先提示用户请输入 </p>
<p>System.out.println(“请输入一个秒数”); </p>
<p>//3. 接收用户输入 </p>
<p>String text = input.nextLine(); </p>
<p>System.out.println(“你输入的是:”+text);</p>
</blockquote>
<h1 id="定时关机程序"><a href="#定时关机程序" class="headerlink" title="定时关机程序"></a><strong>定时关机程序</strong></h1><blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.llz.demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">shutdown</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.	用于创建接收用户输入的变量input</span></span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//2.	先提示用户请输入</span></span><br><span class="line">        System.out.println(<span class="string">"您想在几分钟后关机"</span>);</span><br><span class="line">        <span class="comment">//3.	接收用户输入</span></span><br><span class="line">        <span class="keyword">int</span> text = input.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"计算机将在"</span>+text+<span class="string">"分钟后关机"</span>);</span><br><span class="line">        text *= <span class="number">60</span> ;</span><br><span class="line">        <span class="comment">//关机</span></span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"shutdown -s -t "</span>+text);</span><br><span class="line">        <span class="comment">//取消关机</span></span><br><span class="line"><span class="comment">//        Runtime.getRuntime().exec("shutdown -a");</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</blockquote>
]]></content>
  </entry>
  <entry>
    <title>LeetCode-70.爬楼梯</title>
    <url>/2020/08/22/LeetCode-70.%E7%88%AC%E6%A5%BC%E6%A2%AF/</url>
    <content><![CDATA[<h1 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接:"></a><strong>原题链接:</strong></h1><p><a href="https://leetcode-cn.com/problems/climbing-stairs" target="_blank" rel="noopener">https://leetcode-cn.com/problems/climbing-stairs</a></p>
<p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。</p>
<p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p>
<p>注意：给定 n 是一个正整数。</p>
<h1 id="示例1-："><a href="#示例1-：" class="headerlink" title="示例1 ："></a><strong>示例1 ：</strong></h1><blockquote>
<p>输入： 2<br>输出： 2<br>解释： 有两种方法可以爬到楼顶。</p>
<ol>
<li>1 阶 + 1 阶</li>
<li>2 阶</li>
</ol>
</blockquote>
<h1 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a><strong>示例 2：</strong></h1><blockquote>
<p>输入： 3<br>输出： 3<br>解释： 有三种方法可以爬到楼顶。</p>
<ol>
<li>1 阶 + 1 阶 + 1 阶</li>
<li>1 阶 + 2 阶</li>
<li>2 阶 + 1 阶</li>
</ol>
</blockquote>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解:"></a><strong>题解:</strong></h1><blockquote>
<p>动态规划:</p>
<p>给定 n 级台阶,最后一步可能为1 或 2 ,假定 n-1 级台阶或 n-2 级台阶的方法已经确定,则可得出 n 级台阶的公式: </p>
<p>f(n) = f(n - 1) + f(n - 2)(n &gt; 2)</p>
<p>类似斐波那契数列的求值。</p>
<p>接下来我们讨论一下极限，n 为正整数， n极限为1时，f(n)=1，n=2时f(n)=2，我们可以看出爬当前阶楼梯的方法只跟当前阶楼梯的前一阶以及前前阶楼梯有关，接下来只需定义两个变量往后递推即可。</p>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码:"></a><strong>代码:</strong></h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> a=<span class="number">1</span>,b=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            b=a+b;</span><br><span class="line">            a=b-a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200822113541.png" alt="image-20200822113411499"></p>
]]></content>
  </entry>
  <entry>
    <title>IDEA打jar包报错</title>
    <url>/2020/08/22/IDEA%E6%89%93jar%E5%8C%85%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<h1 id="背景："><a href="#背景：" class="headerlink" title="背景："></a><strong>背景</strong>：</h1><p>之前这个项目中的class打过一次jar包，想在另一个 class 中打包报了如图中的错误，</p>
<h1 id="报错："><a href="#报错：" class="headerlink" title="报错："></a><strong>报错</strong>：</h1><p>E:/study/IDEA/IDEA-project/Demo1/src/META-INF/MANIFEST. MF’ already exists in VFS</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823135436.png" alt="image-20200823135435605"></p>
<h1 id="原因："><a href="#原因：" class="headerlink" title="原因："></a><strong>原因</strong>：</h1><p>就是因为IDEA已对该module打过jar包，module中已经存在MANIFEST.MF文件夹。</p>
<h1 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a><strong>解决方法</strong>：</h1><p>只需找到将该目录下的此文件删除即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823134922.png" alt="image-20200823134922290"></p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode-11.盛最多水的容器</title>
    <url>/2020/08/24/LeetCode-11.%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</url>
    <content><![CDATA[<h1 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接:"></a>原题链接:</h1><p><a href="https://leetcode-cn.com/problems/container-with-most-water/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/container-with-most-water/</a></p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p>
</blockquote>
<blockquote>
<p>说明：你不能倾斜容器，且 n 的值至少为 2。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200824232413.png" alt="image-20200824232413405"></p>
<blockquote>
<p>图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p>
</blockquote>
<h1 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h1><blockquote>
<p>输入：[1,8,6,2,5,4,8,3,7]<br>输出：49</p>
</blockquote>
<h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路:"></a>题解思路:</h1><blockquote>
<p>看到这个题目可以想到双指针的解法，但是双指针解法是否正确，会不会漏掉一些情况呢。</p>
<p>首先我们按着以下步骤思考：</p>
<ol>
<li>当前两条直线是最两侧的直线，x 作为宽固定，此时取到最大值，其他的之线组合 x 逐渐缩小。</li>
<li>由图看出，左边线段较小，水的体积由最短的线条决定。<ol>
<li>此时如果移动左边的边界，x 一定减小，而 h 可能最小值小，可能比最小值大。（结果待定）</li>
<li>此时如果移动右边的边界，x 一定减小，而 h 只有可能比最小的线段还小。          （结果不变或变小）</li>
</ol>
</li>
<li>由此我们可以看出，只能移动较短的线条才有可能取到更大的值，依此类推，将结果遍历一次即可。</li>
</ol>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; <span class="built_in">height</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="built_in">height</span>.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="built_in">min</span>(<span class="built_in">height</span>[l], <span class="built_in">height</span>[r]) * (r - l);</span><br><span class="line">            a = <span class="built_in">max</span>(a, sum);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">height</span>[l] &lt;= <span class="built_in">height</span>[r]) &#123;</span><br><span class="line">                ++l;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                --r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.双指针</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200825104409.png" alt="image-20200825104409725"></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>LeetCode-26. 删除排序数组中的重复项</title>
    <url>/2020/08/24/LeetCode-26.%20%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</url>
    <content><![CDATA[<h1 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接:"></a>原题链接:</h1><p><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/</a></p>
<blockquote>
<p>给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。</p>
<p>不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。</p>
</blockquote>
<h1 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h1><blockquote>
<p>给定数组 nums = [1,1,2], </p>
<p>函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 </p>
<p>你不需要考虑数组中超出新长度后面的元素。</p>
</blockquote>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a>示例 2:</h2><blockquote>
<p>给定 nums = [0,0,1,1,1,2,2,3,3,4],</p>
<p>函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。</p>
<p>你不需要考虑数组中超出新长度后面的元素。</p>
</blockquote>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h3><blockquote>
<p>为什么返回数值是整数，但输出的答案是数组呢?</p>
<p>请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p>
<p>你可以想象内部操作如下:</p>
<p>// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝<br>int len = removeDuplicates(nums);</p>
<p>// 在函数里修改输入数组对于调用者是可见的。<br>// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。<br>for (int i = 0; i &lt; len; i++) {<br>    print(nums[i]);<br>}</p>
</blockquote>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解:"></a>题解:</h1><blockquote>
<p>/*<br>1.暴力循环一次，当前一位和后一位相同，删除后一位<br>2.暴力循环一次，当前一位和后一位相同，后者向前移动覆盖前面相同的值。指定一个cout，相同时让其位数加一，代表后者需要让其移动多少位。<br>3.用自带的 unique 函数覆盖重复元素<br>*/</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.</span></span><br><span class="line">        <span class="comment">// for (int i= 1; i&lt; nums.size();i++) &#123;</span></span><br><span class="line">        <span class="comment">//         while (i&lt;nums.size() &amp;&amp; nums[i-1] == nums[i]) nums.erase(nums.begin() + i);</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// return nums.size();</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//2.</span></span><br><span class="line">        <span class="comment">// int size = nums.size();</span></span><br><span class="line">        <span class="comment">// int cnt = 0; //统计当前元素需要前移的位数，注意还是计数排序思想！！！只不过不需要整个数组</span></span><br><span class="line">        <span class="comment">// for(int i=1; i&lt;size; ++i)&#123;</span></span><br><span class="line">        <span class="comment">//     if(nums[i] == nums[i-1])</span></span><br><span class="line">        <span class="comment">//         cnt++;</span></span><br><span class="line">        <span class="comment">//     nums[i-cnt] = nums[i]; //前移cnt个位置           </span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// return size-cnt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.</span></span><br><span class="line">        <span class="keyword">return</span> unique(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>())-nums.<span class="built_in">begin</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200825105218.png" alt="image-20200825105218069"></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>LN-JK-2.数组、链表、跳表的基本实现和特征</title>
    <url>/2020/08/25/LN-JK-2.%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8%E3%80%81%E8%B7%B3%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0%E5%92%8C%E7%89%B9%E5%BE%81/</url>
    <content><![CDATA[<h1 id="数组、链表、跳表基本实现和特性"><a href="#数组、链表、跳表基本实现和特性" class="headerlink" title="数组、链表、跳表基本实现和特性"></a>数组、链表、跳表基本实现和特性</h1><h2 id="Array-数组"><a href="#Array-数组" class="headerlink" title="Array(数组)"></a>Array(数组)</h2><ul>
<li>java,c++: int a[100];//初始化的时候先定义好容量</li>
<li>Python： list=[]//直接定义一个数组</li>
<li>JavaScript: let x=[1,2,3]</li>
</ul>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><table>
<thead>
<tr>
<th>方法</th>
<th>复杂度</th>
</tr>
</thead>
<tbody><tr>
<td>prepend</td>
<td>O(n)</td>
</tr>
<tr>
<td>append</td>
<td>O(1)</td>
</tr>
<tr>
<td>lookup</td>
<td>O(1)</td>
</tr>
<tr>
<td>insert</td>
<td>O(n)</td>
</tr>
<tr>
<td>delete</td>
<td>O(n)</td>
</tr>
</tbody></table>
<h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><blockquote>
<ol>
<li><p>在链表中，每个元素都有两个属性,Value和Next 。它的每一个元素一般用class定义。Next指向下一个元素。</p>
</li>
<li><p>如果只有一个向后的指针时，这样的链表叫做单链表。</p>
</li>
<li><p>当有两个指针时，这样的链表就叫做双向链表。</p>
</li>
<li><p>头指针用Head表示，尾指针用Tail。最后一个指针它的Next指向空，因为没有Next指针了。Tail的Next指针也可以指回到Head来。这个就叫做循环链表。</p>
</li>
</ol>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    Node next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span> &#123;</span></span><br><span class="line">	Node head; </span><br><span class="line">    Node (<span class="keyword">int</span> d) &#123; data = d;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="时间复杂度-1"><a href="#时间复杂度-1" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><table>
<thead>
<tr>
<th>方法</th>
<th>复杂度</th>
</tr>
</thead>
<tbody><tr>
<td>prepend</td>
<td>O(1)</td>
</tr>
<tr>
<td>append</td>
<td>O(1)</td>
</tr>
<tr>
<td>lookup</td>
<td>O(n)</td>
</tr>
<tr>
<td>insert</td>
<td>O(1)</td>
</tr>
<tr>
<td>delete</td>
<td>O(1)</td>
</tr>
</tbody></table>
<h2 id="跳表"><a href="#跳表" class="headerlink" title="跳表"></a>跳表</h2><blockquote>
<p>跳表是为了优化或者是弥补链表的缺陷而设计的。</p>
<p>在原始链表上建立多级索引以提高速度，空间换时间</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200825111356.png" alt="image-20200825111255912"></p>
</blockquote>
<h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><blockquote>
<p>跳表查询的时间复杂度分析：</p>
<p>时间复杂度：</p>
<p>每次访问一个元素，需要遍历索引的高度，即log n，时间复杂度O(log n)</p>
<p>空间复杂度 ：</p>
<p>索引的节点数为 n/2、n/4、n/8… 整体不会超过n，空间复杂度为O(n)</p>
</blockquote>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><blockquote>
<ol>
<li><p>LRU Cache - Linked list: LRU 缓存机制</p>
</li>
<li><p>Redis - Skip LIst</p>
</li>
</ol>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>LN-JK-1.时间复杂度和空间复杂度</title>
    <url>/2020/08/23/LN-JK-1.%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</url>
    <content><![CDATA[<blockquote>
<p>算法的优劣主要从时间和空间两方面进行分析：</p>
<blockquote>
<p>时间：是指执行当前算法所消耗的时间，我们通常用「时间复杂度」来描述。</p>
<p>空间：是指执行当前算法需要占用多少内存空间，我们通常用「空间复杂度」来描述。</p>
</blockquote>
</blockquote>
<h1 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度:"></a>时间复杂度:</h1><h2 id="常见的七种时间复杂度"><a href="#常见的七种时间复杂度" class="headerlink" title="常见的七种时间复杂度"></a>常见的七种时间复杂度</h2><blockquote>
<p>O（1）：Constant Complexity 常数复杂度</p>
<p>O（log n）：Logarithmic Complexity 对数复杂度</p>
<p>O（n）：Linear Complexity 线性时间复杂度</p>
<p>O（n^2）：N square Complexity 平方</p>
<p>O（n^3）：N cubic Complexity 立方</p>
<p>O（2^n）：Exponential Growth 指数</p>
<p>O（n!）：Factorial 阶乘</p>
<p><em>注</em>:<em>用到多种时,只看最高复杂度的运算</em></p>
</blockquote>
<h2 id="七种时间复杂度曲线"><a href="#七种时间复杂度曲线" class="headerlink" title="七种时间复杂度曲线:"></a>七种时间复杂度曲线:</h2><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200824000120.png" alt="image-20200823233037517"></p>
<h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><blockquote>
<h3 id="计算：1-2-3-4-…-n"><a href="#计算：1-2-3-4-…-n" class="headerlink" title="计算：1+2+3+4+…+n"></a><strong>计算：1+2+3+4+…+n</strong></h3><p>方法一：从1到n的循环累加 </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">	sum+=i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此方法循环了 n 次，时间复杂度为 O(n)。</p>
<p>方法二：公式法 sum = n (n+1)/2</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> sum = n(n+<span class="number">1</span>)/<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>此方法只运行一步，时间复杂度为 O(1)。</p>
</blockquote>
<h3 id="斐波那契额数列"><a href="#斐波那契额数列" class="headerlink" title="斐波那契额数列:"></a><strong>斐波那契额数列</strong>:</h3><blockquote>
<p>递归法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(n&lt;<span class="number">2</span>) <span class="keyword">return</span> n;</span><br><span class="line">	<span class="keyword">return</span> fib(n<span class="number">-1</span>) + fib(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>递归树：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823235645.png" alt="image-20200823233641687"></p>
<p>斐波那契数列递归解法存在大量的冗余，在这里先不做优化，只看时间复杂度为O(2^n)</p>
</blockquote>
<h2 id="主定理"><a href="#主定理" class="headerlink" title="主定理"></a>主定理</h2><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200823235634.png" alt="image-20200823235634487"></p>
<blockquote>
<p>二分查找:                                           O(log n)</p>
<p>二叉树遍历:                                       O(n)</p>
<p>二维矩阵（有序）二分查找:           O(n)</p>
<p>归并:                                                   O(nlog n)</p>
<p>主定理证明比较复杂，只记住这四种即可。</p>
</blockquote>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考:"></a>思考:</h2><blockquote>
<p>二叉树遍历-前序、中序、后序：时间复杂度是多少？<br>图的遍历：时间复杂度是多少？                     O(n)<br>搜索算法：DFS、BFS时间复杂度是多少？   O(n)<br>二分查找：时间复杂度是多少？                     O(log n)</p>
</blockquote>
<h1 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h1><blockquote>
<p>空间复杂度取决于以下因素:</p>
<ol>
<li><p>数组的长度</p>
<p>一维数组 O(n)</p>
<p>二维数组 O(n^2)</p>
</li>
<li><p>递归的深度</p>
<p>注: 递归里面开数组,空间复杂度为两者中的最大值</p>
</li>
</ol>
</blockquote>
<p>上述斐波那契额数列的递归解法的空间复杂度为递归的深度，即O(n);</p>
]]></content>
  </entry>
  <entry>
    <title>LN-JK-3.第二次课堂笔记</title>
    <url>/2020/08/31/LN-JK-3.%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="极客-第二次课堂笔记"><a href="#极客-第二次课堂笔记" class="headerlink" title="极客-第二次课堂笔记"></a>极客-第二次课堂笔记</h1><h1 id="二叉树的基础内容"><a href="#二叉树的基础内容" class="headerlink" title="二叉树的基础内容"></a>二叉树的基础内容</h1><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831113006.png" alt="image-20200831113006526"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831113030.png" alt="image-20200831113029974"></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831113053.png" alt="image-20200831113053545"></p>
<h1 id="《验证二叉搜索树》"><a href="#《验证二叉搜索树》" class="headerlink" title="《验证二叉搜索树》"></a>《验证二叉搜索树》</h1><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831112935.png" alt="image-20200831112935068"></p>
<blockquote>
<p>通过二叉搜索的性质，我们能想到只需遍历整棵树，并判断 node.left.val &lt; node.val &lt; node.right.val 对于每个结点是否成立。</p>
<p>需要注意的是不仅左子结点（右子结点）需要小于（大于）该结点，而且整个左子树（右子树）的所有的元素都应该小于（大于）该结点。所以我们在遍历的同时需要同结点的上界和下界比较。</p>
<h2 id="方法一：递归-前序遍历"><a href="#方法一：递归-前序遍历" class="headerlink" title="方法一：递归 + 前序遍历"></a>方法一：递归 + 前序遍历</h2><p>上述的思路可以通过递归的方法实现，将当前结点的值与上下界进行比较，然后在对左右子树进行递归。过程如图所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831112008.png" alt="image-20200831111618331"></p>
<p>如果当前结点的值应检验无效时，返回false。</p>
<p>源码如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831112241.png" alt="image-20200831111713988"></p>
<h2 id="方法二：递归-中序遍历"><a href="#方法二：递归-中序遍历" class="headerlink" title="方法二：递归 + 中序遍历"></a>方法二：递归 + 中序遍历</h2><p>我们也可以采用中序遍历的方式，因为中序遍历后的二叉搜索树是有序的，所以只需判断一次当前结点的值即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831112310.png" alt="image-20200831111730767"></p>
<h2 id="方法三：栈-中序遍历"><a href="#方法三：栈-中序遍历" class="headerlink" title="方法三：栈 + 中序遍历"></a>方法三：栈 + 中序遍历</h2><p>基于栈实现中序遍历。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831112129.png" alt="image-20200831111752167"></p>
<p>接下来讲解一下如何使用栈实现前中后序遍历，以栈实现中序遍历为例，过程如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831112110.png" alt="image-20200831111809138"></p>
</blockquote>
<blockquote>
<h3 id="栈实现中序遍历模板及关键点："><a href="#栈实现中序遍历模板及关键点：" class="headerlink" title="栈实现中序遍历模板及关键点："></a>栈实现中序遍历模板及关键点：</h3><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831112051.png" alt="image-20200831111850897"></p>
<h3 id="栈实现先序遍历："><a href="#栈实现先序遍历：" class="headerlink" title="栈实现先序遍历："></a>栈实现先序遍历：</h3><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831111921.png" alt="image-20200831111919195"></p>
<h3 id="栈实现后序遍历："><a href="#栈实现后序遍历：" class="headerlink" title="栈实现后序遍历："></a>栈实现后序遍历：</h3><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831111940.png" alt="image-20200831111940549"></p>
<p>综上， 我们分析了递归和栈实现《验证二叉搜索树》的思路。并且学习了二叉树的先中后序遍历。</p>
</blockquote>
<blockquote>
<h3 id="层序遍历"><a href="#层序遍历" class="headerlink" title="层序遍历"></a>层序遍历</h3><p>现在再给大家介绍一种遍历方式——层序遍历，层序比遍历非常好理解，就是将二叉树的每一层分遍历，直到最后所有的结点全部遍历完成，这里我们需要的辅助数据结构是队列，因为需要用到队列先进先出的特性。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831113258.png" alt="image-20200831113258424"></p>
<p>模板代码如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831113335.png" alt="image-20200831113334688"></p>
<p>大家可以做一下LeeCode102题《二叉树的层序遍历》，进一步理解层序遍历的思想和代码。</p>
</blockquote>
<blockquote>
<h2 id="《二叉树的最大深度》"><a href="#《二叉树的最大深度》" class="headerlink" title="《二叉树的最大深度》"></a>《二叉树的最大深度》</h2><p>接下来我们看下《二叉树的最大深度》, 这道题目根据我们上面总结的内容，不难写出来。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200831113431.png" alt="image-20200831113431668"></p>
<p><img src="C:%5CUsers%5Cllz%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200831113516371.png" alt="image-20200831113516371"></p>
<p>注意使用递归和栈实现二叉树的前中后序遍历的是非常重要，很多题目都会涉及到二叉树的遍历，所以大家一定要多加练习，保证能够熟练的写出来。大家可以尝试去完成 LeetCode 中二叉树的前中后序遍历的题目，进行巩固练习。</p>
<p>综上， 我们分析了递归和栈实现 《验证二叉树》《二叉树的最大深度》的思路和源码 并给出拓展,</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>OJ在线编程常见输入输出练习场</title>
    <url>/2020/09/07/OJ%E5%9C%A8%E7%BA%BF%E7%BC%96%E7%A8%8B%E5%B8%B8%E8%A7%81%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%BB%83%E4%B9%A0%E5%9C%BA/</url>
    <content><![CDATA[<p>题目链接: <a href="https://ac.nowcoder.com/acm/contest/5646" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/5646</a></p>
<h1 id="A-A-B-1"><a href="#A-A-B-1" class="headerlink" title="A A+B(1)"></a>A A+B(1)</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>  计算a+b </p>
<h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入包括两个正整数a,b(1 &lt;&#x3D; a, b &lt;&#x3D; 10^9),输入数据包括多组。</span><br></pre></td></tr></table></figure>

<h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输出a+b的结果</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 5</span><br><span class="line">10 20</span><br></pre></td></tr></table></figure>

<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">30</span><br></pre></td></tr></table></figure>

<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a+b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="B-A-B-2"><a href="#B-A-B-2" class="headerlink" title="B A+B(2)"></a>B A+B(2)</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>  计算a+b </p>
<h2 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入第一行包括一个数据组数t(1 &lt;&#x3D; t &lt;&#x3D; 100)</span><br><span class="line">接下来每行包括两个正整数a,b(1 &lt;&#x3D; a, b &lt;&#x3D; 10^9)</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输出a+b的结果</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">1 5</span><br><span class="line">10 20</span><br></pre></td></tr></table></figure>

<h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">30</span><br></pre></td></tr></table></figure>

<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a+b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="C-A-B-3"><a href="#C-A-B-3" class="headerlink" title="C A+B(3)"></a>C A+B(3)</h1><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>  计算a+b </p>
<h2 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入包括两个正整数a,b(1 &lt;&#x3D; a, b &lt;&#x3D; 10^9),输入数据有多组, 如果输入为0 0则结束输入</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输出a+b的结果</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 5</span><br><span class="line">10 20</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure>

<h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">30</span><br></pre></td></tr></table></figure>

<h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b &amp;&amp; (a!=<span class="number">0</span> &amp;&amp;b!=<span class="number">0</span>))</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a+b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="D-A-B-4"><a href="#D-A-B-4" class="headerlink" title="D A+B(4)"></a>D A+B(4)</h1><h2 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h2><p>  计算一系列数的和 </p>
<h2 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入数据包括多组。</span><br><span class="line">每组数据一行,每行的第一个整数为整数的个数n(1 &lt;&#x3D; n &lt;&#x3D; 100), n为0的时候结束输入。</span><br><span class="line">接下来n个正整数,即需要求和的每个正整数。</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">每组数据输出求和的结果</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 1 2 3 4</span><br><span class="line">5 1 2 3 4 5</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">15</span><br></pre></td></tr></table></figure>

<h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a &amp;&amp; a!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">            sum+=b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="E-A-B-5"><a href="#E-A-B-5" class="headerlink" title="E A+B(5)"></a>E A+B(5)</h1><h2 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h2><p>  计算一系列数的和 </p>
<h2 id="输入描述-4"><a href="#输入描述-4" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入的第一行包括一个正整数t(1 &lt;&#x3D; t &lt;&#x3D; 100), 表示数据组数。</span><br><span class="line">接下来t行, 每行一组数据。</span><br><span class="line">每行的第一个整数为整数的个数n(1 &lt;&#x3D; n &lt;&#x3D; 100)。</span><br><span class="line">接下来n个正整数, 即需要求和的每个正整数。</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-4"><a href="#输出描述-4" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">每组数据输出求和的结果</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">4 1 2 3 4</span><br><span class="line">5 1 2 3 4 5</span><br></pre></td></tr></table></figure>

<h2 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">15</span><br></pre></td></tr></table></figure>

<h2 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c,sum;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="keyword">while</span>(a--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;b;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">            sum+=c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="F-A-B-6"><a href="#F-A-B-6" class="headerlink" title="F A+B(6)"></a>F A+B(6)</h1><h2 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h2><p>  计算一系列数的和 </p>
<h2 id="输入描述-5"><a href="#输入描述-5" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入数据有多组, 每行表示一组输入数据。</span><br><span class="line">每行的第一个整数为整数的个数n(1 &lt;&#x3D; n &lt;&#x3D; 100)。</span><br><span class="line">接下来n个正整数, 即需要求和的每个正整数。</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-5"><a href="#输出描述-5" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">每组数据输出求和的结果</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 1 2 3 4</span><br><span class="line">5 1 2 3 4 5</span><br></pre></td></tr></table></figure>

<h2 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">15</span><br></pre></td></tr></table></figure>

<h2 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a)&#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">            sum+=b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G-A-B-7"><a href="#G-A-B-7" class="headerlink" title="G A+B(7)"></a>G A+B(7)</h1><h2 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h2><p>计算一系列数的和</p>
<h2 id="输入描述-6"><a href="#输入描述-6" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入数据有多组, 每行表示一组输入数据。</span><br><span class="line"></span><br><span class="line">每行不定有n个整数，空格隔开。(1 &lt;&#x3D; n &lt;&#x3D; 100)。</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-6"><a href="#输出描述-6" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">每组数据输出求和的结果</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">4 5</span><br><span class="line">0 0 0 0 0</span><br></pre></td></tr></table></figure>

<h2 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">9</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h2 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a)&#123;</span><br><span class="line">        sum+=a;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">cin</span>.<span class="built_in">get</span>()==<span class="string">'\n'</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            sum=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="H-字符串排序-1"><a href="#H-字符串排序-1" class="headerlink" title="H 字符串排序(1)"></a>H 字符串排序(1)</h1><h2 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h2><p>对输入的字符串进行排序后输出</p>
<h2 id="输入描述-7"><a href="#输入描述-7" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入有两行，第一行n</span><br><span class="line"></span><br><span class="line">第二行是n个空格隔开的字符串</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-7"><a href="#输出描述-7" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输出一行排序后的字符串，空格隔开，无结尾空格</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">c d a bb e</span><br></pre></td></tr></table></figure>

<h2 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a bb c d e</span><br></pre></td></tr></table></figure>

<h2 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        st.push_back(s);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(st.<span class="built_in">begin</span>(),st.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;st[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="I-字符串排序-2"><a href="#I-字符串排序-2" class="headerlink" title="I 字符串排序(2)"></a>I 字符串排序(2)</h1><h2 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h2><p>对输入的字符串进行排序后输出</p>
<h2 id="输入描述-8"><a href="#输入描述-8" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">多个测试用例，每个测试用例一行。</span><br><span class="line"></span><br><span class="line">每行通过空格隔开，有n个字符，n＜100</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-8"><a href="#输出描述-8" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对于每组测试用例，输出一行排序过的字符串，每个字符串通过空格隔开</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a c bb</span><br><span class="line">f dddd</span><br><span class="line">nowcoder</span><br></pre></td></tr></table></figure>

<h2 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a bb c</span><br><span class="line">dddd f</span><br><span class="line">nowcoder</span><br></pre></td></tr></table></figure>

<h2 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; str;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)&#123;</span><br><span class="line">        str.push_back(s);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">cin</span>.<span class="built_in">get</span>() == <span class="string">'\n'</span>)&#123;</span><br><span class="line">            sort(str.<span class="built_in">begin</span>(),str.<span class="built_in">end</span>()); </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str.<span class="built_in">size</span>()<span class="number">-1</span>;i++)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;str[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;str[str.<span class="built_in">size</span>()<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            str.<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="J-字符串排序-3"><a href="#J-字符串排序-3" class="headerlink" title="J 字符串排序(3)"></a>J 字符串排序(3)</h1><h2 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h2><p>对输入的字符串进行排序后输出</p>
<h2 id="输入描述-9"><a href="#输入描述-9" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">多个测试用例，每个测试用例一行。</span><br><span class="line">每行通过,隔开，有n个字符，n＜100</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-9"><a href="#输出描述-9" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对于每组用例输出一行排序后的字符串，用&#39;,&#39;隔开，无结尾空格</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a,c,bb</span><br><span class="line">f,dddd</span><br><span class="line">nowcoder</span><br></pre></td></tr></table></figure>

<h2 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a,bb,c</span><br><span class="line">dddd,f</span><br><span class="line">nowcoder</span><br></pre></td></tr></table></figure>

<h2 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; str;</span><br><span class="line">    <span class="built_in">string</span> a,s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a)&#123;</span><br><span class="line">        <span class="function"><span class="built_in">stringstream</span> <span class="title">ss</span><span class="params">(a)</span></span>;</span><br><span class="line">        <span class="keyword">while</span>(getline(ss,s,<span class="string">','</span>))</span><br><span class="line">            str.push_back(s);</span><br><span class="line">        sort(str.<span class="built_in">begin</span>(),str.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.<span class="built_in">size</span>()<span class="number">-1</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;str[i]&lt;&lt;<span class="string">","</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;str[str.<span class="built_in">size</span>()<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        str.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="K-自测本地通过提交为0"><a href="#K-自测本地通过提交为0" class="headerlink" title="K 自测本地通过提交为0"></a>K 自测本地通过提交为0</h1><h2 id="题目描述-10"><a href="#题目描述-10" class="headerlink" title="题目描述"></a>题目描述</h2><p>  每年前几场在线笔试编程题的时候，总有同学询问为什么我本地测试通过，自测也通过，提交代码系统却返回通过率0。 </p>
<p>  这不是系统的错，可能是因为 </p>
<p>  1.你对题目理解错了，你的代码只过了样例或你自己的数据 </p>
<p>  2.你的代码逻辑有问题，你的代码只过了样例或你自己的数据 </p>
<p>  总之就是你的代码只是过了样例和自测数据，后台的测试数据你根本不可见，要多自己思考。 </p>
<p>  这个题目如果你提交后通过率为0，又觉得自己代码是正确的，可以 <a href="https://ac.nowcoder.com/acm/contest/view-submission?submissionId=41103233" target="_blank" rel="noopener">点击查看</a> 通过的代码 </p>
<p>  谨记： </p>
<p>  当你笔试的时候怀疑系统或者题目数据有问题的时候请务必先怀疑自己的代码! </p>
<p>  当你笔试的时候怀疑系统或者题目数据有问题的时候请务必先怀疑自己的代码!  </p>
<p>  请帮忙把这个练习专题发给你的朋友同学吧，感谢感谢  </p>
<h2 id="输入描述-10"><a href="#输入描述-10" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入有多组测试用例，每组空格隔开两个整数</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-10"><a href="#输出描述-10" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对于每组数据输出一行两个整数的和</span><br></pre></td></tr></table></figure>

<p>示例1</p>
<h2 id="输入-10"><a href="#输入-10" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure>

<h2 id="输出-10"><a href="#输出-10" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h2 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a+b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>P-打印图形练习</title>
    <url>/2020/09/08/P-%E6%89%93%E5%8D%B0%E5%9B%BE%E5%BD%A2%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h1><p>打印图形<br>1<br>3  2<br>4  5  6<br>10 9  8  7</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解:"></a>题解:</h1><blockquote>
<p>思路：</p>
<ol>
<li>首先利用双重循环打印斜三角形框架。</li>
<li>将数字按位置顺序存放。</li>
<li>将偶数列的数据逆序排列,打印。</li>
</ol>
</blockquote>
<h1 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h1><blockquote>
<p>这里需要注意的有两点：</p>
<ol>
<li><p>如何指定数组中某个位置的逆序输出。</p>
<blockquote>
<p>vector的升序排序是sort(a.begin(),a.end())，降序排序为sort(a.rbegin(),a.rend()).</p>
<p>这里需要注意一下：</p>
<p>c.begin() 返回一个迭代器，它指向容器c的第一个元素</p>
<p>c.end() 返回一个迭代器，它指向容器c的最后一个元素的下一个位置</p>
<p>c.rbegin() 返回一个逆序迭代器，它指向容器c的最后一个元素</p>
<p>c.rend() 返回一个逆序迭代器，它指向容器c的第一个元素前面的位置</p>
<p>逆向迭代器是一种反向遍历容器的迭代器。也就是，从最后一个元素到第一个元素遍历容器。反向迭代器将自增（和自减）的含义反过来了：对于反向迭代器，++ 运算将访问前一个元素，而 – 运算则访问下一个元素。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200908120007.png" alt="image-20200908120007266"></p>
<p>执行并观察以下程序帮助理解：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n=<span class="number">4</span>,s=<span class="number">0</span>;</span><br><span class="line">	<span class="comment">//cin&gt;&gt;n;</span></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n*n;i++) a.push_back(i);</span><br><span class="line">	sort(a.rbegin()+<span class="number">2</span>,a.rend()<span class="number">-5</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n*n;i++) <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>; 	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200908115931.png" alt="image-20200908115922322"></p>
</blockquote>
</li>
<li><p>偶数列在数组中的坐标。</p>
<p>由题目可以观察得出，</p>
<p>需要排序的起始位置为之前输出的位数总和，终止位置为本行及本行以上的位数总和。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200908120506.png" alt="image-20200908120506235"></p>
<p>得出表达式（1/2）<em>n</em>(n+1)。</p>
</li>
</ol>
</blockquote>
<h1 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,s=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n;i++) a.push_back(i);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>((i+<span class="number">1</span>)%<span class="number">2</span>==<span class="number">0</span>) sort(a.rend()<span class="number">-0.5</span>*(i+<span class="number">1</span>)*(i+<span class="number">1</span>+<span class="number">1</span>),a.rend()<span class="number">-0.5</span>*(i)*(i+<span class="number">1</span>));</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=n-i<span class="number">-1</span>;j&lt;n;j++) &#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;a[s++]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>LeetCode-20. 有效的括号</title>
    <url>/2020/09/09/LeetCode-20.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</url>
    <content><![CDATA[<h1 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接:"></a>原题链接:</h1><blockquote>
<p><a href="https://leetcode-cn.com/problems/valid-parentheses/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/valid-parentheses/</a></p>
</blockquote>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h1><blockquote>
<p>给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串，判断字符串是否有效。</p>
<p>有效字符串需满足：</p>
<p>左括号必须用相同类型的右括号闭合。<br>左括号必须以正确的顺序闭合。<br>注意空字符串可被认为是有效字符串。</p>
</blockquote>
<h1 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h1><blockquote>
<p>示例 1:</p>
<p>输入: “()”<br>输出: true<br>示例 2:</p>
<p>输入: “()[]{}”<br>输出: true<br>示例 3:</p>
<p>输入: “(]”<br>输出: false<br>示例 4:</p>
<p>输入: “([)]”<br>输出: false<br>示例 5:</p>
<p>输入: “{[]}”<br>输出: true</p>
</blockquote>
<h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路:"></a>题解思路:</h1><blockquote>
<ol>
<li>观察题目具有最近相关性，所以用栈操作。</li>
<li>首先剪枝操作，长度为奇数的一定错。第一个字符不为“（{【 ” 其中一个为错。</li>
<li>遍历字符串，当遇到左括号，入栈。遇到右括号，查看是否与栈顶元素匹配，匹配则出栈。</li>
<li>如果最后栈为空，那么它是有效的括号，反之不是。</li>
</ol>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValid</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.</span></span><br><span class="line">        <span class="comment">// stack&lt;char&gt; a;</span></span><br><span class="line">        <span class="comment">// if (s.size()%2==1) return false;</span></span><br><span class="line">        <span class="comment">// for(int i = 0;i&lt;s.size();i++) &#123;</span></span><br><span class="line">        <span class="comment">//     if(s[i] == '(' || s[i] == '[' || s[i] == '&#123;') &#123;</span></span><br><span class="line">        <span class="comment">//         a.push(s[i]);</span></span><br><span class="line">        <span class="comment">//         continue;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">//     if(a.empty()) return false;</span></span><br><span class="line">        <span class="comment">//     if((s[i]==')' &amp;&amp; a.top() == '(') || (s[i]==']' &amp;&amp; a.top() == '[') || (s[i]=='&#125;' &amp;&amp; a.top() == '&#123;')) &#123;</span></span><br><span class="line">        <span class="comment">//         a.pop();</span></span><br><span class="line">        <span class="comment">//     &#125;else &#123;</span></span><br><span class="line">        <span class="comment">//         break;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// return a.empty();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.hash_map</span></span><br><span class="line">        <span class="comment">// if(s.size() %2 != 0) return false;</span></span><br><span class="line">        <span class="comment">// stack&lt;char&gt; a;</span></span><br><span class="line">        <span class="comment">// unordered_map&lt;char,char&gt; pair = &#123;</span></span><br><span class="line">        <span class="comment">//     &#123;')','('&#125;,</span></span><br><span class="line">        <span class="comment">//     &#123;'&#125;','&#123;'&#125;,</span></span><br><span class="line">        <span class="comment">//     &#123;']','['&#125;</span></span><br><span class="line">        <span class="comment">// &#125;;</span></span><br><span class="line">        <span class="comment">// for (char str : s) &#123;</span></span><br><span class="line">        <span class="comment">//     if (pair.count(str) ) &#123;</span></span><br><span class="line">        <span class="comment">//         if(a.empty() || a.top() != pair[str]) return false;</span></span><br><span class="line">        <span class="comment">//         a.pop();</span></span><br><span class="line">        <span class="comment">//     &#125; else &#123;</span></span><br><span class="line">        <span class="comment">//         a.push(str);</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// return a.empty();</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.switch case</span></span><br><span class="line">        <span class="comment">// if(s.size() % 2 != 0)  return false;</span></span><br><span class="line">        <span class="comment">// stack&lt;char&gt; a;</span></span><br><span class="line">        <span class="comment">// for ( char str : s )&#123;</span></span><br><span class="line">        <span class="comment">//     switch(str)&#123;</span></span><br><span class="line">        <span class="comment">//         case '(' :</span></span><br><span class="line">        <span class="comment">//         case '&#123;' :</span></span><br><span class="line">        <span class="comment">//         case '[' : a.push(str); break;</span></span><br><span class="line">        <span class="comment">//         case '&#125;' : if(a.empty() || a.top() != '&#123;') return false; a.pop(); break;</span></span><br><span class="line">        <span class="comment">//         case ']' : if(a.empty() || a.top() != '[') return false; a.pop(); break;</span></span><br><span class="line">        <span class="comment">//         case ')' : if(a.empty() || a.top() != '(') return false; a.pop(); break;</span></span><br><span class="line">        <span class="comment">//         default : ;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// return a.empty();</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>


</blockquote>
]]></content>
  </entry>
  <entry>
    <title>LeetCode-155.最小栈</title>
    <url>/2020/09/10/LeetCode-155.%E6%9C%80%E5%B0%8F%E6%A0%88/</url>
    <content><![CDATA[<h1 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接:"></a>原题链接:</h1><blockquote>
<p><a href="https://leetcode-cn.com/problems/min-stack/submissions/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/min-stack/submissions/</a></p>
</blockquote>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h1><blockquote>
<p>设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。</p>
<p>push(x) —— 将元素 x 推入栈中。<br>pop() —— 删除栈顶的元素。<br>top() —— 获取栈顶元素。<br>getMin() —— 检索栈中的最小元素。</p>
</blockquote>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h1><blockquote>
<p>输入：<br>[“MinStack”,”push”,”push”,”push”,”getMin”,”pop”,”top”,”getMin”]<br>[[],[-2],[0],[-3],[],[],[],[]]</p>
<p>输出：<br>[null,null,null,null,-3,null,0,-2]</p>
</blockquote>
<h1 id="注"><a href="#注" class="headerlink" title="注"></a>注</h1><blockquote>
<p>解释：<br>MinStack minStack = new MinStack();<br>minStack.push(-2);<br>minStack.push(0);<br>minStack.push(-3);<br>minStack.getMin();   –&gt; 返回 -3.<br>minStack.pop();<br>minStack.top();      –&gt; 返回 0.<br>minStack.getMin();   –&gt; 返回 -2.</p>
<p>提示：</p>
<p>pop、top 和 getMin 操作总是在 非空栈 上调用。</p>
</blockquote>
<h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路:"></a>题解思路:</h1><blockquote>
<p>题目中的要求除了检索最小值，其他方法与常规的栈相同，只需解决gitMin()方法,其余方法依旧使用栈即可。</p>
<ol>
<li>辅助栈<ol>
<li>对于栈来说，如果一个元素 a 在入栈时，栈里有其它的元素 b, c, d，那么无论这个栈在之后经历了什么操作，只要 栈顶为a时，栈中的最小值不会发生变化。</li>
<li>所以我们生成一个辅助栈，与原栈中的元素同进同出，不过进的是原栈中的最小值。</li>
</ol>
</li>
<li>pair<ol>
<li>思路与上一个一样，不过这里采用pair进行对应。</li>
</ol>
</li>
</ol>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MinStack</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stk_min;</span><br><span class="line">    <span class="comment">/** initialize your data structure here. */</span></span><br><span class="line">    MinStack() &#123;</span><br><span class="line">        stk_min.push(INT_MAX);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        stk.push(x);</span><br><span class="line">        x&lt;stk_min.top() ? stk_min.push(x) : stk_min.push(stk_min.top());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        stk.pop();</span><br><span class="line">        stk_min.pop();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stk.top();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getMin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stk_min.top();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MinStack object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * MinStack* obj = new MinStack();</span></span><br><span class="line"><span class="comment"> * obj-&gt;push(x);</span></span><br><span class="line"><span class="comment"> * obj-&gt;pop();</span></span><br><span class="line"><span class="comment"> * int param_3 = obj-&gt;top();</span></span><br><span class="line"><span class="comment"> * int param_4 = obj-&gt;getMin();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//2.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MinStack</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    <span class="comment">/** initialize your data structure here. */</span></span><br><span class="line">    MinStack() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        ans.empty() ? ans.push(&#123;x,x&#125;) : x&lt;ans.top().second ? ans.push(&#123;x,x&#125;) : ans.push(&#123;x,ans.top().second&#125; );</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ans.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ans.top().first;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getMin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ans.top().second;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MinStack object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * MinStack* obj = new MinStack();</span></span><br><span class="line"><span class="comment"> * obj-&gt;push(x);</span></span><br><span class="line"><span class="comment"> * obj-&gt;pop();</span></span><br><span class="line"><span class="comment"> * int param_3 = obj-&gt;top();</span></span><br><span class="line"><span class="comment"> * int param_4 = obj-&gt;getMin();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>


</blockquote>
]]></content>
  </entry>
  <entry>
    <title>解决Spring Boot Application in default package</title>
    <url>/2020/09/15/%E8%A7%A3%E5%86%B3Spring%20Boot%20Application%20in%20default%20package/</url>
    <content><![CDATA[<blockquote>
<p> Spring Boot Application in default package</p>
</blockquote>
<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><blockquote>
<p>在 IDEA 新建项目运行时,主类飘红</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200915113656.png" alt="image-20200915112613644"></p>
</blockquote>
<blockquote>
<p>运行报以下错误</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200915113652.png" alt="image-20200915111421796"></p>
</blockquote>
<h1 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h1><blockquote>
<p>根据飘红显示的解释可以看出，我们的主类放在了默认的包，即main函数直接放在了Java目录下。</p>
<p>由于主类中的@SpringBootApplicationz注解会自动扫描当前包下面及其子包下面的所有组件，并将这些组件加载到spring容器里面。而在默认包下，相当于没有定义包，更没子包的概念，所以会报错。</p>
</blockquote>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><blockquote>
<p>将主类移动至一个包下，使其存在子包即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200915113644.png" alt="image-20200915113644258"></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>LeetCode-84. 柱状图中最大的矩形</title>
    <url>/2020/09/11/LeetCode-84.%20%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定 n 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。</p>
<p>求在该柱状图中，能够勾勒出来的矩形的最大面积。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200911092612.png" alt="image-20200911092552720"></p>
<p>以上是柱状图的示例，其中每个柱子的宽度为 1，给定的高度为 [2,1,5,6,2,3]。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20200911092607.png" alt="image-20200911092607178"></p>
<p>图中阴影部分为所能勾勒出的最大矩形面积，其面积为 10 个单位。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h1><p>输入: [2,1,5,6,2,3]<br>输出: 10</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><blockquote>
<ol>
<li>对于一个高度，如果能得到向左和向右的边界</li>
<li>那么就能对每个高度求一次面积</li>
<li>遍历所有高度，即可得出最大面积</li>
<li>使用单调栈，在出栈操作时得到前后边界并计算面积</li>
</ol>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,m=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">largestRectangleArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; heights)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        heights.insert(heights.<span class="built_in">begin</span>(),<span class="number">0</span>);</span><br><span class="line">        heights.push_back(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//4</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;heights.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(!a.empty() &amp;&amp; heights[i]&lt;heights[a.back()])&#123;</span><br><span class="line">                <span class="keyword">int</span> cur = a.back();    <span class="comment">//2</span></span><br><span class="line">                a.pop_back();          </span><br><span class="line">                <span class="keyword">int</span> left = cur;       <span class="comment">//2</span></span><br><span class="line">                <span class="keyword">int</span> right = i<span class="number">-1</span>;          <span class="comment">//3</span></span><br><span class="line">                <span class="keyword">int</span> s = (right-left+<span class="number">1</span>) * heights[cur];</span><br><span class="line">                sum = <span class="built_in">max</span>(sum,s);</span><br><span class="line">            &#125;</span><br><span class="line">            a.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="参考题解"><a href="#参考题解" class="headerlink" title="参考题解"></a>参考题解</h1><p><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram/soluton/84-by-ikaruga/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/largest-rectangle-in-histogram/soluton/84-by-ikaruga/</a></p>
]]></content>
  </entry>
  <entry>
    <title>Android-LN-1.第一个Android程序</title>
    <url>/2021/01/12/Android-LN-1.%E7%AC%AC%E4%B8%80%E4%B8%AAAndroid%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="创建-Android-项目"><a href="#创建-Android-项目" class="headerlink" title="创建 Android 项目"></a>创建 Android 项目</h1><p>本节课向您介绍如何使用 Android Studio 创建新的 Android 项目，并介绍该项目中的一些文件。</p>
<p>要创建新的 Android 项目，请按以下步骤操作：</p>
<ol>
<li><p>安装最新版 <a href="https://developer.android.google.cn/studio/" target="_blank" rel="noopener">Android Studio</a>。</p>
</li>
<li><p>在 <strong>Welcome to Android Studio</strong> 窗口中，点击 <strong>Start a new Android Studio project</strong>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112195213.png" alt="image-20210112195158526"></p>
<p><strong>图 1.</strong> Android Studio 欢迎屏幕</p>
<ol>
<li>如果您已打开一个项目，请依次选择 <strong>File &gt; New &gt; New Project</strong>。</li>
<li>在 <strong>Select a Project Template</strong> 窗口中，选择 <strong>Empty Activity</strong>，然后点击 <strong>Next</strong>。</li>
<li>在Configure your project窗口中，完成以下操作：<ul>
<li>在 <strong>Name</strong> 字段中输入“My First App”。</li>
<li>在 <strong>Package name</strong> 字段中输入“com.example.myfirstapp”。</li>
<li>如果您想将项目放在其他文件夹中，请更改其 <strong>Save</strong> 位置。</li>
<li>从 <strong>Language</strong> 下拉菜单中选择 <strong>Java</strong> 或 <strong>Kotlin</strong>。</li>
<li>在 <strong>Minimum SDK</strong> 字段中选择您的应用支持的最低 Android 版本。</li>
<li>如果您的应用需要旧版库支持，请选中 <strong>Use legacy android.support libraries</strong> 复选框。</li>
<li>其他选项保持原样。</li>
</ul>
</li>
<li>点击 <strong>Finish</strong>。</li>
</ol>
</li>
</ol>
<p>经过一段时间的处理后，Android Studio 主窗口会出现。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112195325.png" alt="image-20210112195325621"></p>
<p><strong>图 2.</strong> Android Studio 主窗口</p>
<ul>
<li><p>下面花一点时间了解一下最重要的文件。</p>
<p>首先，确保已打开 <strong>Project</strong> 窗口（依次选择 <strong>View &gt; Tool Windows &gt; Project</strong>），并从该窗口顶部的下拉列表中选择 Android 视图。随后，您可以看到以下文件：</p>
<ul>
<li><p><strong>app &gt; java &gt; com.example.myfirstapp &gt; MainActivity</strong></p>
<p>这是主 Activity。它是应用的入口点。当您构建和运行应用时，系统会启动此 <code>Activity</code> 的实例并加载其布局。</p>
</li>
<li><p><strong>app &gt; res &gt; layout &gt; activity_main.xml</strong></p>
<p>此 XML 文件定义了 Activity 界面的布局。它包含一个 <code>TextView</code> 元素，其中具有“Hello, World!”文本</p>
</li>
<li><p><strong>app &gt; manifests &gt; AndroidManifest.xml</strong></p>
<p><a href="https://developer.android.google.cn/guide/topics/manifest/manifest-intro" target="_blank" rel="noopener">清单文件</a>描述了应用的基本特性并定义了每个应用组件。</p>
</li>
<li><p><strong>Gradle Scripts &gt; build.gradle</strong></p>
<p>有两个使用此名称的文件：一个针对项目“Project: My First App”，另一个针对应用模块“Module: app”。每个模块均有自己的 <code>build.gradle</code> 文件，但此项目当前仅有一个模块。您可以使用每个模块的 <code>build.file</code> 控制 <a href="https://developer.android.google.cn/studio/releases/gradle-plugin" target="_blank" rel="noopener">Gradle 插件</a>构建应用的方式。如需详细了解此文件，请参阅<a href="https://developer.android.google.cn/studio/build#module-level" target="_blank" rel="noopener">配置构建</a>。</p>
</li>
</ul>
</li>
</ul>
<h1 id="运行应用"><a href="#运行应用" class="headerlink" title="运行应用"></a>运行应用</h1><p>以上，我们创建了一个会显示“Hello, World!” 的 Android 应用。 现在，可以在真实设备或模拟器上运行应用。</p>
<h2 id="在真实设备上运行"><a href="#在真实设备上运行" class="headerlink" title="在真实设备上运行"></a>在真实设备上运行</h2><p>按照以下步骤设置设备：</p>
<ol>
<li>使用一根 USB 数据线将设备连接到开发计算机。 如果您是在 Windows 上开发的，则可能需要为设备<a href="https://developer.android.google.cn/studio/run/oem-usb" target="_blank" rel="noopener">安装合适的 USB 驱动程序</a>。</li>
<li>执行以下步骤，在<strong>开发者选项</strong>窗口中启用 <strong>USB 调试</strong>：<ol>
<li>打开<strong>设置</strong>应用。</li>
<li>如果设备使用 Android v8.0 或更高版本，请选择<strong>系统</strong>。 否则，请继续执行下一步。</li>
<li>滚动到底部，然后选择<strong>关于手机</strong>。</li>
<li>滚动到底部，然后点按<strong>版本号</strong>七次。</li>
<li>返回上一屏幕，滚动到底部，然后点按<strong>开发者选项</strong>。</li>
<li>在<strong>开发者选项</strong>窗口中，向下滚动以查找并启用 <strong>USB 调试</strong>。</li>
</ol>
</li>
</ol>
<p>按照以下步骤操作，在设备上运行应用：</p>
<ol>
<li>在 Android Studio 中，从工具栏中的运行/调试配置下拉菜单中选择您的应用。</li>
<li>在工具栏中，从目标设备下拉菜单中选择要用来运行应用的设备。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200122.png" alt="image-20210112200121929"></p>
<p><strong>图 1.</strong> 目标设备下拉菜单</p>
<ol>
<li><p>点击 <strong>Run</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200204.png" alt="image-20210112200204324">。</p>
<p>Android Studio 会在连接的设备上安装您的应用并启动它。 您现在会看到设备上的应用中显示了“Hello, World!”。</p>
</li>
</ol>
<h2 id="在模拟器上运行"><a href="#在模拟器上运行" class="headerlink" title="在模拟器上运行"></a>在模拟器上运行</h2><p>按照以下步骤操作，在模拟器上运行应用：</p>
<ol>
<li><p>在 Android Studio 中<a href="https://developer.android.google.cn/studio/run/managing-avds#createavd" target="_blank" rel="noopener">创建一个 Android 虚拟设备 (AVD)</a>，模拟器可以使用它安装和运行您的应用。</p>
</li>
<li><p>在工具栏中，从运行/调试配置下拉菜单中选择您的应用。</p>
</li>
<li><p>从目标设备下拉菜单中，选择要用来运行应用的 AVD。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200122.png" alt="image-20210112200121929"></p>
<p><strong>图 2.</strong> 目标设备下拉菜单</p>
</li>
</ol>
<ol start="4">
<li><p>点击 <strong>Run</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200204.png" alt="image-20210112200204324">。</p>
<p>Android Studio 会在 AVD 上安装应用并启动模拟器。 您现在会看到应用中显示了“Hello, World!”。</p>
</li>
</ol>
<h1 id="构建简单的界面"><a href="#构建简单的界面" class="headerlink" title="构建简单的界面"></a>构建简单的界面</h1><p>在本节课中，您将学习如何使用 <a href="https://developer.android.google.cn/studio/write/layout-editor" target="_blank" rel="noopener">Android Studio Layout Editor</a> 创建包含一个文本框和一个按钮的布局。 这将为下一课打下基础，下节课将学习如何在点按该按钮时让应用将文本框的内容发送到其他 Activity。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200628.png" alt="image-20210112200628890"></p>
<p><strong>图 1.</strong> 最终布局的屏幕截图</p>
<p>Android 应用的界面以布局和微件的层次结构形式构建而成。 布局是 <a href="https://developer.android.google.cn/reference/android/view/ViewGroup" target="_blank" rel="noopener"><code>ViewGroup</code></a> 对象，即控制其子视图在屏幕上的放置方式的容器。 微件是 <a href="https://developer.android.google.cn/reference/android/view/View" target="_blank" rel="noopener"><code>View</code></a> 对象，即按钮和文本框等界面组件。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200653.png" alt="image-20210112200652979"></p>
<p><strong>图 2.</strong> 对象如何在布局中形成分支并包含 对象的图示。<code>ViewGroup``View</code></p>
<p>Android 提供了 <code>ViewGroup</code> 和 <code>View</code> 类的 XML 词汇表，因此界面的大部分内容都在 XML 文件中定义。不过，本文档将介绍如何使用 Android Studio 的 Layout Editor 创建布局，而不是编写 XML 代码。布局编辑器会在拖放视图构建布局时为我们编写 XML 代码。</p>
<h2 id="打开布局编辑器"><a href="#打开布局编辑器" class="headerlink" title="打开布局编辑器"></a>打开布局编辑器</h2><p>首先，请按照以下步骤设置工作区：</p>
<ol>
<li>在 Project 窗口中，依次打开 <strong>app &gt; res &gt; layout &gt; activity_main.xml</strong>。</li>
<li>要给 Layout Editor 留出空间，请隐藏 <strong>Project</strong> 窗口。 为此，请依次选择 <strong>View &gt; Tool Windows &gt; Project</strong>，或直接点击 Android Studio 屏幕左侧的 <strong>Project</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200736.png" alt="image-20210112200736240">。</li>
<li>如果您的编辑器显示 XML 源代码，请点击窗口底部的 <strong>Design</strong> 标签。</li>
<li>点击 <strong>Select Design Surface</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200755.png" alt="image-20210112200755934">，然后选择 <strong>Blueprint</strong>。</li>
<li>在 Layout Editor 工具栏中点击 <strong>Show</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200815.png" alt="image-20210112200815671">，并确保已勾选 <strong>Show All Constraints</strong>。</li>
<li>确保 Autoconnect 处于关闭状态。 当 Autoconnect 处于关闭状态时，工具栏中的提示会显示 <strong>Enable Autoconnection to Parent</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200837.png" alt="image-20210112200837611">。</li>
<li>点击工具栏中的 <strong>Default Margins</strong>，然后选择 <strong>16</strong>。 如果需要，您可以稍后调整每个视图的外边距。</li>
<li>点击工具栏中的 <strong>Device for Preview</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200858.png" alt="image-20210112200858257">，然后选择 <strong>5.5, 1440 × 2560, 560 dpi (Pixel XL)</strong>。</li>
</ol>
<p>您的布局编辑器现在如图 3 所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200919.png" alt="image-20210112200919603"></p>
<p><strong>图 3.</strong> 显示 的布局编辑器<code>activity_main.xml</code></p>
<p>如需了解详情，请参阅 <a href="https://developer.android.google.cn/studio/write/layout-editor#intro" target="_blank" rel="noopener">布局编辑器简介</a>。</p>
<p>左下方的 <strong>Component Tree</strong> 面板显示布局的视图层次结构。在本例中，根视图是 <code>ConstraintLayout</code>，它仅包含一个 <code>TextView</code> 对象。</p>
<p><code>ConstraintLayout</code> 是一种布局，它根据同级视图和父布局的约束条件定义每个视图的位置。 这样一来，使用扁平视图层次结构既可以创建简单布局，又可以创建复杂布局。 这种布局无需嵌套布局。 嵌套布局是布局内的布局（如图 2 所示），会增加绘制界面所需的时间。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200936.png" alt="image-20210112200936774"></p>
<p><strong>图 4.</strong> 内放有两个视图的图示<code>ConstraintLayout</code></p>
<p>例如，您可以声明以下布局，如图 4 所示：</p>
<ul>
<li>视图 A 距离父布局顶部 16 dp。</li>
<li>视图 A 距离父布局左侧 16 dp。</li>
<li>视图 B 距离视图 A 右侧 16 dp。</li>
<li>视图 B 与视图 A 顶部对齐。</li>
</ul>
<p>在后面几部分中，您将构建一个与图 4 中的布局类似的布局。</p>
<h2 id="添加文本框"><a href="#添加文本框" class="headerlink" title="添加文本框"></a>添加文本框</h2><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200952.png" alt="image-20210112200952519"></p>
<p><strong>图 5.</strong> 按照到父布局顶部和左侧的距离约束文本框</p>
<p>请按照下面的步骤添加文本框：</p>
<ol>
<li>首先，您需要移除布局中已有的内容。在 <strong>Component Tree</strong> 面板中点击 <strong>TextView</strong>，然后按 Delete 键。</li>
<li>在 <strong>Palette</strong> 面板中，点击 <strong>Text</strong> 以显示可用的文本控件。</li>
<li>将 <strong>Plain Text</strong> 拖动到设计编辑器中，并将其放在靠近布局顶部的位置。这是一个接受纯文本输入的 <code>EditText</code> 微件。</li>
<li>点击设计编辑器中的视图。 现在，您可以在每个角上看到调整视图大小的正方形手柄，并在每个边上看到圆形约束锚点。 为了更好地控制，您可能需要放大编辑器。 为此，请使用 Layout Editor 工具栏中的 <strong>Zoom</strong> 按钮。</li>
<li>点击并按住顶边上的锚点，将其向上拖动，直至其贴靠到布局顶部，然后将其释放。 这是一个约束条件：它会将视图约束在已设置的默认外边距内。 在本例中，您将其设置为距离布局顶部 16 dp。</li>
<li>使用相同的过程创建一个从视图左侧到布局左侧的约束条件。</li>
</ol>
<p>结果应如图 5 所示。</p>
<h2 id="添加按钮"><a href="#添加按钮" class="headerlink" title="添加按钮"></a>添加按钮</h2><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201007.png" alt="image-20210112201006895"></p>
<p><strong>图 6.</strong> 按钮按照到文本框右侧的距离及其基线加以约束</p>
<ol>
<li>在 <strong>Palette</strong> 面板中，点击 <strong>Buttons</strong>。</li>
<li>将 <strong>Button</strong> 微件拖到设计编辑器中，并将其放在靠近右侧的位置。</li>
<li>创建一个从按钮左侧到文本框右侧的约束条件。</li>
<li>如需按水平对齐约束视图，请创建一个文本基线之间的约束条件。 为此，请右键点击按钮，然后选择 <strong>Show Baseline</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201048.png" alt="image-20210112201048560">。 基线锚点显示在按钮内部。 点击并按住此锚点，然后将其拖动到相邻文本框中显示的基线锚点上。</li>
</ol>
<p>结果应如图 6 所示。</p>
<blockquote>
<p><strong>注意</strong>：您还可以根据顶边或底边实现水平对齐。 但按钮的图片周围有内边距，因此如果以这种方式对齐，那么它们看上去是没有对齐的。</p>
</blockquote>
<h2 id="更改界面字符串"><a href="#更改界面字符串" class="headerlink" title="更改界面字符串"></a>更改界面字符串</h2><p>要预览界面，请点击工具栏中的 <strong>Select Design Surface</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200755.png" alt="image-20210112200755934">，然后选择 <strong>Design</strong>。 请注意，文本输入和按钮标签应设置为默认值。</p>
<p>如需更改界面字符串，请按以下步骤操作：</p>
<ol>
<li><p>打开 <strong>Project</strong> 窗口，然后依次打开 <strong>app &gt; res &gt; values &gt; strings.xml</strong>。</p>
<p>这是一个<a href="https://developer.android.google.cn/guide/topics/resources/string-resource" target="_blank" rel="noopener">字符串资源</a>文件，您可在此文件中指定所有界面字符串。 该文件可让您在一个位置管理所有界面字符串，使字符串的查找、更新和本地化变得更加容易。</p>
</li>
<li><p>点击窗口顶部的 <strong>Open editor</strong>。 此时将打开 <a href="https://developer.android.google.cn/studio/write/translations-editor" target="_blank" rel="noopener">Translations Editor</a>，它提供了一个可以添加和修改默认字符串的简单界面。 它还有助于让所有已翻译的字符串井然有序。</p>
</li>
<li><p>点击 <strong>Add Key</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201106.png" alt="image-20210112201106518">)) 可以创建一个新字符串作为文本框的“提示文本”。 此时会打开如图 7 所示的窗口。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201120.png" alt="image-20210112201120032"></p>
<p><strong>图 7.</strong> 用于添加新字符串的对话框</p>
<p>在 <strong>Add Key</strong> 对话框中，完成以下步骤：</p>
<ol>
<li>在 <strong>Key</strong> 字段中输入“edit_message”。</li>
<li>在 <strong>Default Value</strong> 字段中输入“Enter a message”。</li>
<li>点击 <strong>OK</strong>。</li>
</ol>
</li>
<li><p>再添加一个名为“button_send”且值为“Send”的键。</p>
</li>
</ol>
<p>现在，您可以为每个视图设置这些字符串。 要返回布局文件，请点击标签栏中的 <strong>activity_main.xml</strong>。 然后，添加字符串，如下所示：</p>
<ol>
<li>点击布局中的文本框，如果右侧还未显示 <strong>Attributes</strong> 窗口，请点击右侧边栏上的 <strong>Attributes</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201132.png" alt="image-20210112201132677">。</li>
<li>找到 <strong>text</strong> 属性（当前设为“Name”）并删除相应的值。</li>
<li>找到 <strong>hint</strong> 属性，然后点击文本框右侧的 <strong>Pick a Resource</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201148.png" alt="image-20210112201148482">。 在显示的对话框中，双击列表中的 <strong>edit_message</strong>。</li>
<li>点击布局中的按钮，找到其 <strong>text</strong> 属性（当前设为“Button”）。 然后点击 <strong>Pick a Resource</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201148.png" alt="image-20210112201148482">，并选择 <strong>button_send</strong>。</li>
</ol>
<h2 id="让文本框大小可灵活调整"><a href="#让文本框大小可灵活调整" class="headerlink" title="让文本框大小可灵活调整"></a>让文本框大小可灵活调整</h2><p>要创建一个适应不同屏幕尺寸的布局，您需要让文本框拉伸以填充去除按钮和外边距后剩余的所有水平空间。</p>
<p>继续操作之前，请点击工具栏中的 <strong>Select Design Surface</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200755.png" alt="image-20210112200755934">，然后选择 <strong>Blueprint</strong>。</p>
<p>如需让文本框大小可灵活调整，请按以下步骤操作：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201230.png" alt="image-20210112201230490"></p>
<p><strong>图 8.</strong> 选择 <strong>Create Horizontal Chain</strong> 后所得到的结果</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201301.png" alt="image-20210112201300993"></p>
<p><strong>图 9.</strong> 点击以将宽度更改为 <strong>Match Constraints</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201319.png" alt="image-20210112201319369"></p>
<p><strong>图 10.</strong> 文本框现在拉伸以填充剩余空间</p>
<ol>
<li><p>选择两个视图。要执行此操作，请点击一个视图，在按住 Shift 键的同时点击另一个视图，然后右键点击任一视图并依次选择 <strong>Chains &gt; Create Horizontal Chain</strong>。布局随即显示出来，如图 8 所示。</p>
<blockquote>
<p><a href="https://developer.android.google.cn/training/constraint-layout#constrain-chain" target="_blank" rel="noopener">链</a>是两个或多个视图之间的双向约束条件，可让您采用一致的方式安排链接的视图。</p>
</blockquote>
</li>
<li><p>选择按钮并打开 <strong>Attributes</strong> 窗口。 然后，使用 <strong>Attributes</strong> 窗口顶部的视图检查器，将右外边距设为 16 dp。</p>
</li>
<li><p>点击文本框以查看其属性。 然后，点击两次宽度指示器，确保将其设为 <strong>Match Constraints</strong>，如图 9 中的标注 1 所示。</p>
<blockquote>
<p>“Match constraints”表示宽度将延长以符合水平约束条件和外边距的定义。 因此，文本框将拉伸以填充去除按钮和所有外边距后剩余的水平空间。</p>
</blockquote>
</li>
</ol>
<p>现在，布局已经完成，如图 10 所示。</p>
<p>如果您的布局看起来不像预期的那样，请<strong>查看最终布局 XML</strong>，查看您的 XML 应该是什么样子。 将其与您在 <strong>Text</strong> 标签中看到的内容进行比较。 如果您的属性以不同的顺序显示，也没关系。</p>
<p>最终布局 XML</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout</span><br><span class="line">    xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line">    xmlns:app&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res-auto&quot;</span><br><span class="line">    xmlns:tools&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;tools&quot;</span><br><span class="line">    android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line">    android:layout_height&#x3D;&quot;match_parent&quot;</span><br><span class="line">    tools:context&#x3D;&quot;com.example.myfirstapp.MainActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id&#x3D;&quot;@+id&#x2F;editText&quot;</span><br><span class="line">        android:layout_width&#x3D;&quot;0dp&quot;</span><br><span class="line">        android:layout_height&#x3D;&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart&#x3D;&quot;16dp&quot;</span><br><span class="line">        android:layout_marginLeft&#x3D;&quot;16dp&quot;</span><br><span class="line">        android:layout_marginTop&#x3D;&quot;16dp&quot;</span><br><span class="line">        android:ems&#x3D;&quot;10&quot;</span><br><span class="line">        android:hint&#x3D;&quot;@string&#x2F;edit_message&quot;</span><br><span class="line">        android:inputType&#x3D;&quot;textPersonName&quot;</span><br><span class="line">        app:layout_constraintEnd_toStartOf&#x3D;&quot;@+id&#x2F;button&quot;</span><br><span class="line">        app:layout_constraintHorizontal_bias&#x3D;&quot;0.5&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf&#x3D;&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf&#x3D;&quot;parent&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id&#x3D;&quot;@+id&#x2F;button&quot;</span><br><span class="line">        android:layout_width&#x3D;&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height&#x3D;&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginEnd&#x3D;&quot;16dp&quot;</span><br><span class="line">        android:layout_marginStart&#x3D;&quot;16dp&quot;</span><br><span class="line">        android:text&#x3D;&quot;@string&#x2F;button_send&quot;</span><br><span class="line">        app:layout_constraintBaseline_toBaselineOf&#x3D;&quot;@+id&#x2F;editText&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf&#x3D;&quot;parent&quot;</span><br><span class="line">        app:layout_constraintHorizontal_bias&#x3D;&quot;0.5&quot;</span><br><span class="line">        app:layout_constraintStart_toEndOf&#x3D;&quot;@+id&#x2F;editText&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure>

<p>如需详细了解链以及 <code>ConstraintLayout</code> 的其他各种用途，请阅读<a href="https://developer.android.google.cn/training/constraint-layout" target="_blank" rel="noopener">使用 ConstraintLayout 构建自适应界面</a>。</p>
<h2 id="运行应用-1"><a href="#运行应用-1" class="headerlink" title="运行应用"></a>运行应用</h2><p>如果已在以上的内容中我们已经将我们的应用安装到设备上，现在只需点击工具栏中的 <strong>Apply Changes</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201335.png" alt="image-20210112201335436">，即可使应用更新为新的布局。 或者，点击 <strong>Run</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200204.png" alt="image-20210112200204324"> 以安装并运行应用。</p>
<p>当前该按钮没有任何作用。 接着我们将学习构建在点按该按钮后会启动的另一个 Activity。</p>
<h1 id="启动另一个-Activity"><a href="#启动另一个-Activity" class="headerlink" title="启动另一个 Activity"></a>启动另一个 Activity</h1><p>学完以上内容后，我们已经构建了一个应用，该应用将显示一个 Activity（单个屏幕），其中包含一个文本字段和一个<strong>发送</strong>按钮。 在本课中，将向 <code>MainActivity</code> 添加一些代码，以便在用户点按 <strong>Send</strong> 按钮时启动一个显示消息的新 Activity。</p>
<h2 id="响应“Send”按钮"><a href="#响应“Send”按钮" class="headerlink" title="响应“Send”按钮"></a>响应“Send”按钮</h2><p>我们可以按照以下步骤向 <code>MainActivity</code> 类添加一个在点按 <strong>Send</strong> 按钮时调用的方法：</p>
<ol>
<li><p>在 <strong>app &gt; java &gt; com.example.myfirstapp &gt; MainActivity</strong> 文件中，添加以下 <code>sendMessage()</code> 方法存根：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">/** Called when the user taps the Send button */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Do something in response to button</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们可能会看到一条错误，因为 Android Studio 无法解析用作方法参数的 <code>View</code> 类。要清除错误，请点击 <code>View</code> 声明，将光标置于其上，然后按 Alt+Enter（或在 Mac 上按 Option+Enter）进行快速修复。如果出现一个菜单，请选择 <strong>Import class</strong>。</p>
</li>
<li><p>返回到 <strong>activity_main.xml</strong> 文件，并从该按钮调用此方法：</p>
<ol>
<li>选择 Layout Editor 中的相应按钮。</li>
<li>在 <strong>Attributes</strong> 窗口中，找到 <strong>onClick</strong> 属性，并从其下拉列表中选择 <strong>sendMessage [MainActivity]</strong>。</li>
</ol>
<p>现在，当我们点按该按钮时，系统将调用 <code>sendMessage()</code> 方法。</p>
<p>请记下此方法中的详细信息。 系统需要这些信息来识别此方法是否与 <a href="https://developer.android.google.cn/reference/android/view/View#attr_android:onClick" target="_blank" rel="noopener"><code>android:onClick</code></a> 属性兼容。 具体来说，此方法具有以下特性：</p>
<ul>
<li>公开访问。</li>
<li>返回值为空，或在 Kotlin 中为隐式<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html" target="_blank" rel="noopener">单元</a>。</li>
<li><code>View</code> 是唯一的参数。这是您在第 1 步结束时点击的 <code>View</code> 对象。</li>
</ul>
</li>
<li><p>接下来，您将填写此方法，以读取文本字段的内容，并将该文本传递给另一个 Activity。</p>
</li>
</ol>
<h2 id="构建一个-Intent"><a href="#构建一个-Intent" class="headerlink" title="构建一个 Intent"></a>构建一个 Intent</h2><p>Intent 是在相互独立的组件（如两个 Activity）之间提供运行时绑定功能的对象。Intent 表示应用执行某项操作的意图。您可以使用 Intent 执行多种任务，但在本课中，您的 Intent 将用于启动另一个 Activity。</p>
<p>在 <code>MainActivity</code> 中，添加 <code>EXTRA_MESSAGE</code> 常量和 <code>sendMessage()</code> 代码，如下所示：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXTRA_MESSAGE = <span class="string">"com.example.myfirstapp.MESSAGE"</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Called when the user taps the Send button */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, DisplayMessageActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        EditText editText = (EditText) findViewById(R.id.editTextTextPersonName);</span><br><span class="line">        String message = editText.getText().toString();</span><br><span class="line">        intent.putExtra(EXTRA_MESSAGE, message);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>预计 Android Studio 会再次遇到 <strong>Cannot resolve symbol</strong> 错误。如需清除这些错误，请按 Alt+Enter（在 Mac 上则按 Option+Return）。您最后应导入以下内容</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br></pre></td></tr></table></figure>

<p><code>DisplayMessageActivity</code> 仍有错误，但没有关系。 您将在下一部分中修复该错误。</p>
<ul>
<li><p><code>sendMessage()</code> 将发生以下情况：</p>
<ul>
<li><p><code>Intent</code> 构造函数会获取两个参数：<code>Context</code> 和 <code>Class</code>。</p>
<p>首先使用 <code>Context</code> 参数，因为 <code>Activity</code> 类是 <code>Context</code> 的子类。</p>
<p>在本例中，系统将 <code>Intent,</code> 传递到的应用组件的 <code>Class</code> 参数为要启动的 Activity。</p>
</li>
<li><p><code>putExtra()</code> 方法将 <code>EditText</code> 的值添加到 Intent。<code>Intent</code> 能够以名为“extra”的键值对形式携带数据类型。</p>
<p>您的键是一个公共常量 <code>EXTRA_MESSAGE</code>，因为下一个 Activity 将使用该键检索文本值。为 Intent extra 定义键时，最好使用应用的软件包名称作为前缀。这样可以确保这些键是独一无二的，万一您的应用需要与其他应用进行交互。</p>
</li>
<li><p><code>startActivity()</code> 方法将启动一个由 <code>Intent</code> 指定的 <code>DisplayMessageActivity</code> 实例。接下来，您需要创建该类。</p>
</li>
</ul>
</li>
</ul>
<p><strong>注意</strong>：通过导航架构组件，您可以使用导航编辑器将一个 Activity 与另一个 Activity 相关联。 建立这种关联后，您可以利用 API 在用户触发关联的操作（例如，用户点击某个按钮时）时启动第二个 Activity。 如需了解详情，请参阅<a href="https://developer.android.google.cn/topic/libraries/architecture/navigation" target="_blank" rel="noopener">导航</a>。</p>
<h2 id="创建第二个-Activity"><a href="#创建第二个-Activity" class="headerlink" title="创建第二个 Activity"></a>创建第二个 Activity</h2><p>如需创建第二个 Activity，请按以下步骤操作：</p>
<ol>
<li>在 <strong>Project</strong> 窗口中，右键点击 <strong>app</strong> 文件夹，然后依次选择 <strong>New &gt; Activity &gt; Empty Activity</strong>。</li>
<li>在 <strong>Configure Activity</strong> 窗口中，输入“DisplayMessageActivity”作为 <strong>Activity Name</strong>。将所有其他属性保留为默认设置，然后点击 <strong>Finish</strong>。</li>
</ol>
<p>Android Studio 会自动执行三项操作：</p>
<ul>
<li>创建 <code>DisplayMessageActivity</code> 文件。</li>
<li>创建与 <code>DisplayMessageActivity</code> 文件对应的布局文件 <code>activity_display_message.xml</code>。</li>
<li>在 <code>AndroidManifest.xml</code> 中添加所需的 <activity> 元素。</li>
</ul>
<p>如果您运行应用并点按第一个 Activity 上的按钮，将启动第二个 Activity，但它为空。这是因为第二个 Activity 使用模板提供的空布局。</p>
<h2 id="添加文本视图"><a href="#添加文本视图" class="headerlink" title="添加文本视图"></a>添加文本视图</h2><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201617.png" alt="image-20210112201617369"><strong>图 1.</strong> 位于布局顶部中心的文本视图。</p>
<p>新 Activity 包含一个空白布局文件。 请按以下步骤操作，在显示消息的位置添加一个文本视图：</p>
<ol>
<li>打开 <strong>app &gt; res &gt; layout &gt; activity_display_message.xml</strong> 文件。</li>
<li>点击工具栏中的 <strong>Enable Autoconnection to Parent</strong><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112200837.png" alt="image-20210112200837611">。 系统将启用 Autoconnect。 参见图 1。</li>
<li>在 <strong>Palette</strong> 面板中，点击 <strong>Text</strong>，将 <strong>TextView</strong> 拖动到布局中，然后将其放置在靠近布局顶部中心的位置，使其贴靠到出现的垂直线上。 Autoconnect 将添加左侧和右侧约束条件，以便将该视图放置在水平中心位置。</li>
<li>再创建一个从文本视图顶部到布局顶部的约束条件，使该视图如图 1 中所示。</li>
</ol>
<p>或者，您可以对文本样式进行一些调整，方法是在 <strong>Attributes</strong> 窗口的 <strong>Common Attributes</strong> 面板中展开 <strong>textAppearance</strong>，然后更改 <strong>textSize</strong> 和 <strong>textColor</strong> 等属性。</p>
<h2 id="显示消息"><a href="#显示消息" class="headerlink" title="显示消息"></a>显示消息</h2><p>在此步骤中，您将修改第二个 Activity 以显示第一个 Activity 传递的消息。</p>
<ol>
<li><p>在 <code>DisplayMessageActivity</code> 中，将以下代码添加到 <code>onCreate()</code> 方法中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_display_message);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Get the Intent that started this activity and extract the string</span></span><br><span class="line">    Intent intent = getIntent();</span><br><span class="line">    String message = intent.getStringExtra(MainActivity.EXTRA_MESSAGE);</span><br><span class="line">   </span><br><span class="line">    <span class="comment">// Capture the layout's TextView and set the string as its text</span></span><br><span class="line">    TextView textView = findViewById(R.id.textView2);</span><br><span class="line">    textView.setText(message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>按 Alt+Enter（在 Mac 上则按 Option+Return）导入其他所需的类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="添加向上导航功能"><a href="#添加向上导航功能" class="headerlink" title="添加向上导航功能"></a>添加向上导航功能</h2><p>在您的应用中，不是主入口点的每个屏幕（所有不是主屏幕的屏幕）都必须提供导航功能，以便将用户引导至应用层次结构中的逻辑父级屏幕。 为此，请在<a href="https://developer.android.google.cn/training/appbar" target="_blank" rel="noopener">应用栏</a>中添加<strong>向上</strong>按钮。</p>
<p>要添加<strong>向上</strong>按钮，您需要在 <a href="https://developer.android.google.cn/guide/topics/manifest/manifest-intro" target="_blank" rel="noopener"><code>AndroidManifest.xml</code></a> 文件中声明哪个 Activity 是逻辑父级。打开 <strong>app &gt; manifests &gt; AndroidManifest.xml</strong> 文件，找到 <code>DisplayMessageActivity</code> 的 <code>&lt;activity&gt;</code> 标记，然后将其替换为以下代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".DisplayMessageActivity"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:parentActivityName</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- The meta-data tag is required if you support API level 15 and lower --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"android.support.PARENT_ACTIVITY"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:value</span>=<span class="string">".MainActivity"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Android 系统现在会自动向应用栏添加<strong>向上</strong>按钮。</p>
<h2 id="运行应用-2"><a href="#运行应用-2" class="headerlink" title="运行应用"></a>运行应用</h2><p>点击工具栏中的 <strong>Apply Changes</strong> <img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112201335.png" alt="image-20210112201335436">以运行应用。 当应用打开后，在文本字段中输入一条消息，点按 <strong>Send</strong> 即会看到该消息显示在第二个 Activity 中。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210112222421.png" alt="image-20210112222420292"></p>
<p><strong>图 2.</strong> 应用已打开，文本输入在左侧屏幕并显示在右侧。</p>
<p>本课到此就结束了，您已经构建了自己的第一个 Android 应用！ </p>
<h1 id="Android-Studio快捷键"><a href="#Android-Studio快捷键" class="headerlink" title="Android-Studio快捷键"></a>Android-Studio快捷键</h1><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210114215924.png" alt="image-20210114215701871"></p>
]]></content>
  </entry>
  <entry>
    <title>Android-LN-2.Android常用布局和控件的应用</title>
    <url>/2021/01/15/Android-LN-2.Android%E5%B8%B8%E7%94%A8%E5%B8%83%E5%B1%80%E5%92%8C%E6%8E%A7%E4%BB%B6%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h1 id="LinearLayout布局的应用"><a href="#LinearLayout布局的应用" class="headerlink" title="LinearLayout布局的应用"></a><strong>LinearLayout布局的应用</strong></h1><h2 id="什么是布局"><a href="#什么是布局" class="headerlink" title="什么是布局"></a>什么是布局</h2><blockquote>
<p>定义 UI 的可视化结构</p>
<p>通过布局参数（LayoutParams）定义子元素的尺寸、位置</p>
<p>布局是不可见的容器（ViewGroup）</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115171203.png" alt=""></p>
</blockquote>
<h2 id="LinearLayout布局的使用"><a href="#LinearLayout布局的使用" class="headerlink" title="LinearLayout布局的使用"></a><strong>LinearLayout布局的使用</strong></h2><blockquote>
<p>LinearLayout是线性布局控件，它作为容器将其包含的子控件以横向或纵向的方式排列</p>
<p>子元素被排列成一行或一列</p>
<p><strong><em>orientation</em></strong> 属性设置排列方向</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115171157.png" alt=""></p>
<p><strong><em>layout_gravity</em></strong>属性 设置元素在容器中的位置</p>
<p><strong><em>gravity</em></strong>属性 设置元素所包含的内容或子元素在元素中的位置。</p>
<table>
<thead>
<tr>
<th>属性值</th>
<th align="left">位置</th>
</tr>
</thead>
<tbody><tr>
<td>top</td>
<td align="left">在布局顶部（horizontal  时可用）</td>
</tr>
<tr>
<td>bottom</td>
<td align="left">在布局底部（horizontal  时可用）</td>
</tr>
<tr>
<td>left</td>
<td align="left">在布局左则（vertical  时可用）</td>
</tr>
<tr>
<td>right</td>
<td align="left">在布局右侧（vertical  时可用）</td>
</tr>
<tr>
<td>center_horizontal</td>
<td align="left">水平居中（vertical  时可用）</td>
</tr>
<tr>
<td>center_vertical</td>
<td align="left">垂直居中（horizontal  时可用）</td>
</tr>
<tr>
<td>center</td>
<td align="left">水平或垂直居中（均有效）</td>
</tr>
</tbody></table>
<p><strong><em>hint</em></strong>属性 设置提示文字</p>
<p><strong><em>text</em></strong>属性 设置默认文字（可删除）</p>
</blockquote>
<h1 id="RelativeLayout布局的应用"><a href="#RelativeLayout布局的应用" class="headerlink" title="RelativeLayout布局的应用"></a><strong>RelativeLayout布局的应用</strong></h1><h2 id="RelativeLayout布局"><a href="#RelativeLayout布局" class="headerlink" title="RelativeLayout布局"></a>RelativeLayout布局</h2><blockquote>
<p>元素在相对位置显示</p>
<p>可避免嵌套，保持简洁的层次结构</p>
<p>如下图所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115172704.png" alt="image-20210115172704358"></p>
<table>
<thead>
<tr>
<th><strong>属性名称</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>layout_alignParentTop</td>
<td>父元素顶部对齐（true）</td>
</tr>
<tr>
<td>layout_alignParentBottom</td>
<td>父元素底部对齐（true）</td>
</tr>
<tr>
<td>layout_alignParentStart</td>
<td>父元素左侧对齐（true）</td>
</tr>
<tr>
<td>layout_alignParentEnd</td>
<td>父元素右侧对齐（true）</td>
</tr>
<tr>
<td>layout_centerHorizontal</td>
<td>水平居中（true）</td>
</tr>
<tr>
<td>layout_centerVertical</td>
<td>垂直居中（true）</td>
</tr>
<tr>
<td>layout_marginTop</td>
<td>距离顶部</td>
</tr>
<tr>
<td>layout_marginBottom</td>
<td>距离底部</td>
</tr>
<tr>
<td>layout_marginStart</td>
<td>距离左侧</td>
</tr>
<tr>
<td>layout_marginEnd</td>
<td>距离右侧</td>
</tr>
<tr>
<td>layout_above</td>
<td>底部置于给定元素之上</td>
</tr>
<tr>
<td>llayout_below</td>
<td>顶部置于给定元素之下</td>
</tr>
<tr>
<td>layout_alignTop</td>
<td>顶部与给定元素顶部对齐</td>
</tr>
<tr>
<td>layout_alignBaseline</td>
<td>baseline  与给定元素的 baseline 对齐</td>
</tr>
<tr>
<td>layout_alignBottom</td>
<td>底部与给定元素底部对齐</td>
</tr>
<tr>
<td>layout_alignEnd</td>
<td>右侧对齐给定元素</td>
</tr>
<tr>
<td>layout_toStartOf</td>
<td>右侧对齐给定元素开始的位置</td>
</tr>
<tr>
<td>layout_toEndOf</td>
<td>左侧对齐给定元素结束的位置</td>
</tr>
</tbody></table>
</blockquote>
<h1 id="TextView、EditText控件的应用"><a href="#TextView、EditText控件的应用" class="headerlink" title="TextView、EditText控件的应用"></a><strong>TextView、EditText控件的应用</strong></h1><h2 id="TextView控件"><a href="#TextView控件" class="headerlink" title="TextView控件"></a><strong>TextView控件</strong></h2><blockquote>
<p>显示文字</p>
<p>只读</p>
<p>可设置字体、字号、颜色、链接等样式</p>
</blockquote>
<h3 id="View与TextView的关系"><a href="#View与TextView的关系" class="headerlink" title="View与TextView的关系"></a><strong>View与TextView的关系</strong></h3><p>TextView由View控件派生而来</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115173619.png" alt="image-20210115173619457"></p>
<h2 id="EditText控件"><a href="#EditText控件" class="headerlink" title="EditText控件"></a><strong>EditText控件</strong></h2><blockquote>
<p>显示和编辑文字</p>
<p>可编辑</p>
<p>可设置软键盘类型</p>
</blockquote>
<h3 id="TextView与EditText的关系"><a href="#TextView与EditText的关系" class="headerlink" title="TextView与EditText的关系"></a><strong>TextView与EditText的关系</strong></h3><p>EditText由TextView派生而来</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115174124.png" alt="image-20210115173919206"></p>
<h1 id="Button控件的应用"><a href="#Button控件的应用" class="headerlink" title="Button控件的应用"></a><strong>Button控件的应用</strong></h1><h2 id="Button控件"><a href="#Button控件" class="headerlink" title="Button控件"></a>Button控件</h2><blockquote>
<p>普通按钮</p>
<p>带图标的按钮</p>
<p>按钮事件</p>
</blockquote>
<h2 id="Button与TextView的关系"><a href="#Button与TextView的关系" class="headerlink" title="Button与TextView的关系"></a><strong>Button与TextView的关系</strong></h2><blockquote>
<p>Button由TextView派生而来</p>
</blockquote>
<h2 id="Button控件的事件"><a href="#Button控件的事件" class="headerlink" title="Button控件的事件"></a><strong>Button控件的事件</strong></h2><blockquote>
<ul>
<li><p>单击事件</p>
<p>通过触屏或鼠标点击按钮所激发的事件</p>
</li>
<li><p>长按事件<br> 通过触屏或鼠标按下按钮控并保持不放开所激发的事件</p>
</li>
</ul>
</blockquote>
<h2 id="Button控件单点事件定义方法"><a href="#Button控件单点事件定义方法" class="headerlink" title="Button控件单点事件定义方法"></a><strong>Button控件单点事件定义方法</strong></h2><blockquote>
<ul>
<li><p>通过设置控件属性<br> Button控件提供了onClick属性</p>
</li>
<li><p>事件监听器绑定方法<br> 通过调用控件的setOnClickListener绑定相应方法</p>
</li>
</ul>
</blockquote>
<h1 id="RadioButton控件的应用"><a href="#RadioButton控件的应用" class="headerlink" title="RadioButton控件的应用"></a><strong>RadioButton控件的应用</strong></h1><h2 id="RadioButton控件"><a href="#RadioButton控件" class="headerlink" title="RadioButton控件"></a><strong>RadioButton控件</strong></h2><blockquote>
<p>单项选择的实现</p>
<p>通过分组容器对RadioButton进行分组</p>
</blockquote>
<h2 id="RadioButton的继承关系图"><a href="#RadioButton的继承关系图" class="headerlink" title="RadioButton的继承关系图"></a><strong>RadioButton的继承关系图</strong></h2><blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115175301.png" alt="image-20210115175301752"></p>
</blockquote>
<h1 id="CheckBox控件的应用"><a href="#CheckBox控件的应用" class="headerlink" title="CheckBox控件的应用"></a><strong>CheckBox控件的应用</strong></h1><h2 id="CheckBox控件"><a href="#CheckBox控件" class="headerlink" title="CheckBox控件"></a><strong>CheckBox控件</strong></h2><blockquote>
<p>核选项的实现</p>
<p>多项选择的实现</p>
</blockquote>
<h1 id="用户登录小案例"><a href="#用户登录小案例" class="headerlink" title="用户登录小案例"></a><strong>用户登录小案例</strong></h1><blockquote>
<p>设计一套登录界面，用户可输入用户名、密码，同时可勾选“记住密码”选项。</p>
</blockquote>
<h2 id="xml页"><a href="#xml页" class="headerlink" title="xml页"></a>xml页</h2><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115175706.png" alt="image-20210115175705874"></p>
<h2 id="xml页代码"><a href="#xml页代码" class="headerlink" title="xml页代码"></a>xml页代码</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".DisplayMessageActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/TVUserlogin"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"70dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center|center_horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"TextView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:text</span>=<span class="string">"@string/UserLogin"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/ETUserName"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">"@string/UserName"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"textPersonName"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/ETPassWord"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">"密码"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioGroup</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/LoginMethod"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/radioButtonByUsername"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:checked</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"RadioButton"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:text</span>=<span class="string">"用户名登陆"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/radioButtonByEmail"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"邮箱登录"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioGroup</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/checkBox"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"CheckBox"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:text</span>=<span class="string">"@string/RemeberUser"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btnLogin"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/Login"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/ErrorMessage"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"TextView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/design_default_color_error"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="后端控制页面代码"><a href="#后端控制页面代码" class="headerlink" title="后端控制页面代码"></a>后端控制页面代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.RadioButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DisplayMessageActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_display_message);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        // Get the Intent that started this activity and extract the string</span></span><br><span class="line"><span class="comment">//        Intent intent = getIntent();</span></span><br><span class="line"><span class="comment">//        String message = intent.getStringExtra(MainActivity.EXTRA_MESSAGE);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        // Capture the layout's TextView and set the string as its text</span></span><br><span class="line"><span class="comment">//        TextView textView = findViewById(R.id.TVUserlogin);</span></span><br><span class="line"><span class="comment">//        textView.setText(message);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//用户登录页</span></span><br><span class="line">        Button btnlogin = (Button) findViewById(R.id.btnLogin);</span><br><span class="line">        btnlogin.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                RadioButton rbtnByUsername = (RadioButton)findViewById(R.id.radioButtonByUsername);</span><br><span class="line">                <span class="comment">//RadioButton rbtnByEmail = (RadioButton)findViewById(R.id.radioButtonByEmail);</span></span><br><span class="line">                String DBUser,DBPassword;</span><br><span class="line">                <span class="keyword">if</span>(rbtnByUsername.isChecked())&#123;</span><br><span class="line">                    <span class="comment">//user-login</span></span><br><span class="line">                    DBUser = <span class="string">"llz"</span>;</span><br><span class="line">                    DBPassword = <span class="string">"123456"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">//Email-login</span></span><br><span class="line">                    DBUser = <span class="string">"llz@qq.com"</span>;</span><br><span class="line">                    DBPassword = <span class="string">"123456"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                EditText ETUsername = (EditText)findViewById(R.id.ETUserName);</span><br><span class="line">                EditText ETPassword = (EditText)findViewById(R.id.ETPassWord);</span><br><span class="line">                TextView ErrorMessage = (TextView)findViewById(R.id.ErrorMessage);</span><br><span class="line">                <span class="keyword">if</span>(ETUsername.getText().toString().equals(DBUser))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(ETPassword.getText().toString().equals(DBPassword))&#123;</span><br><span class="line">                        ErrorMessage.setText(<span class="string">"success"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        ErrorMessage.setText(<span class="string">"密码错误"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ErrorMessage.setText(<span class="string">"账号不存在"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115181101.png" alt="image-20210115181052387"></p>
]]></content>
  </entry>
  <entry>
    <title>Android-LN-3.Android常用布局和控件的应用</title>
    <url>/2021/01/17/Android-LN-3.Android%E5%B8%B8%E7%94%A8%E5%B8%83%E5%B1%80%E5%92%8C%E6%8E%A7%E4%BB%B6%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h1 id="FrameLayout布局的应用"><a href="#FrameLayout布局的应用" class="headerlink" title="FrameLayout布局的应用"></a>FrameLayout<strong>布局的应用</strong></h1><h2 id="FrameLayout布局"><a href="#FrameLayout布局" class="headerlink" title="FrameLayout布局"></a><strong>FrameLayout布局</strong></h2><blockquote>
<p>这个布局直接在屏幕上开辟出一块空白的区域,当我们往里面添加控件的时候,会默认把他们放到这块区域的左上角,而这种布局方式却没有任何的定位方式,所以它应用的场景并不多;</p>
<p>两个属性:</p>
<p>android:foreground:*设置改帧布局容器的前景图像</p>
<p>android:foregroundGravity:设置前景图像显示的位置</p>
</blockquote>
<h2 id="FrameLayout布局功能"><a href="#FrameLayout布局功能" class="headerlink" title="FrameLayout布局功能"></a><strong>FrameLayout布局功能</strong></h2><blockquote>
<p>子元素逐个重叠放入栈中</p>
<p>最后添加的子元素显示在最上面</p>
</blockquote>
<h1 id="Toast控件的应用"><a href="#Toast控件的应用" class="headerlink" title="Toast控件的应用"></a>Toast控件的应用</h1><h2 id="Toast控件的用途"><a href="#Toast控件的用途" class="headerlink" title="Toast控件的用途"></a><strong>Toast控件的用途</strong></h2><blockquote>
<p>弹出提示消息</p>
<p>可设置弹出时间长度</p>
</blockquote>
<h2 id="Toast控件的常用方法"><a href="#Toast控件的常用方法" class="headerlink" title="Toast控件的常用方法"></a><strong>Toast控件的常用方法</strong></h2><blockquote>
<table>
<thead>
<tr>
<th><strong>方法名称</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>makeText</td>
<td>定义消息内容</td>
</tr>
<tr>
<td>setGravity</td>
<td>设置布局位置</td>
</tr>
<tr>
<td>getView</td>
<td>获取Toast视图</td>
</tr>
<tr>
<td>show</td>
<td>显示</td>
</tr>
</tbody></table>
</blockquote>
<h3 id="方法一：默认纯文字提示"><a href="#方法一：默认纯文字提示" class="headerlink" title="方法一：默认纯文字提示"></a>方法一：默认纯文字提示</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast.makeText(<span class="keyword">this</span>, <span class="string">"登陆成功"</span>, Toast.LENGTH_LONG).show();</span><br></pre></td></tr></table></figure>

<p>演示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210115181101.png" alt=""></p>
<h3 id="方法二：自定义提示位置"><a href="#方法二：自定义提示位置" class="headerlink" title="方法二：自定义提示位置"></a>方法二：自定义提示位置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast toast = Toast.makeText(<span class="keyword">this</span>, <span class="string">"登录成功"</span>, Toast.LENGTH_LONG);</span><br><span class="line">                toast.setGravity(Gravity.CENTER,<span class="number">0</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p>演示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210116162247.png" alt="image-20210116162246919"></p>
<h3 id="方法三：自定义带图片信息提示"><a href="#方法三：自定义带图片信息提示" class="headerlink" title="方法三：自定义带图片信息提示"></a>方法三：自定义带图片信息提示</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast toast = Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"登录成功"</span>, Toast.LENGTH_LONG);</span><br><span class="line">                toast.setGravity(Gravity.CENTER,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                LinearLayout layout = (LinearLayout)toast.getView();</span><br><span class="line">                ImageView img = <span class="keyword">new</span> ImageView(getApplicationContext());</span><br><span class="line">                img.setImageResource(R.drawable.ic_launcher_foreground);</span><br><span class="line">                layout.addView(img,<span class="number">0</span>);</span><br><span class="line">                toast.show();</span><br></pre></td></tr></table></figure>

<p>演示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210116161926.png" alt="image-20210116161926125"></p>
<h3 id="方法四：自定义布局的信息提示"><a href="#方法四：自定义布局的信息提示" class="headerlink" title="方法四：自定义布局的信息提示"></a>方法四：自定义布局的信息提示</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ToastShow</span><span class="params">(String context)</span></span>&#123;</span><br><span class="line">        Toast toast = Toast.makeText(MainActivity.<span class="keyword">this</span>, context, Toast.LENGTH_LONG);</span><br><span class="line">        View view = LayoutInflater.from(MainActivity.<span class="keyword">this</span>).inflate(R.layout.toast_template,<span class="keyword">null</span>);</span><br><span class="line">        TextView TxtTaostContext = (TextView)view.findViewById(R.id.TxtTaostContext);</span><br><span class="line">        TxtTaostContext.setText(context);</span><br><span class="line">        toast.setView(view);</span><br><span class="line">        toast.setGravity(Gravity.CENTER,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="comment">//        LinearLayout layout = (LinearLayout)toast.getView();</span></span><br><span class="line"><span class="comment">//        ImageView img = new ImageView(getApplicationContext());</span></span><br><span class="line"><span class="comment">//        img.setImageResource(R.drawable.ic_launcher_foreground);</span></span><br><span class="line"><span class="comment">//        layout.addView(img,0);</span></span><br><span class="line">        toast.show();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>演示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210116172442.png" alt="image-20210116172440683"></p>
<h1 id="PopupWindow的应用"><a href="#PopupWindow的应用" class="headerlink" title="PopupWindow的应用"></a>PopupWindow的应用</h1><h2 id="PopupWindow的用途"><a href="#PopupWindow的用途" class="headerlink" title="PopupWindow的用途"></a><strong>PopupWindow的用途</strong></h2><blockquote>
<p>PopupWindow 是一个可以在Activity 之上显示任意View的控件。在Android经常使用，效果跟Dialog 效果类似，不同点在于可以控制显示的位置，比如底部显示等。</p>
<p>浮动弹出自定义窗体</p>
<p>可设置弹出位置  </p>
</blockquote>
<h2 id="PopupWindow的常用方法"><a href="#PopupWindow的常用方法" class="headerlink" title="PopupWindow的常用方法"></a><strong>PopupWindow的常用方法</strong></h2><blockquote>
<table>
<thead>
<tr>
<th><strong>方法名称</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>PopupWindow</td>
<td>构造函数，常用参数表：  contentView – 弹窗界面内容  width  – 弹窗宽度  height  – 弹窗高度  focusable  – 能否聚焦</td>
</tr>
<tr>
<td>setTouchable</td>
<td>是否支持点击操作</td>
</tr>
<tr>
<td>showAtLocation</td>
<td>按指定位置弹出显示自定义视图</td>
</tr>
<tr>
<td>showAsDropDown</td>
<td>下拉弹出显示自定义视图</td>
</tr>
</tbody></table>
</blockquote>
<h2 id="示例及代码"><a href="#示例及代码" class="headerlink" title="示例及代码"></a>示例及代码</h2><h3 id="Test01"><a href="#Test01" class="headerlink" title="Test01"></a>Test01</h3><blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Register</span><span class="params">(View view)</span></span>&#123;</span><br><span class="line">        Button RegBtn = (Button)findViewById(R.id.RegBtn);</span><br><span class="line"></span><br><span class="line">        View Contentview = LayoutInflater.from(MainActivity.<span class="keyword">this</span>).inflate(R.layout.popup_content,<span class="keyword">null</span>,<span class="keyword">false</span>);</span><br><span class="line">        PopupWindow window = <span class="keyword">new</span> PopupWindow(Contentview, LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.WRAP_CONTENT,<span class="keyword">true</span>);</span><br><span class="line">        window.setTouchable(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//window.showAsDropDown(RegBtn,0,0,Gravity.BOTTOM);</span></span><br><span class="line">        window.showAtLocation(getWindow().getDecorView(), Gravity.BOTTOM, <span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210116182243.png" alt="image-20210116182240627"></p>
</blockquote>
<h3 id="Test02"><a href="#Test02" class="headerlink" title="Test02"></a>Test02</h3><blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.KITKAT)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Register</span><span class="params">(View view)</span></span>&#123;</span><br><span class="line">        Button RegBtn = (Button)findViewById(R.id.RegBtn);</span><br><span class="line"></span><br><span class="line">        View Contentview = LayoutInflater.from(MainActivity.<span class="keyword">this</span>).inflate(R.layout.popup_content,<span class="keyword">null</span>,<span class="keyword">false</span>);</span><br><span class="line">        PopupWindow window = <span class="keyword">new</span> PopupWindow(Contentview, LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.WRAP_CONTENT,<span class="keyword">true</span>);</span><br><span class="line">        window.setTouchable(<span class="keyword">true</span>);</span><br><span class="line">        window.showAsDropDown(RegBtn,<span class="number">0</span>,<span class="number">0</span>,Gravity.BOTTOM);</span><br><span class="line"><span class="comment">//        window.showAtLocation(getWindow().getDecorView(), Gravity.BOTTOM, 0,0);</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210116182408.png" alt="image-20210116182408513"></p>
</blockquote>
<h1 id="AlertDialog的应用"><a href="#AlertDialog的应用" class="headerlink" title="AlertDialog的应用"></a>AlertDialog的应用</h1><h2 id="AlertDialog的用途"><a href="#AlertDialog的用途" class="headerlink" title="AlertDialog的用途"></a><strong>AlertDialog的用途</strong></h2><blockquote>
<p>弹出警告窗体，提示重要信息，提示用户再次确认操作</p>
<p>可设置确认、取消按钮等事件</p>
</blockquote>
<h2 id="AlertDialog警告窗体的常用方法"><a href="#AlertDialog警告窗体的常用方法" class="headerlink" title="AlertDialog警告窗体的常用方法"></a><strong>AlertDialog警告窗体的常用方法</strong></h2><blockquote>
<table>
<thead>
<tr>
<th><strong>方法名称</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>show</td>
<td>显示警告窗体</td>
</tr>
<tr>
<td>isShowing</td>
<td>判断警告窗体是否处于显示状态</td>
</tr>
<tr>
<td>setTitle</td>
<td>设置警告窗体标题</td>
</tr>
<tr>
<td>setIcon</td>
<td>设置图标</td>
</tr>
<tr>
<td>setMessage</td>
<td>设置警告内容正文</td>
</tr>
<tr>
<td>setButton</td>
<td>设置操作按钮</td>
</tr>
</tbody></table>
</blockquote>
<h2 id="AlertDialog-Builder警告窗体的构造器的常用方法"><a href="#AlertDialog-Builder警告窗体的构造器的常用方法" class="headerlink" title="AlertDialog.Builder警告窗体的构造器的常用方法"></a><strong>AlertDialog.Builder警告窗体的构造器的常用方法</strong></h2><blockquote>
<table>
<thead>
<tr>
<th><strong>方法名称</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>AlertDialog.Builder</td>
<td>警告窗体构造器的构造函数</td>
</tr>
<tr>
<td>builder.create</td>
<td>创建警告窗体</td>
</tr>
</tbody></table>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SureReg</span><span class="params">(View view)</span></span>&#123;</span><br><span class="line">        AlertDialog alert = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>).create();</span><br><span class="line">        alert.setTitle(<span class="string">"用户协议确认"</span>);</span><br><span class="line">        alert.setIcon(R.drawable.ic_launcher_foreground);</span><br><span class="line">        alert.setMessage(<span class="string">"注册新用户需接受用户协议的约束，请您认真查阅用户协议的内容，并选择是否同意接受用户协议。"</span>);</span><br><span class="line">        alert.setButton(AlertDialog.BUTTON_POSITIVE,<span class="string">"确认"</span>,<span class="keyword">new</span> DialogInterface.OnClickListener()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                Button RegBtn = (Button)findViewById(R.id.RegBtn);</span><br><span class="line"></span><br><span class="line">                View Contentview = LayoutInflater.from(MainActivity.<span class="keyword">this</span>).inflate(R.layout.popup_content,<span class="keyword">null</span>,<span class="keyword">false</span>);</span><br><span class="line">                PopupWindow window = <span class="keyword">new</span> PopupWindow(Contentview, LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.WRAP_CONTENT,<span class="keyword">true</span>);</span><br><span class="line">                window.setTouchable(<span class="keyword">true</span>);</span><br><span class="line">                <span class="comment">//window.showAsDropDown(RegBtn,0,0,Gravity.BOTTOM);</span></span><br><span class="line">                window.showAtLocation(getWindow().getDecorView(), Gravity.BOTTOM, <span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        alert.setButton(AlertDialog.BUTTON_NEGATIVE,<span class="string">"取消"</span>,<span class="keyword">new</span> DialogInterface.OnClickListener()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                ToastShow(<span class="string">"只有接受用户协议，才能注册新用户。"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        alert.show();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210116205521.png" alt="image-20210116205519389"></p>
<h1 id="自定义对话框-CustomDialog-的应用"><a href="#自定义对话框-CustomDialog-的应用" class="headerlink" title="自定义对话框(CustomDialog)的应用"></a>自定义对话框(CustomDialog)的应用</h1><h2 id="自定义对话框"><a href="#自定义对话框" class="headerlink" title="自定义对话框"></a><strong>自定义对话框</strong></h2><blockquote>
<p>开发者可以设计继承于android.app.Dialog的自定义对话框派生类(有时习惯命名为CustomDialog)。</p>
<p>弹出自定义界面的对话框，用户可在对话框进行下一步操作</p>
<p>输入输出界面、操作按钮事件等均可自定义</p>
</blockquote>
<h2 id="Dialog派生类支持的常用方法"><a href="#Dialog派生类支持的常用方法" class="headerlink" title="Dialog派生类支持的常用方法"></a><strong>Dialog派生类支持的常用方法</strong></h2><blockquote>
<table>
<thead>
<tr>
<th><strong>方法</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>构造函数</td>
<td>实例化过程中的初始化程序，可自定义参数表传入用户自定义参数</td>
</tr>
<tr>
<td>onCreate</td>
<td>对话框初始化</td>
</tr>
<tr>
<td>show</td>
<td>显示对话框</td>
</tr>
</tbody></table>
</blockquote>
<p><code>CustomDialog类</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.Window;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.CheckBox;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomDialog</span> <span class="keyword">extends</span> <span class="title">Dialog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> OnCustomDialogLister customDialogLister;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomDialog</span><span class="params">(@NonNull Context context,OnCustomDialogLister customDialogLister)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        <span class="keyword">this</span>.customDialogLister = customDialogLister;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnCustomDialogLister</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btnConfirmLicenseClicked</span><span class="params">(<span class="keyword">boolean</span> isConfirm)</span></span>;</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.customer_dialog);</span><br><span class="line"></span><br><span class="line">        Window window = <span class="keyword">this</span>.getWindow();</span><br><span class="line">        WindowManager.LayoutParams lp = window.getAttributes();</span><br><span class="line">        lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">        <span class="keyword">this</span>.getWindow().setAttributes(lp);</span><br><span class="line"></span><br><span class="line">        Button btnConfirmLicense = (Button)findViewById(R.id.BtnConfirmLicense);</span><br><span class="line">        btnConfirmLicense.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                CheckBox cbConfirm = (CheckBox)findViewById(R.id.CbConfirmLicense);</span><br><span class="line">                customDialogLister.btnConfirmLicenseClicked(cbConfirm.isChecked());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>customer_dialog.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/TxtLicense"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">"8"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"start|top"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"textMultiLine"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/TxtUserLicense"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/CbConfirmLicense"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/CbLicense"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/BtnConfirmLicense"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/BtnConfirm"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Main.Activivy.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SureReg</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        CustomDialog customDialog = <span class="keyword">new</span> CustomDialog(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> CustomDialog.OnCustomDialogLister() &#123;</span><br><span class="line">            <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.KITKAT)</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btnConfirmLicenseClicked</span><span class="params">(<span class="keyword">boolean</span> isConfirm)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (isConfirm) &#123;</span><br><span class="line">                    ToastShow(<span class="string">"感谢您注册成为我们的新用户"</span>);</span><br><span class="line">                    Register(view);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    ToastShow(<span class="string">"只有同意才能注册"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        customDialog.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>示例</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210117154248.png" alt="image-20210117153905784"></p>
]]></content>
  </entry>
  <entry>
    <title>Android-LN-4.Android组件Activity</title>
    <url>/2021/01/20/Android-LN-4.Android%E7%BB%84%E4%BB%B6Activity/</url>
    <content><![CDATA[<h1 id="初识Activity"><a href="#初识Activity" class="headerlink" title="初识Activity"></a><strong>初识Activity</strong></h1><h2 id="关于Activity"><a href="#关于Activity" class="headerlink" title="关于Activity"></a><strong>关于Activity</strong></h2><blockquote>
<ol>
<li><p>可以与用户交互的一个单独的屏幕。</p>
<ul>
<li>例如：计算器、拨号屏幕等。</li>
</ul>
</li>
<li><p>Activity用来管理需要显示的各种组件。</p>
<ul>
<li>例如，按钮、输入框、文本框等等。</li>
</ul>
</li>
<li><p>一个应用程序一般由多个Activity构成。</p>
</li>
<li><p>Activity具有生命周期。</p>
</li>
</ol>
</blockquote>
<h2 id="创建Activity"><a href="#创建Activity" class="headerlink" title="创建Activity"></a><strong>创建Activity</strong></h2><h3 id="创建Activity的方法："><a href="#创建Activity的方法：" class="headerlink" title="创建Activity的方法："></a>创建Activity的方法：</h3><blockquote>
<ol>
<li><p>创建一个继承Activity类或Activity派生类的子类</p>
</li>
<li><p>实现回调方法onCreadte()，并调用setContentView(int LayoutResID)方法，加载布局文件。</p>
</li>
<li><p>在AndroidManifest.xml中声明Activity</p>
</li>
</ol>
</blockquote>
<h3 id="Activity的派生类"><a href="#Activity的派生类" class="headerlink" title="Activity的派生类"></a>Activity的派生类</h3><blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210117161434.png" alt="image-20210117161431846"></p>
<p>为了方便开发，一般继承AppCompatActivity而不直接继承Activity。</p>
</blockquote>
<h1 id="Intent和-IntentFilter-的解析"><a href="#Intent和-IntentFilter-的解析" class="headerlink" title="Intent和 IntentFilter 的解析"></a><strong>Intent和 IntentFilter 的解析</strong></h1><h2 id="了解Intent与IntentFilter"><a href="#了解Intent与IntentFilter" class="headerlink" title="了解Intent与IntentFilter"></a><strong>了解Intent与IntentFilter</strong></h2><h3 id="什么是Intent"><a href="#什么是Intent" class="headerlink" title="什么是Intent"></a><strong>什么是Intent</strong></h3><blockquote>
<p>Intent的中文意思是“意向、意图”。Android中提供了Intent机制来协助应用间的交互和应用程序内部的activity, service和broadcast receiver之间的交互。即使用Intent 实现程序的”调用意图”。</p>
</blockquote>
<h4 id="Intent包括如下的属性，用于完成执行的意图："><a href="#Intent包括如下的属性，用于完成执行的意图：" class="headerlink" title="Intent包括如下的属性，用于完成执行的意图："></a><strong>Intent包括如下的属性，用于完成执行的意图：</strong></h4><blockquote>
<ol>
<li><p>action（动作）: 用来表示意图的动作，如：查看，发邮件，打电话</p>
</li>
<li><p>category（类别）: 用来表示动作的类别。</p>
</li>
<li><p>data（数据）: 表示与动作要操作的数据。如：查看指定的联系人</p>
</li>
<li><p>type（数据类型）: 对data类型的描述。</p>
</li>
<li><p>extras（附件信息）: 附件信息。如：详细资料，一个文件，某事。</p>
</li>
<li><p>component（目标组件）: 目标组件。</p>
</li>
</ol>
</blockquote>
<h3 id="什么是IntentFilter"><a href="#什么是IntentFilter" class="headerlink" title="什么是IntentFilter"></a><strong>什么是IntentFilter</strong></h3><blockquote>
<p>顾名思义，IntentFilter是Intert的过滤器。 Android 操作系统使用过滤器来指定一系列活动、服务和广播接收器处理意图，需要借助于意图所指定的动作、类别、数据模式。</p>
<p>“过滤”大多情况下不在java代码中设置，而是在应用的manifest文件中作为<intent-filter>元素的方式声明。在 manifest 文件中使用 <intent-filter> 元素在活动，服务和广播接收器中列出对应的动作，类别和数据类型。</p>
</blockquote>
<h2 id="Activity间的跳转"><a href="#Activity间的跳转" class="headerlink" title="Activity间的跳转"></a><strong>Activity间的跳转</strong></h2><blockquote>
<p>Intent 调用分为两种：Explicit（显式意图）和 Implicit（隐式意图）</p>
<ul>
<li><p>Explicit（显式意图）:</p>
<p>显式意图经常用于连接应用程序的内部世界。例如，在一个应用中，需要从一个Activity跳转到另外一个Activity。</p>
</li>
</ul>
<ul>
<li><p>Implicit（隐式意图）:</p>
<p>隐式意图经常用于激活其他应用程序的组件。例如，启动浏览器打开一个网页，启动拨打电话界面等。</p>
</li>
</ul>
</blockquote>
<h3 id="显式Intent跳转Activity"><a href="#显式Intent跳转Activity" class="headerlink" title="显式Intent跳转Activity"></a><strong>显式Intent跳转Activity</strong></h3><blockquote>
<p>通过名称启动目标组件：</p>
<ol>
<li>实例化Intent对象。其中一个Intent构造方法：Intent(Context Context, Class&lt;?&gt; cls)</li>
<li>调用Activity.startActivity(Intent intent) 方法，启动一个Activity.</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过指定类名的显式意图</span></span><br><span class="line">Intent intent=<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,SecondActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">// 启动目标活动</span></span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="隐式Intent启动系统默认浏览器："><a href="#隐式Intent启动系统默认浏览器：" class="headerlink" title="隐式Intent启动系统默认浏览器："></a><strong>隐式Intent启动系统默认浏览器：</strong></h3><blockquote>
<p>当无法确定意图目标，即目标组件名称时，使用隐式Intent启动。通常用于启动其他应用的组件。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//准备Intent的data属性数据</span></span><br><span class="line">Uri uri = Uri.parse(<span class="string">"http://www.baidu.com"</span>);</span><br><span class="line"><span class="comment">//设置Intent的action属性和data属性</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW, uri);</span><br><span class="line"><span class="comment">//启动目标意图</span></span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="隐式Intent启动自定义“浏览器”："><a href="#隐式Intent启动自定义“浏览器”：" class="headerlink" title="隐式Intent启动自定义“浏览器”："></a><strong>隐式Intent启动自定义“浏览器”：</strong></h3><h4 id="向自定义浏览器的AndroidManiFest-xml文件添加过滤器配置"><a href="#向自定义浏览器的AndroidManiFest-xml文件添加过滤器配置" class="headerlink" title="向自定义浏览器的AndroidManiFest.xml文件添加过滤器配置"></a>向自定义浏览器的AndroidManiFest.xml文件添加过滤器配置</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.VIEW"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.DEFAULT"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.BROWSABLE"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"http"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"https"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="在MainAcitivity中获取网页地址"><a href="#在MainAcitivity中获取网页地址" class="headerlink" title="在MainAcitivity中获取网页地址"></a>在MainAcitivity中获取网页地址</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取Intent对象</span></span><br><span class="line">Intent intent=getIntent();</span><br><span class="line"><span class="comment">//获取intent对象中data属性的字符串数据</span></span><br><span class="line">String uriStr=intent.getDataString();</span><br></pre></td></tr></table></figure>

<h3 id="直接启动自定义“浏览器”："><a href="#直接启动自定义“浏览器”：" class="headerlink" title="直接启动自定义“浏览器”："></a><strong>直接启动自定义“浏览器”：</strong></h3><h4 id="1-在自定义浏览器的AndroidManifest-xml中增加过滤器action属性值。"><a href="#1-在自定义浏览器的AndroidManifest-xml中增加过滤器action属性值。" class="headerlink" title="1.在自定义浏览器的AndroidManifest.xml中增加过滤器action属性值。"></a>1.在自定义浏览器的AndroidManifest.xml中增加过滤器action属性值。</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">	……</span><br><span class="line">	&lt;action android:name=<span class="string">"com.ncvt.mybrower.start"</span> /&gt;</span><br><span class="line">	…… </span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure>

<h4 id="2-通过自定义浏览器设定的action动作：“com-ncvt-mybrower-start”，直接启动自定义浏览器。"><a href="#2-通过自定义浏览器设定的action动作：“com-ncvt-mybrower-start”，直接启动自定义浏览器。" class="headerlink" title="2.通过自定义浏览器设定的action动作：“com.ncvt.mybrower.start”，直接启动自定义浏览器。"></a>2.通过自定义浏览器设定的action动作：“com.ncvt.mybrower.start”，直接启动自定义浏览器。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//准备Intent的data属性数据</span></span><br><span class="line">Uri uri = Uri.parse(<span class="string">"http://www.baidu.com"</span>);</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.ncvt.mybrower.start"</span>,uri);</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>

<h1 id="Activity的传值"><a href="#Activity的传值" class="headerlink" title="Activity的传值"></a><strong>Activity的传值</strong></h1><h2 id="跳转Activity时传递数据"><a href="#跳转Activity时传递数据" class="headerlink" title="跳转Activity时传递数据"></a><strong>跳转Activity时传递数据</strong></h2><h3 id="方法一：直接把数据添加到Intent对象"><a href="#方法一：直接把数据添加到Intent对象" class="headerlink" title="方法一：直接把数据添加到Intent对象"></a><strong>方法一：直接把数据添加到Intent对象</strong></h3><blockquote>
<p>MainActivity启动SecondActivity，传递<strong>extra_data</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String data=<span class="string">"Hi, SecondActivity"</span>;</span><br><span class="line">Intent intent=<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,SecondActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//向intent对象添加数据</span></span><br><span class="line">intent.putExtra(<span class="string">"extra_data "</span>, data );</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>

<p>在SecondActivity接收<strong>extra_data</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取Intent对象</span></span><br><span class="line">Intent intent=getIntent();</span><br><span class="line"><span class="comment">//获取传递过来的String类型的数据</span></span><br><span class="line">String data=intent.getStringExtra(<span class="string">"extra_data "</span>);</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="方法二：把数据添加到Bundle（大篮子）对象"><a href="#方法二：把数据添加到Bundle（大篮子）对象" class="headerlink" title="方法二：把数据添加到Bundle（大篮子）对象"></a><strong>方法二：把数据添加到Bundle（大篮子）对象</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210118160808.png" alt="image-20210118160729295"></p>
<p>当我们需要连续传递数据或者向多个页面传递数据时，如果采用方法一就会特别繁琐，所以就有了方法二。</p>
<p>Bundle类用作携带数据，它类似于Map，用于存放key-value名值对形式的值。</p>
<blockquote>
<p>MainActivity向SecondActivity传递<strong>bubdle</strong>对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实例化bundle对象</span></span><br><span class="line">Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line"><span class="comment">//向bundle对象添加数据</span></span><br><span class="line">bundle.putString(<span class="string">"name"</span>, <span class="string">"张三"</span> );</span><br><span class="line">bundle.putInt(<span class="string">"age"</span>, <span class="number">20</span>);</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,SecondActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//向intent对象bundle</span></span><br><span class="line">intent.putExtras(bundle);</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>

<p>在SecondActivity接收<strong>bubdle</strong>对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取bundle对象</span></span><br><span class="line">Bundle bundle = getIntent().getExtras();</span><br><span class="line"><span class="comment">//通过key为“name”来获取value即 nameString.</span></span><br><span class="line">String name=bundle.getString(<span class="string">"name"</span>);</span><br><span class="line"><span class="keyword">int</span> age=bundle.getInt(<span class="string">"age"</span>);</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="得到Activity返回的数据"><a href="#得到Activity返回的数据" class="headerlink" title="得到Activity返回的数据"></a><strong>得到Activity返回的数据</strong></h2><blockquote>
<p><strong>startActivityForResult(Intent intent, int requestCode);</strong></p>
<p><strong>setResult(int resultCode, Intent data);</strong></p>
<p><strong>onActivityResult(int requestCode, int resultCode, Intent data)；</strong></p>
</blockquote>
<blockquote>
<p><strong>三个方法间的关系：</strong></p>
<p><strong>1.</strong> <strong>MainActivity通过调用startActivityForResult()跳转到OtherActivity。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 返回的结果码</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> REQUEST_CODE = <span class="number">1</span>; </span><br><span class="line"><span class="comment">//创建intent对象</span></span><br><span class="line">Intent intent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,OtherActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//启动OtherActivity，并发送请求码</span></span><br><span class="line">startActivityForResult(intent,REQUEST_CODE);</span><br></pre></td></tr></table></figure>

<p><strong>2.</strong> <strong>OtherActivity在自己关闭之前，通过setResult()方法返回数据给MainActivity。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">EditText editText=findViewById(R.id.editText);</span><br><span class="line"><span class="comment">//数据是使用Intent返回</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line"><span class="comment">//把返回数据存入Intent</span></span><br><span class="line">intent.putExtra(<span class="string">"result"</span>, editText.getText().toString());</span><br><span class="line"><span class="comment">//设置返回数据</span></span><br><span class="line"><span class="keyword">this</span>.setResult(<span class="number">0</span>,intent);</span><br><span class="line"><span class="comment">//关闭当前窗口</span></span><br><span class="line"><span class="keyword">this</span>.finish();</span><br></pre></td></tr></table></figure>

<p><strong>3.</strong> <strong>MainActivity通过复写onActivityResult()方法来取得回传值。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, @Nullable Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_CODE:</span><br><span class="line">                TextView textView = (TextView) findViewById(R.id.textView2);</span><br><span class="line">                textView.setText(data.getStringExtra(<span class="string">"result"</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210118184842.png" alt="image-20210118184836920" style="zoom:50%;" />

<img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210118184924.png" alt="image-20210118184924435" style="zoom:50%;" />

<img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210118184943.png" style="zoom:50%;" />



<h1 id="Activity的生命周期"><a href="#Activity的生命周期" class="headerlink" title="Activity的生命周期"></a><strong>Activity的生命周期</strong></h1><h2 id="关于Activity-栈（Task）"><a href="#关于Activity-栈（Task）" class="headerlink" title="关于Activity 栈（Task）"></a><strong>关于Activity 栈（Task）</strong></h2><blockquote>
<p>Task 就是一个栈 (A task is a stack of activities.) ，这个栈里面存放了很多 Activity ，它遵循着后进先出的原则。 栈有两个动作：进栈（把对象压入到栈当中）和出栈（把栈中的第一个对象从栈里面拿出来）。</p>
</blockquote>
<h2 id="关于Activity的生命周期"><a href="#关于Activity的生命周期" class="headerlink" title="关于Activity的生命周期"></a><strong>关于Activity的生命周期</strong></h2><blockquote>
<p>–Activity在进栈与出栈的过程中，一般意义上有四种状态：</p>
<p>1.当Activity位于栈顶时，此时正好处于屏幕最前方，此时处于<strong>运行状态</strong>；</p>
<p>2.当Activity失去了焦点但仍然部分可见（如栈顶的Activity是透明的或者栈顶Activity并不是铺满整个手机屏幕），此时处于<strong>暂停状态</strong>；</p>
<p>3.当Activity被其他Activity完全遮挡，此时此Activity对用户不可见，此时处于<strong>停止状态</strong>；</p>
<p>4.当Activity由于人为或系统原因（如低内存等）被销毁，此时处于<strong>销毁状态</strong>。</p>
</blockquote>
<h2 id="Activity的7个回调方法："><a href="#Activity的7个回调方法：" class="headerlink" title="Activity的7个回调方法："></a><strong>Activity的7个回调方法：</strong></h2><blockquote>
<p>1.<strong>onCreate()</strong> :当Activity第一次被创建时调用，完成活动的初始化操作。</p>
<p>2.<strong>onStart()</strong> :当用户可以看到这个Activity时调用。</p>
<p>3.<strong>onResume()</strong> :当获得了用户的焦点时,就是用户点击了屏幕。</p>
<p>4.<strong>onPause()</strong> :当系统准备启动或回复另一个活动时调用。</p>
<p>5.<strong>onStop()</strong> :当活动完全不可见时调用，当新启动的活动是对话框式的，还处于可见时，该方法不会被调用。</p>
<p>6.<strong>onDestroy()</strong>：活动被销毁时调用 。</p>
<p>7.<strong>onRestart()</strong>：当活动由停止状态变为运行状态时调用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210119103744.png" alt="image-20210119103651161"></p>
</blockquote>
<h2 id="Activity的状态："><a href="#Activity的状态：" class="headerlink" title="Activity的状态："></a><strong>Activity的状态：</strong></h2><p>1.运行状态：在前台、获取了焦点、可以交互</p>
<p>2.暂停状态：部分可见，是去了焦点、无法交互</p>
<p>3.停止状态：不可见、内存中保留Activity对象</p>
<p>4.非活动状态：不在以上三种状态中的Activity则处于非活动状态</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210119104914.png" alt="image-20210119104914454"></p>
<h2 id="Activity的3种生存期："><a href="#Activity的3种生存期：" class="headerlink" title="Activity的3种生存期："></a><strong>Activity的3种生存期：</strong></h2><blockquote>
<ol>
<li>完整生命周期：活动在onCreate() 方法和onDestroy()方法之间所经历的，就是完整生命周期。一般情况下，一个活动会在onCreate()方法中完成各种初始化， onDestroy()方法中完成释放资源的操作。</li>
</ol>
<p>2.前台生命周期：活动在onResume() 方法和onPause()方法之间所经历的就是前台生命周期。在前台生命周期内，活动总是处于运行状态，此时的活动可以与用户进行交互。</p>
<p>3.可视生命周期：活动在 onStart()方法与 onStop()方法之间所经历的，就是可视生命周期。在可视生命周期内，活动对于用户是可见的，但可能无法和用户进行交互。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210119111616.png" alt="image-20210119111616477"></p>
</blockquote>
<h3 id="体验完整生命周期"><a href="#体验完整生命周期" class="headerlink" title="体验完整生命周期"></a><strong>体验完整生命周期</strong></h3><blockquote>
<p>•启动Activity1后</p>
<p>onCreate()</p>
<p>onStart()</p>
<p>onResume()</p>
<p>•按Back键</p>
<p>onPause()</p>
<p>onStop()</p>
<p>onDestroy()</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210119134744.png" alt="image-20210119134744612"></p>
</blockquote>
<h3 id="体验前台生命周期"><a href="#体验前台生命周期" class="headerlink" title="体验前台生命周期"></a><strong>体验前台生命周期</strong></h3><blockquote>
<p>场景2：启动Activity1后，通过Activity1上的按钮启动Activity2(对话框)，Activity1处于休眠，但仍然可见，。在activity声明中添加对话框样式：</p>
<p>android:theme=“@android:style/Theme.AppCompat.Dialog”</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210119134744.png" alt="image-20210119134729359"></p>
</blockquote>
<h3 id="体验可视生命周期"><a href="#体验可视生命周期" class="headerlink" title="体验可视生命周期"></a><strong>体验可视生命周期</strong></h3><blockquote>
<p>场景3：Activity1启动后，启动来电和接听电话界面，将Activity1完全遮挡，然后挂断电话返回Activity1。</p>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210119134837.png" alt="image-20210119134614979"></p>
</blockquote>
<h1 id="Activity的启动模式"><a href="#Activity的启动模式" class="headerlink" title="Activity的启动模式"></a><strong>Activity的启动模式</strong></h1><h2 id="关于Activity的种启动模式"><a href="#关于Activity的种启动模式" class="headerlink" title="关于Activity的种启动模式"></a>关于Activity的种启动模式</h2><blockquote>
<p>在Android中每个界面都是一个Activity，切换界面操作其实是多个不同Activity之间的实例化操作。在Android中Activity的启动模式决定了Activity的启动运行方式。</p>
<p>Activity启动模式设置：</p>
<activity android:name=".MainActivity" android:launchMode="standard" />

<p>Activity的四种启动模式：</p>
<ol>
<li>Standard； </li>
<li>singleTop； </li>
<li>singleTask； </li>
<li>singleInstance</li>
</ol>
</blockquote>
<h3 id="Standard-模式"><a href="#Standard-模式" class="headerlink" title="Standard 模式"></a><strong>Standard</strong> <strong>模式</strong></h3><blockquote>
<p>默认启动模式，每次激活Activity时都会创建Activity，并放入任务栈中</p>
</blockquote>
<h3 id="singleTop-模式"><a href="#singleTop-模式" class="headerlink" title="singleTop 模式"></a><strong>singleTop</strong> <strong>模式</strong></h3><blockquote>
<p>如果在任务的栈顶正好存在该Activity的实例， 就重用该实例，否者就会创建新的实例并放入栈顶(即使栈中已经存在该Activity实例，只要不在栈顶，都会创建实例)。</p>
</blockquote>
<h3 id="singleTask-模式"><a href="#singleTask-模式" class="headerlink" title="singleTask 模式"></a><strong>singleTask</strong> <strong>模式</strong></h3><blockquote>
<p>如果在栈中已经有该Activity的实例，就重用该实例。重用时，会让该实例回到栈顶，因此在它上面的实例将会被移除栈。如果栈中不存在该实例，将会创建新的实例放入栈中。</p>
</blockquote>
<h3 id="singleInstance-模式"><a href="#singleInstance-模式" class="headerlink" title="singleInstance 模式"></a><strong>singleInstance</strong> <strong>模式</strong></h3><blockquote>
<p>在一个新栈中创建Activity实例，并让多个应用共享栈中的唯一这个Activity实例。任何应用再激活该Activity时，都会重用该栈中的实例，其效果相当于多个应用程序共享一个Activity。</p>
<p>在一个新栈中创建该Activity实例，并让多个应用共享改栈中的该Activity实例。一旦该模式的Activity的实例存在于某个栈中，任何应用再激活该Activity时都会重用该栈中的实例，其效果相当于多个应用程序共享一个应用，不管谁激活该Activity都会进入同一个应用中。</p>
</blockquote>
<h1 id="小案例：登录模块开发"><a href="#小案例：登录模块开发" class="headerlink" title="小案例：登录模块开发"></a><strong>小案例：登录模块开发</strong></h1><p>主界面代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/register_bg"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">"10dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"Launch Your App"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_status"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"140dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"20sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_id"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"17sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_email"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"17sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/btn_start_register"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@android:color/holo_blue_bright"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"register"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/btn_start_signin"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@android:color/holo_blue_bright"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"sign in"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注册界面代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/register_bg"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".RegisterActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">"10dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"REGISTER"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/et_reg_email"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"30dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"Email"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textEmailAddress"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/et_reg_id"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"ID"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textPersonName"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/et_reg_password"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"PassWord"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_reg_submit"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_blue_bright"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"register"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>登陆界面代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/register_bg"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".SigninActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">"10dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"Sign In"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/et_signin_id"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"ID"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textPersonName"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/et_signin_password"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"PassWord"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/btn_signin_submit"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@android:color/holo_blue_bright"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"sign in"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>主界面</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_REGISTER_CODE=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_SIGNIN_CODE=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView tvstatus;</span><br><span class="line">    <span class="keyword">private</span> TextView tvemail;</span><br><span class="line">    <span class="keyword">private</span> TextView tvid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        tvstatus = (TextView)findViewById(R.id.tv_status);</span><br><span class="line">        tvemail = (TextView)findViewById(R.id.tv_email);</span><br><span class="line">        tvid = (TextView)findViewById(R.id.tv_id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btn_start_signin_onclick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,SigninActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        startActivityForResult(intent,REQUEST_SIGNIN_CODE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btn_start_register_onclick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,RegisterActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        startActivityForResult(intent,REQUEST_REGISTER_CODE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, @Nullable Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        <span class="keyword">if</span>(data == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_REGISTER_CODE:</span><br><span class="line">                tvstatus.setText(<span class="string">"注册成功"</span>);</span><br><span class="line">                tvid.setText(<span class="string">"ID:"</span>+data.getStringExtra(<span class="string">"id"</span>));</span><br><span class="line">                tvemail.setText(<span class="string">"Email:"</span>+data.getStringExtra(<span class="string">"email"</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_SIGNIN_CODE:</span><br><span class="line">                tvstatus.setText(<span class="string">"登录成功"</span>);</span><br><span class="line">                tvid.setText(<span class="string">"您好，"</span>+data.getStringExtra(<span class="string">"id"</span>));</span><br><span class="line">                tvemail.setText(<span class="string">""</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>登陆界面代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SigninActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_signin);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btn_submit_signin_onclick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        EditText etId=findViewById(R.id.et_signin_id);</span><br><span class="line">        EditText etPassword=findViewById(R.id.et_signin_password);</span><br><span class="line">        Intent intent=<span class="keyword">new</span> Intent();</span><br><span class="line">        intent.putExtra(<span class="string">"id"</span>,etId.getText().toString());</span><br><span class="line">        intent.putExtra(<span class="string">"password"</span>,etPassword.getText().toString());</span><br><span class="line">        setResult(<span class="number">0</span>,intent);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注册界面代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegisterActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_register);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btn_submit_register_onclick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        EditText etId=findViewById(R.id.et_reg_id);</span><br><span class="line">        EditText etEmail=findViewById(R.id.et_reg_email);</span><br><span class="line">        EditText etPassword=findViewById(R.id.et_reg_password);</span><br><span class="line">        Intent intent=<span class="keyword">new</span> Intent();</span><br><span class="line">        intent.putExtra(<span class="string">"id"</span>,etId.getText().toString());</span><br><span class="line">        intent.putExtra(<span class="string">"email"</span>,etEmail.getText().toString());</span><br><span class="line">        intent.putExtra(<span class="string">"password"</span>,etPassword.getText().toString());</span><br><span class="line">        setResult(<span class="number">0</span>,intent);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Android-LN-5.Android高级组件-ListView和RecyclerView</title>
    <url>/2021/01/27/Android-LN-5.Android%E9%AB%98%E7%BA%A7%E7%BB%84%E4%BB%B6-ListView%E5%92%8CRecyclerView/</url>
    <content><![CDATA[<h1 id="ListView简介"><a href="#ListView简介" class="headerlink" title="ListView简介"></a><strong>ListView简介</strong></h1><h2 id="ListView介绍"><a href="#ListView介绍" class="headerlink" title="ListView介绍"></a><strong>ListView介绍</strong></h2><blockquote>
<p>在Android开发中，ListView是一个比较常用的控件。它以列表的形式展示具体数据内容，并且能够根据数据的长度自适应屏幕显示。</p>
</blockquote>
<h2 id="ListView控件的使用"><a href="#ListView控件的使用" class="headerlink" title="ListView控件的使用"></a><strong>ListView控件的使用</strong></h2><blockquote>
<ul>
<li><p>新建Android工程。</p>
</li>
<li><p>在activity_main.xml中加入ListView控件</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:id</span>=<span class="string">"@+id/lv"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="常用数据适配器（Adapter）"><a href="#常用数据适配器（Adapter）" class="headerlink" title="常用数据适配器（Adapter）"></a><strong>常用数据适配器（Adapter）</strong></h2><blockquote>
<p>在使用ListView时需要对其进行数据适配。为了实现这个功能，Android系统提供一系列的适配器（Adapter）对ListView进行数据适配。</p>
<p>适配器就像显示器，把复杂的数据按人们易于接受的方式来展示。</p>
<ol>
<li><p><strong>BaseAdapter</strong></p>
<p>即基本的适配器。它实际上就是一个抽象类，该类拥有四个抽象方法。在Android开发中，就是根据这几个抽象方法来对ListView进行数据适配的</p>
</li>
<li><p><strong>SimpleAdapter</strong></p>
<p>SimpleAdapter继承自BaseAdapter，实现了BaseAdapter的四个抽象方法，分别是getCount()、getItem()、getItemId()、getView()方法。 </p>
</li>
<li><p><strong>ArrayAdapter</strong></p>
<p>ArrayAdapter也继承自BaseAdapter，与SimpleAdapter相同。ArrayAdapter通常用于适配TextView控件，例如Android系统中的设置菜单（Setting）。</p>
</li>
</ol>
</blockquote>
<h3 id="BaseAdapter适配器"><a href="#BaseAdapter适配器" class="headerlink" title="BaseAdapter适配器"></a><strong>BaseAdapter适配器</strong></h3><blockquote>
<ul>
<li><p>BaseAdapter是使用得比较多，适用于ListView、GridView、Spinner等控件适配器，通过重写getView方法，展示自定义视图。</p>
</li>
<li><p>掌握BaseAdater的四个抽象方法：getItem(int)，getItemId(int)，getCount()，getView(int,View,ViewGroup)</p>
</li>
<li><p>使用convertView，ViewHolder 优化ListView</p>
</li>
</ul>
</blockquote>
<h2 id="案例-个人通讯录列表"><a href="#案例-个人通讯录列表" class="headerlink" title="案例: 个人通讯录列表"></a><strong>案例: 个人通讯录列表</strong></h2><blockquote>
<ol>
<li><p>自定义布局，用来显示listView的列表单项。</p>
</li>
<li><p>自定义BaseAdapter适配器。</p>
</li>
<li><p>绑定绑定数据适配器</p>
</li>
<li><p>运行通讯录</p>
</li>
</ol>
</blockquote>
<h4 id="UI布局设计"><a href="#UI布局设计" class="headerlink" title="UI布局设计"></a><strong>UI布局设计</strong></h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/item_img"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"130dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"130dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:srcCompat</span>=<span class="string">"@android:drawable/btn_star_big_on"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/item_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"TextView"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="自定义适配器BaseAdapter"><a href="#自定义适配器BaseAdapter" class="headerlink" title="自定义适配器BaseAdapter"></a><strong>自定义适配器BaseAdapter</strong></h4><blockquote>
<p>a. 自定义model类Person（数据对象）。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> img;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> img)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.img = img;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getImg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> img;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setImg</span><span class="params">(<span class="keyword">int</span> img)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.img = img;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>b. 自定义PersonAdapter适配器。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail.adapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.R;</span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.entity.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Person&gt; pdata = <span class="keyword">new</span> ArrayList&lt;Person&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PersonAdapter</span><span class="params">(List&lt;Person&gt; pdata, Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pdata = pdata;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pdata.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getItemId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//优化ListView</span></span><br><span class="line">    <span class="comment">//定义一个ViewHolder静态类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span></span>&#123;</span><br><span class="line">        <span class="comment">//定义属性，对应是列表项数据</span></span><br><span class="line">        <span class="keyword">public</span> ImageView myimg;</span><br><span class="line">        <span class="keyword">public</span> TextView myname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义ViewHolder对象</span></span><br><span class="line">        ViewHolder holder;</span><br><span class="line">        <span class="comment">//判断convertView是否为空，convertView对应的列表项</span></span><br><span class="line">        <span class="keyword">if</span> (convertView==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//新建</span></span><br><span class="line">            holder = <span class="keyword">new</span> ViewHolder();</span><br><span class="line">            convertView = LayoutInflater.from(context).inflate(R.layout.driftitem,parent,<span class="keyword">false</span>);</span><br><span class="line">            holder.myimg = (ImageView) convertView.findViewById(R.id.item_img);</span><br><span class="line">            holder.myname = (TextView) convertView.findViewById(R.id.item_name);</span><br><span class="line"></span><br><span class="line">            convertView.setTag(holder);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//复用列表项</span></span><br><span class="line">            holder = (ViewHolder) convertView.getTag();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置列表项数据</span></span><br><span class="line">        holder.myimg.setImageResource(pdata.get(position).getImg());</span><br><span class="line">        holder.myname.setText(pdata.get(position).getName());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<h4 id="绑定数据适配器"><a href="#绑定数据适配器" class="headerlink" title="绑定数据适配器"></a><strong>绑定数据适配器</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.adapter.PersonAdapter;</span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.entity.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DriftActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ListView lvdrift;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> PersonAdapter myAdapter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] names = &#123;<span class="string">"李铭"</span>,<span class="string">"小花"</span>,<span class="string">"宋妈"</span>,<span class="string">"张明"</span>,<span class="string">"姥爷"</span>,<span class="string">"表哥"</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] imgs = &#123;R.mipmap.tx1,R.mipmap.tx2,R.mipmap.tx3,</span><br><span class="line">            R.mipmap.tx4,R.mipmap.tx5,R.mipmap.tx6&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Person&gt; drift = <span class="keyword">new</span> ArrayList&lt;Person&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_drift);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示ListView</span></span><br><span class="line">        <span class="comment">//1.获取ListView数据</span></span><br><span class="line">        lvdrift = (ListView)findViewById(R.id.lv_drift);</span><br><span class="line">        <span class="comment">//初始化数据</span></span><br><span class="line">        initDataDrifts();</span><br><span class="line">        <span class="comment">//2.创建适配器对象(参数1：数据源,参数2：context 上下文)</span></span><br><span class="line">        myAdapter = <span class="keyword">new</span> PersonAdapter(drift,<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//3.加载适配器</span></span><br><span class="line">        lvdrift.setAdapter(myAdapter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化数据</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initDataDrifts</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;names.length;i++)&#123;</span><br><span class="line">            <span class="comment">//新建Person对象,存放头像及姓名</span></span><br><span class="line">            Person person = <span class="keyword">new</span> Person(names[i],imgs[i]);</span><br><span class="line">            <span class="comment">//将数据存入数据列表</span></span><br><span class="line">            drift.add(person);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="ListView的使用"><a href="#ListView的使用" class="headerlink" title="ListView的使用"></a><strong>ListView的使用</strong></h1><h2 id="ListView的常用监听事件"><a href="#ListView的常用监听事件" class="headerlink" title="ListView的常用监听事件"></a><strong>ListView的常用监听事件</strong></h2><blockquote>
<p>OnItemClickListener 处理视图中单个条目的点击事件</p>
<p>OnItemLongClickListener 处理视图中单个条目的长按事件</p>
<p>OnScrollListener 监视滚动的变换，常用于视图在滚动中加载数据</p>
</blockquote>
<h3 id="为通讯录加入点击事件"><a href="#为通讯录加入点击事件" class="headerlink" title="为通讯录加入点击事件"></a>为通讯录加入点击事件</h3><h4 id="实现OnItemClickListener监听。"><a href="#实现OnItemClickListener监听。" class="headerlink" title="实现OnItemClickListener监听。"></a>实现OnItemClickListener监听。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DriftActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">AdapterView</span>.<span class="title">OnItemClickListener</span></span></span><br></pre></td></tr></table></figure>

<h4 id="实现onItemClick方法。"><a href="#实现onItemClick方法。" class="headerlink" title="实现onItemClick方法。"></a>实现onItemClick方法。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实现点击方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取点击对象的条目</span></span><br><span class="line">    Person person = drift.get(position);</span><br><span class="line">    <span class="comment">//弹出点击通讯录人的姓名</span></span><br><span class="line">    Toast.makeText(<span class="keyword">this</span>,<span class="string">"您点击了第"</span>+position+</span><br><span class="line">            <span class="string">"条通讯录，姓名："</span>+person.getName(),Toast.LENGTH_LONG).show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="为通讯录加入滚动事件"><a href="#为通讯录加入滚动事件" class="headerlink" title="为通讯录加入滚动事件"></a><strong>为通讯录加入滚动事件</strong></h3><h4 id="实现OnScrollListener-监听。"><a href="#实现OnScrollListener-监听。" class="headerlink" title="实现OnScrollListener 监听。"></a>实现OnScrollListener 监听。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DriftActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">AdapterView</span>.<span class="title">OnItemClickListener</span>, <span class="title">AbsListView</span>.<span class="title">OnScrollListener</span></span></span><br></pre></td></tr></table></figure>

<h4 id="实现onScroll，onScrollStateChanged方法。"><a href="#实现onScroll，onScrollStateChanged方法。" class="headerlink" title="实现onScroll，onScrollStateChanged方法。"></a>实现onScroll，onScrollStateChanged方法。</h4><h4 id="滚动停止后，增加一条通讯录数据。"><a href="#滚动停止后，增加一条通讯录数据。" class="headerlink" title="滚动停止后，增加一条通讯录数据。"></a>滚动停止后，增加一条通讯录数据。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实现滚动方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScrollStateChanged</span><span class="params">(AbsListView view, <span class="keyword">int</span> scrollState)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断滚动状态</span></span><br><span class="line">    <span class="keyword">if</span>(scrollState == SCROLL_STATE_FLING) &#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">"手指离开屏幕，列表由于惯性继续滑动"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(scrollState == SCROLL_STATE_IDLE)&#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">"列表停止滑动"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"欣欣"</span>,R.mipmap.tx1);</span><br><span class="line">        drift.add(person);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//通知ListView刷新界面</span></span><br><span class="line">        myAdapter.notifyDataSetChanged();</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(scrollState == SCROLL_STATE_TOUCH_SCROLL)&#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">"手指处在屏幕，列表正在滑动"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScroll</span><span class="params">(AbsListView view, <span class="keyword">int</span> firstVisibleItem, <span class="keyword">int</span> visibleItemCount, <span class="keyword">int</span> totalItemCount)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="RecyclerView简介"><a href="#RecyclerView简介" class="headerlink" title="RecyclerView简介"></a><strong>RecyclerView简介</strong></h1><h2 id="RecyclerView介绍"><a href="#RecyclerView介绍" class="headerlink" title="RecyclerView介绍"></a><strong>RecyclerView介绍</strong></h2><blockquote>
<p>RecyclerView 是一个增强版的ListView</p>
<p>Android 5.0推出的，是support-v7包中的新组件（最低兼容到android 3.0版本）。</p>
<p>RecyclerView，提供了一种插拔式的体验，高度的解耦，异常的灵活，通过设置它提供的不同LayoutManager，ItemDecoration , ItemAnimator实现令人瞠目的效果。</p>
</blockquote>
<h2 id="RecyclerView相对于ListView的优点"><a href="#RecyclerView相对于ListView的优点" class="headerlink" title="RecyclerView相对于ListView的优点"></a><strong>RecyclerView相对于ListView的优点</strong></h2><blockquote>
<p>1、可以使用布局管理器LayoutManager来管理RecyclerView的显示方式：水平、垂直、网络、网格交错布局；</p>
<p>2、自定义item的分割条，实现自定义；</p>
<p>3、可以控制item的添加和删除的动画，非常自由，可以自定义动画，配合具体场景，效果非常棒；</p>
<p>4、可以动态的在指定位置添加和删除某一项，而列表不会回到顶部，动态的update列表数据；  </p>
<p>5、缺点：就是没有OnItemClickListenter(),需要自己在RecycleView内部自定义列表项的点击事件或则长按事件；</p>
<p>6、在Material Design中和CardView配合使用，显示效果非常突出。</p>
</blockquote>
<h2 id="案例-个人通讯录列表（二）"><a href="#案例-个人通讯录列表（二）" class="headerlink" title="案例: 个人通讯录列表（二）"></a><strong>案例: 个人通讯录列表（二）</strong></h2><blockquote>
<ol>
<li><p>自定义布局，用RecyclerView显示通讯录。</p>
</li>
<li><p>通过RecyclerView.Adapter适配器。</p>
</li>
<li><p>RecyclerView绑定绑定数据适配器</p>
</li>
<li><p>运行通讯录</p>
</li>
</ol>
</blockquote>
<h4 id="通讯录UI布局设计"><a href="#通讯录UI布局设计" class="headerlink" title="通讯录UI布局设计"></a><strong>通讯录UI布局设计</strong></h4><blockquote>
<p>a. 定义主布局文件，采用RecyclerView</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/register_bg"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".DriftActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/rvDrift"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>b. 复用布局文件Driftitem.xml，图文结构显示。</p>
</blockquote>
<h4 id="自定义适配器RecyclerView-Adapter"><a href="#自定义适配器RecyclerView-Adapter" class="headerlink" title="自定义适配器RecyclerView.Adapter"></a><strong>自定义适配器RecyclerView.Adapter</strong></h4><blockquote>
<p>a. 复用model类Person（数据对象）。</p>
<p>b. 自定义RecyclerView.Adapter适配器。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail.adapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.text.Layout;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.R;</span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.entity.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.w3c.dom.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRecyclerAdapter</span>  <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">MyRecyclerAdapter</span>.<span class="title">MyViewHolder</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Person&gt; pdata = <span class="keyword">new</span> ArrayList&lt;Person&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRecyclerAdapter</span><span class="params">(List&lt;Person&gt; pdata, Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pdata = pdata;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MyViewHolder <span class="title">onCreateViewHolder</span><span class="params">(@NonNull ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//填充布局，获取列表项布局文件</span></span><br><span class="line">        View itemview = LayoutInflater.from(context).inflate(R.layout.driftitem,parent,<span class="keyword">false</span>);</span><br><span class="line">        MyViewHolder myViewHolder = <span class="keyword">new</span> MyViewHolder(itemview);</span><br><span class="line">        <span class="keyword">return</span> myViewHolder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//填充onCreateViewHolder方法返回的holder控件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(@NonNull MyViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Person person = pdata.get(position);</span><br><span class="line">        holder.myimg.setImageResource(person.getImg());</span><br><span class="line">        holder.myname.setText(person.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//返回通讯录数据个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pdata.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</span><br><span class="line">        <span class="comment">//定义对应列表项</span></span><br><span class="line">        <span class="keyword">private</span> ImageView myimg;</span><br><span class="line">        <span class="keyword">private</span> TextView myname;</span><br><span class="line">        <span class="comment">//构造方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyViewHolder</span><span class="params">(@NonNull View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            myimg = (ImageView)itemView.findViewById(R.id.item_img);</span><br><span class="line">            myname = (TextView) itemView.findViewById(R.id.item_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<h4 id="RecyclerView绑定数据适配器"><a href="#RecyclerView绑定数据适配器" class="headerlink" title="RecyclerView绑定数据适配器"></a><strong>RecyclerView绑定数据适配器</strong></h4><blockquote>
<p>a. RecyclerView绑定绑定数据适配器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.DefaultItemAnimator;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.AbsListView;</span><br><span class="line"><span class="keyword">import</span> android.widget.AdapterView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.adapter.MyRecyclerAdapter;</span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.adapter.PersonAdapter;</span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.entity.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DriftActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RecyclerView Rvdrift;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyRecyclerAdapter myAdapter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] names = &#123;<span class="string">"李铭"</span>,<span class="string">"小花"</span>,<span class="string">"宋妈"</span>,<span class="string">"张明"</span>,<span class="string">"姥爷"</span>,<span class="string">"表哥"</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] imgs = &#123;R.mipmap.tx1,R.mipmap.tx2,R.mipmap.tx3,</span><br><span class="line">            R.mipmap.tx4,R.mipmap.tx5,R.mipmap.tx6&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Person&gt; drift = <span class="keyword">new</span> ArrayList&lt;Person&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_drift);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化数据</span></span><br><span class="line">        initDataBooks();</span><br><span class="line">        <span class="comment">//1.初始化控件</span></span><br><span class="line">        Rvdrift = findViewById(R.id.rvDrift);</span><br><span class="line">        <span class="comment">//2.设置RecyclerView布局管理器</span></span><br><span class="line">        Rvdrift.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>,LinearLayoutManager.VERTICAL,<span class="keyword">false</span>));</span><br><span class="line">        <span class="comment">//3.初始化数据适配器</span></span><br><span class="line">        myAdapter = <span class="keyword">new</span> MyRecyclerAdapter(drift,<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//4.采用默认动画效果</span></span><br><span class="line">        Rvdrift.setItemAnimator(<span class="keyword">new</span> DefaultItemAnimator());</span><br><span class="line">        <span class="comment">//5.设置适配器</span></span><br><span class="line">        Rvdrift.setAdapter(myAdapter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化数据</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initDataBooks</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;names.length;i++)&#123;</span><br><span class="line">            <span class="comment">//新建Person对象,存放头像及姓名</span></span><br><span class="line">            Person person = <span class="keyword">new</span> Person(names[i],imgs[i]);</span><br><span class="line">            <span class="comment">//将数据存入数据列表</span></span><br><span class="line">            drift.add(person);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<h1 id="RecyclerView的使用"><a href="#RecyclerView的使用" class="headerlink" title="RecyclerView的使用"></a><strong>RecyclerView的使用</strong></h1><h2 id="RecyclerView的OnItemClickListener监听器"><a href="#RecyclerView的OnItemClickListener监听器" class="headerlink" title="RecyclerView的OnItemClickListener监听器"></a><strong>RecyclerView的OnItemClickListener监听器</strong></h2><blockquote>
<p>没有提供setOnItemClickListener这个回调，也就是无法响应点击事件。</p>
<ol>
<li>定义监听器OnItemClickListener</li>
<li>Adapter中实现监听器OnItemClickListener</li>
<li>绑定监听器</li>
</ol>
</blockquote>
<h2 id="案例：可点击的个人通讯录列表（三）"><a href="#案例：可点击的个人通讯录列表（三）" class="headerlink" title="案例：可点击的个人通讯录列表（三）"></a><strong>案例：可点击的个人通讯录列表（三）</strong></h2><blockquote>
<ol>
<li><p>创建点回调接口：OnItemClickListener。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail.adapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnItemClick</span><span class="params">(View view,<span class="keyword">int</span> postion)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="2">
<li><p>Adapter里设置回调接口。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义监听</span></span><br><span class="line">   <span class="keyword">private</span> OnItemClickListener monItemClickListener;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMonItemClickListener</span><span class="params">(OnItemClickListener monItemClickListener)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.monItemClickListener = monItemClickListener;</span><br><span class="line">   &#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">   <span class="comment">//填充onCreateViewHolder方法返回的holder控件</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(@NonNull MyViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">       Person person = pdata.get(position);</span><br><span class="line">       holder.myimg.setImageResource(person.getImg());</span><br><span class="line">       holder.myname.setText(person.getName());</span><br><span class="line">       <span class="comment">//设置监听方法</span></span><br><span class="line">       <span class="keyword">if</span>(monItemClickListener != <span class="keyword">null</span>)&#123;</span><br><span class="line">           holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">               <span class="meta">@Override</span></span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                   monItemClickListener.OnItemClick(holder.itemView,position);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Activity使用点击回调接口。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//6.设置监听器</span></span><br><span class="line">       myAdapter.setMonItemClickListener(<span class="keyword">new</span> OnItemClickListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnItemClick</span><span class="params">(View view, <span class="keyword">int</span> postion)</span> </span>&#123;</span><br><span class="line">               <span class="comment">//获取调集通讯录的对象</span></span><br><span class="line">               Person person = drift.get(postion);</span><br><span class="line">               <span class="comment">//弹出提示</span></span><br><span class="line">               Toast.makeText(DriftActivity.<span class="keyword">this</span>,<span class="string">"您点击了第个通讯录，姓名为"</span>+person.getName(),Toast.LENGTH_LONG).show();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行通讯录</p>
</li>
</ol>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Android-LN-6.Android高级控件ViewPager和Fragment</title>
    <url>/2021/01/31/Android-LN-6.Android%E9%AB%98%E7%BA%A7%E6%8E%A7%E4%BB%B6ViewPager%E5%92%8CFragment/</url>
    <content><![CDATA[<h1 id="ViewPager的使用"><a href="#ViewPager的使用" class="headerlink" title="ViewPager的使用"></a>ViewPager的使用</h1><h2 id="ViewPager简介"><a href="#ViewPager简介" class="headerlink" title="ViewPager简介"></a>ViewPager简介</h2><ol>
<li>它是Android 3.0后引入的一个UI控件（视图滑动切换工具）</li>
<li>通过手势滑动可以完成View的切换，一般是用来做APP的引导页或者实现图片轮播。</li>
</ol>
<h2 id="ViewPager的使用要点"><a href="#ViewPager的使用要点" class="headerlink" title="ViewPager的使用要点"></a>ViewPager的使用要点</h2><ul>
<li>ViewPager是v4包中的一个类，继承自ViewGroup，是一个容器，可以在其中添加其他的view类。</li>
<li>ViewPager布局管理器允许翻转带数据的页面，可以通过实现PagerAdapter来显示视图。</li>
<li>ViewPager类需要一个PagerAdapter适配器类给它提供数据。</li>
</ul>
<h3 id="PagerAdapter的介绍"><a href="#PagerAdapter的介绍" class="headerlink" title="PagerAdapter的介绍"></a>PagerAdapter的介绍</h3><ul>
<li><p>适配器就像显示器，是把复杂的数据按人们易于接受的方式来展示。</p>
</li>
<li><p>PagerAdapter也是android.support.v4包中的类。</p>
</li>
<li><p>PagerAdapter主要是对ViewPager进行数据适配，以实现ViewPager控件的滑动效果。</p>
</li>
</ul>
<h3 id="PagerAdapter的使用（继承PagerAdapter类）"><a href="#PagerAdapter的使用（继承PagerAdapter类）" class="headerlink" title="PagerAdapter的使用（继承PagerAdapter类）"></a>PagerAdapter的使用（继承PagerAdapter类）</h3><ul>
<li>getCount()// 显示多少个页面</li>
<li>isViewFromObject(View, Object)//判断返回的view是否是来自Object</li>
<li>instantiateItem(ViewGroup, int)// 初始化指定位置的页面</li>
<li>destroyItem(ViewGroup, int, Object) // 销毁指定位置的页面</li>
</ul>
<h2 id="案例1：APP启动页的开发"><a href="#案例1：APP启动页的开发" class="headerlink" title="案例1：APP启动页的开发"></a>案例1：APP启动页的开发</h2><ol>
<li>在主布局文件中添加ViewPager控件</li>
<li>隐藏工程导航栏</li>
<li>新建三个布局页面，用来作为启动页面。</li>
<li>编写Adapter类，为ViewPager控件创建一个适配器。</li>
<li>编程实现启动页面的滑动功能</li>
</ol>
<h1 id="Fragment的使用"><a href="#Fragment的使用" class="headerlink" title="Fragment的使用"></a>Fragment的使用</h1><h2 id="Fragment简介"><a href="#Fragment简介" class="headerlink" title="Fragment简介"></a>Fragment简介</h2><ul>
<li><p>Android在3.0版本引入了 Fragment(碎片) 功能，它非常类似于Activity，可以像Activity一样包含布局。</p>
</li>
<li><p>它出现的初衷是为了适应大屏幕的平板电脑，使用Fragment我们可以把屏幕划分成几块，合理利用屏幕空间。</p>
</li>
<li><p>Fragment 通常是嵌套在 Activity 中使用。</p>
</li>
<li><p>现在想象这种场景：有两个Fragment，Fragment 1包含了一个ListView，每行显示一本新闻的标题。Fragment 2包含了TextView和自定义View，来显示新闻的标题和详细内容。</p>
</li>
<li><p>程序运行竖屏模式的平板或手机上，Fragment 1可能嵌入在一个Activity中，而Fragment 2可能嵌入在另一个Activity中，如下图：</p>
<img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210128141151.png" alt="image-20210128141113712" style="zoom:50%;" />
</li>
<li><p>程序运行在横屏模式的平板上，两个 Fragment 就可以嵌入在同一个 Activity 中，如下图：</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210128141151.png" alt="image-20210128141139950" style="zoom:50%;" />

<h2 id="Fragment使用要点"><a href="#Fragment使用要点" class="headerlink" title="Fragment使用要点"></a>Fragment使用要点</h2><ul>
<li>Fragment并不能单独使用，他需要嵌套在Activity 中使用，作为Activity界面的一部分组成出现。</li>
<li>可以在一个Activity中同时出现多个Fragment，并且一个Fragment也可在多个Activity中使用；</li>
<li>在Activity运行过程中，可以通过transaction的add()、remove()、replace()方法来添加、移除或者替换Fragment；</li>
<li>Fragment可以响应自己的输入事件，并且有自己的生命周期，但它的生命周期受其宿主Activity的生命周期影响。比如Activity 被destory销毁了，它也会跟着被销毁。</li>
<li>3.0之前的系统，需要先导入android-support-v4的jar包</li>
</ul>
<h2 id="Fragment-的生命周期"><a href="#Fragment-的生命周期" class="headerlink" title="Fragment 的生命周期"></a>Fragment 的生命周期</h2><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210128141532.png" alt="image-20210128141531802" style="zoom: 80%;" />

<h2 id="案例2：APP底部导航功能开发"><a href="#案例2：APP底部导航功能开发" class="headerlink" title="案例2：APP底部导航功能开发"></a>案例2：APP底部导航功能开发</h2><ol>
<li><p>在主布局文件中加入Fragment替换区，底部导航区，分割线等。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".FragmentActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/content_layout"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_above</span>=<span class="string">"@id/view_line_1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/view_line_1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"1dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_above</span>=<span class="string">"@id/Bottom_tap"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"#4A1A1A"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/Bottom_tap"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/iv_home"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">"@mipmap/home"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/view_line_2"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"1dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"#231313"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/iv_letter"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">"@mipmap/letter"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/view_line_3"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"1dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"#231313"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/iv_my"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">"@mipmap/my"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>新建三个简单的布局文件，作为Fragment的View对象，并分别进行标识。</p>
<p>每个文件代码格式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail.Fragments;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.R;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fragment_home</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建Fragment布局</span></span><br><span class="line">        View view = inflater.inflate(R.layout.layout_home, container, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在MainActivity.java里编写逻辑代码，实现UI及底部标签切换。</p>
</li>
<li><p>开启事务transaction，以实现底部导航功能。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.timeemail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentTransaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.Fragments.Fragment_home;</span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.Fragments.Fragment_letter;</span><br><span class="line"><span class="keyword">import</span> com.example.timeemail.Fragments.Fragment_my;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FragmentActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Fragment fragment_home, fragment_letter, fragment_my, nowFragment;</span><br><span class="line">    <span class="keyword">private</span> ImageView iv_home, iv_letter, iv_my;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_fragment);</span><br><span class="line">        initUI();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化ui界面</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUI</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        iv_my = (ImageView) findViewById(R.id.iv_my);</span><br><span class="line">        iv_home = (ImageView) findViewById(R.id.iv_home);</span><br><span class="line">        iv_letter = (ImageView) findViewById(R.id.iv_letter);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        //设置底部tab变化，默认第一个被选中</span></span><br><span class="line"><span class="comment">//        iv_home.setBackgroundColor(Color.DKGRAY);</span></span><br><span class="line"><span class="comment">//        iv_letter.setBackgroundColor(Color.WHITE);</span></span><br><span class="line"><span class="comment">//        iv_my.setBackgroundColor(Color.WHITE);</span></span><br><span class="line">        show_Fragment_home();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//为底部标签添加点击事件</span></span><br><span class="line">        iv_my.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        iv_home.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        iv_letter.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第一个标签被点击</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">show_Fragment_home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//开启事务，Fragment的切换是由事务控制的</span></span><br><span class="line">        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();</span><br><span class="line">        <span class="comment">//判断Fragment是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (fragment_home == <span class="keyword">null</span>) &#123;</span><br><span class="line">            fragment_home = <span class="keyword">new</span> Fragment_home();</span><br><span class="line">            <span class="comment">//添加Fragment到事务中</span></span><br><span class="line">            transaction.add(R.id.content_layout, fragment_home);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//隐藏所有的Fragment</span></span><br><span class="line">        hideAllFragment(transaction);</span><br><span class="line">        <span class="comment">//显示Fragment</span></span><br><span class="line">        transaction.show(fragment_home);</span><br><span class="line">        <span class="comment">//记录当前显示的Fragmnet</span></span><br><span class="line">        nowFragment = fragment_home;</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        transaction.commit();</span><br><span class="line">        <span class="comment">//设置底部标签的变化</span></span><br><span class="line">        iv_home.setBackgroundColor(Color.DKGRAY);</span><br><span class="line">        iv_letter.setBackgroundColor(Color.WHITE);</span><br><span class="line">        iv_my.setBackgroundColor(Color.WHITE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二个标签被点击</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">show_Fragment_letter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//开启事务，Fragment的切换是由事务控制的</span></span><br><span class="line">        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();</span><br><span class="line">        <span class="comment">//判断Fragment是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (fragment_letter == <span class="keyword">null</span>) &#123;</span><br><span class="line">            fragment_letter = <span class="keyword">new</span> Fragment_letter();</span><br><span class="line">            <span class="comment">//添加Fragment到事务中</span></span><br><span class="line">            transaction.add(R.id.content_layout, fragment_letter);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//隐藏所有的Fragment</span></span><br><span class="line">        hideAllFragment(transaction);</span><br><span class="line">        <span class="comment">//显示Fragment</span></span><br><span class="line">        transaction.show(fragment_letter);</span><br><span class="line">        <span class="comment">//记录当前显示的Fragmnet</span></span><br><span class="line">        nowFragment = fragment_letter;</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        transaction.commit();</span><br><span class="line">        <span class="comment">//设置底部标签的变化</span></span><br><span class="line">        iv_home.setBackgroundColor(Color.WHITE);</span><br><span class="line">        iv_letter.setBackgroundColor(Color.DKGRAY);</span><br><span class="line">        iv_my.setBackgroundColor(Color.WHITE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第三个标签被点击</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">show_Fragment_my</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//开启事务，Fragment的切换是由事务控制的</span></span><br><span class="line">        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();</span><br><span class="line">        <span class="comment">//判断Fragment是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (fragment_my == <span class="keyword">null</span>) &#123;</span><br><span class="line">            fragment_my = <span class="keyword">new</span> Fragment_my();</span><br><span class="line">            <span class="comment">//添加Fragment到事务中</span></span><br><span class="line">            transaction.add(R.id.content_layout, fragment_my);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//隐藏所有的Fragment</span></span><br><span class="line">        hideAllFragment(transaction);</span><br><span class="line">        <span class="comment">//显示Fragment</span></span><br><span class="line">        transaction.show(fragment_my);</span><br><span class="line">        <span class="comment">//记录当前显示的Fragmnet</span></span><br><span class="line">        nowFragment = fragment_my;</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        transaction.commit();</span><br><span class="line">        <span class="comment">//设置底部标签的变化</span></span><br><span class="line">        iv_home.setBackgroundColor(Color.WHITE);</span><br><span class="line">        iv_letter.setBackgroundColor(Color.WHITE);</span><br><span class="line">        iv_my.setBackgroundColor(Color.DKGRAY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//隐藏所有的Fragment</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">hideAllFragment</span><span class="params">(FragmentTransaction transaction)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (fragment_home!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            transaction.hide(fragment_home);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (fragment_letter!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            transaction.hide(fragment_letter);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (fragment_my!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            transaction.hide(fragment_my);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (view.getId() == R.id.iv_home) &#123;</span><br><span class="line">            <span class="comment">//第一个标签被点击</span></span><br><span class="line">            show_Fragment_home();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view.getId() == R.id.iv_letter) &#123;</span><br><span class="line">            <span class="comment">//第二个标签被点击</span></span><br><span class="line">            show_Fragment_letter();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view.getId() == R.id.iv_my) &#123;</span><br><span class="line">            <span class="comment">//第三个标签被点击</span></span><br><span class="line">            show_Fragment_my();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h1 id="ViewPager与Fragment的综合应用"><a href="#ViewPager与Fragment的综合应用" class="headerlink" title="ViewPager与Fragment的综合应用"></a>ViewPager与Fragment的综合应用</h1><ul>
<li><p>Google 官方也建议我们使用Fragment来填充ViewPager，这样可以更加方便的生成每个Page以及管理每个Page的生命周期。</p>
</li>
<li><p>Google给我们提供了两个不同的Adapter，他们分别是：FragmentPageAdapter和FragmentStatePagerAdapter，它们是专程用来呈现Fragment页面的，这些 Fragment页面会一直保存在Fragment Manager中，以便用户可以随时取用。</p>
</li>
<li><p>如果要使用FragmentPagerAdapter类，需要重写getItem()和getCount()两个方法。</p>
</li>
<li><p>ViewPager还有一个比较重要的函数是：</p>
<ul>
<li>viewPager.setOffscreenPageLimit(int limit); 默认：1（limit的值代表着还要缓存当前Fragment左右各limit个Fragment，一共会创建2*limit+1个Fragment。）</li>
</ul>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/llz-github/image/img1/20210128195228.png" alt="image-20210128195223394"></p>
<h2 id="Fragment适配器介绍"><a href="#Fragment适配器介绍" class="headerlink" title="Fragment适配器介绍"></a>Fragment适配器介绍</h2><h4 id="FragmentPageAdapter"><a href="#FragmentPageAdapter" class="headerlink" title="FragmentPageAdapter"></a>FragmentPageAdapter</h4><ol>
<li>用于实现Fragment的滑动效果</li>
<li>使用Fragment来填充ViewPager</li>
<li>适用于页面比较少的情况</li>
<li>FragmentPagerAdapter消耗更多的内存</li>
</ol>
<h4 id="FragmentStatePagerAdapter"><a href="#FragmentStatePagerAdapter" class="headerlink" title="FragmentStatePagerAdapter"></a>FragmentStatePagerAdapter</h4><ol>
<li>用于实现Fragment的滑动效果</li>
<li>使用Fragment来填充ViewPager</li>
<li>适用于页面比较多的情况</li>
<li>FragmentStatePagerAdapter省内存</li>
</ol>
<p>FragmentPagerAdapter适用于Fragment比较少的情况，它会把每一个Fragment保存在内存中，不用每次切换的时候，去保存现场，切换回来在重新创建，所以用户体验比较好。而对于Fragment比较多的情况，需要切换的时候销毁以前的Fragment以释放内存，就可以使用FragmentStatePagerAdapter </p>
<h2 id="案例3：商城导航APP"><a href="#案例3：商城导航APP" class="headerlink" title="案例3：商城导航APP"></a>案例3：商城导航APP</h2><ol>
<li>在主布局文件中加入ViewPager切换区，底部导航区，分割线。(复用)</li>
<li>新建三个简单的布局文件，作为Fragment的View对象，并分别进行标识。（复用）</li>
<li>创建FragmentPagerAdapter适配器，提供ViewPager数据源。</li>
<li>在MainActivity.java里编写逻辑代码，实现UI及底部标签切换。</li>
<li>编写代码，以实现对底部导航功能。</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>词汇_1</title>
    <url>/2021/02/02/%E8%AF%8D%E6%B1%87_1/</url>
    <content><![CDATA[<h1 id="教育（学习）场景"><a href="#教育（学习）场景" class="headerlink" title="教育（学习）场景"></a>教育（学习）场景</h1><h2 id="education-ˌedʒuˈkeɪʃn-n-教育"><a href="#education-ˌedʒuˈkeɪʃn-n-教育" class="headerlink" title="education /ˌedʒuˈkeɪʃn/ n. 教育"></a>education /ˌedʒuˈkeɪʃn/ n. 教育</h2><p>The roots of education are bitter，but the fruit is sweet. - Aristotle </p>
<p>译文：教育的根源是苦的，但结出的果实是甜的。 –亚里士多德</p>
<blockquote>
<p>root</p>
<blockquote>
<p>n 树根，根；根源；祖先</p>
<p>v 生根；固定；源于</p>
</blockquote>
</blockquote>
<blockquote>
<p>root in</p>
<blockquote>
<p>源于：originate from、derive from、flow from、stem from、result from</p>
</blockquote>
</blockquote>
<blockquote>
<p>bitter</p>
<blockquote>
<p>adj 苦的；艰苦的</p>
</blockquote>
</blockquote>
<blockquote>
<p>fruit</p>
<blockquote>
<p>n 水果；果实</p>
</blockquote>
<p>fruitful</p>
<blockquote>
<p>结果多的；多产的；富有成效的</p>
<p>I wish you a fruitful new year.</p>
</blockquote>
<p>fruitless：不结果的；徒劳的；不成功</p>
</blockquote>
<p>Education is the most powerful weapon which you can use to change the world. - Nelson Mandela</p>
<p>译文：教育是一个强有力的武器，你可以用这个武器来改变世界。 –纳尔逊·曼德拉 </p>
<blockquote>
<p>weapon：武器</p>
</blockquote>
<h1 id="orient-ˈoːrient-v-给…定方向，给…定中心"><a href="#orient-ˈoːrient-v-给…定方向，给…定中心" class="headerlink" title="orient /ˈɔːrient/ v. 给…定方向，给…定中心"></a>orient /ˈɔːrient/ v. 给…定方向，给…定中心</h1><blockquote>
<p>X-oriented ：以…为方向/中心</p>
<blockquote>
<p>test-oriented education：应试教育</p>
<p>quality-oriented education：素质教育</p>
</blockquote>
<p>market-oriented enconomy：市场经济</p>
<p>family-oriented：顾家的</p>
<blockquote>
<blockquote>
<p>quality：n 质量，素质</p>
<p>quantity：数量</p>
</blockquote>
<p>quality time：和家人在一起的时间</p>
</blockquote>
</blockquote>
<blockquote>
<p>Cancer ：巨蟹座</p>
<blockquote>
<p>星座：constellation、astrological sign</p>
<p>星相学、占星术：astrolog</p>
</blockquote>
<p>cancer：癌症</p>
</blockquote>
<p>Be the change you want to see in the world. </p>
<p>译文：欲变世界，先变其身。 </p>
<h1 id="liberal-education-通识教育"><a href="#liberal-education-通识教育" class="headerlink" title="liberal education 通识教育"></a>liberal education 通识教育</h1><blockquote>
<p>liberty /ˈlɪbərti/ n. 自由</p>
<blockquote>
<p>The Statue of Liberty：自由女神</p>
</blockquote>
</blockquote>
<blockquote>
<p>www.=world wide web 互联网 </p>
<p>.com=dot com 互联网</p>
</blockquote>
<blockquote>
<p>wise：聪明的</p>
<p>geek：呆子，极客，高手</p>
</blockquote>
<blockquote>
<p>provide /prəˈvaɪd/ v. 提供</p>
<blockquote>
<p>provide sb. with sth： 提供给某人某物 </p>
</blockquote>
<p>You should provide me with the passion/enthusiasm of study. </p>
<p>译文：你应该提供给我学习的激情。</p>
</blockquote>
<blockquote>
<p>broad：宽的、宽泛的、广泛的</p>
</blockquote>
<blockquote>
<p>base：n 基础、基地</p>
<p>basic：adj 基础的</p>
<blockquote>
<p>military base：军事基地</p>
<p>military strategy：军事策略</p>
<p>military training：军训</p>
<p>military uniform：军装</p>
</blockquote>
</blockquote>
<blockquote>
<p>academic：adj 学术活动</p>
<blockquote>
<p>adademic activity：学术活动</p>
<p>adademic background：学术背景</p>
<p>adademic corruption：学术腐败</p>
</blockquote>
</blockquote>
<blockquote>
<p>expose /ɪkˈspəʊz/： v. 暴露，曝光</p>
<p>exposure /ɪkˈspəʊʒər/： n. 暴露，曝光；接触，了解</p>
</blockquote>
<blockquote>
<p>numerous /ˈnuːmərəs/： adj. 大量的</p>
</blockquote>
<blockquote>
<p>produce /‘prɒdjuːs/： v. 生产，产生 </p>
<p>producing 是 produce 的现在分词</p>
</blockquote>
<blockquote>
<p> well-rounded /ˌwel ˈraʊndɪd/： adj. 全面的 </p>
</blockquote>
<h1 id="learn-lɜːrn-v-学习"><a href="#learn-lɜːrn-v-学习" class="headerlink" title="learn /lɜːrn/ v. 学习"></a>learn /lɜːrn/ v. 学习</h1><blockquote>
<p>Live and learn. </p>
<p>It’s never too old to learn. </p>
<p>“活到老，学到老。”</p>
</blockquote>
<blockquote>
<p>live</p>
<blockquote>
<p>v. 居住，活着 adj. 现场的 </p>
</blockquote>
<p>live off 依靠，依赖 </p>
<p>live show 现场演出 </p>
<p>live concert 现场演唱会 </p>
</blockquote>
<blockquote>
<p>learning /ˈlɜːrnɪŋ/ n. 知识；学识 </p>
<blockquote>
<p>v. learn 的 ing 形式 </p>
<p>suffering /ˈsʌfərɪŋ/ n. 痛苦，苦难 </p>
<blockquote>
<p>v. suffer 的 ing 形式 </p>
</blockquote>
<p>opening /ˈəʊpənɪŋ/ n. 空缺职位 </p>
<blockquote>
<p>v. open 的 ing 形式</p>
</blockquote>
</blockquote>
<p>legal learning 法律知识 </p>
<p>learned /ˈlɜːrnɪd/ adj. 博学的，有学问的 </p>
<p>A man becomes learned by asking questions. </p>
<p>译文：人提问然后博学。</p>
</blockquote>
<blockquote>
<p>critical thinking 批判性思维 </p>
<p>Seeing what everybody has seen, but thinking what nobody has thought.</p>
</blockquote>
<h1 id="study-ˈstvdi-n-学习；书房-v-学习"><a href="#study-ˈstvdi-n-学习；书房-v-学习" class="headerlink" title="study /ˈstʌdi/ n. 学习；书房 v. 学习"></a>study /ˈstʌdi/ n. 学习；书房 v. 学习</h1><p>Complacency is the enemy of study. </p>
<p>译文：自满是学习的敌人。 </p>
<blockquote>
<p>complacency /kəmˈpleɪsnsi/ n. 满足，自满 </p>
</blockquote>
<h1 id="knowledge-ˈnɑːlɪdʒ-n-知识；了解"><a href="#knowledge-ˈnɑːlɪdʒ-n-知识；了解" class="headerlink" title="knowledge /ˈnɑːlɪdʒ/ n. 知识；了解"></a>knowledge /ˈnɑːlɪdʒ/ n. 知识；了解</h1><p>Knowledge makes humble, ignorance makes proud.</p>
<p>译文：知识使人谦虚，无知使人骄傲。</p>
<blockquote>
<p>humble /ˈhʌmbl/ adj. 谦虚的，谦逊的 </p>
<p>modest /ˈmɑːdɪst/ adj. 谦虚的</p>
</blockquote>
<blockquote>
<p>proud /praʊd/ adj. 自豪的，骄傲的</p>
<p>ignorance /ˈɪɡnərəns/ n. 无知 </p>
</blockquote>
<blockquote>
<p>Prejudice is the child of ignorance. –William Hazlitt</p>
<p>译文：偏见是无知的产物。 –威廉·哈兹里特</p>
</blockquote>
<blockquote>
<p>prejudice /ˈpredʒədɪs/ n. 偏见 </p>
<p>Pride and Prejudice 《傲慢与偏见》</p>
</blockquote>
]]></content>
  </entry>
</search>
